// Code generated by protoc-gen-go. DO NOT EDIT.
// source: network.proto

package _go

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Vlan struct {
	Id                   *VlanID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VlanAddress          string   `protobuf:"bytes,2,opt,name=vlan_address,json=vlanAddress,proto3" json:"vlan_address,omitempty"`
	Capacity             int32    `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vlan) Reset()         { *m = Vlan{} }
func (m *Vlan) String() string { return proto.CompactTextString(m) }
func (*Vlan) ProtoMessage()    {}
func (*Vlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{0}
}

func (m *Vlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vlan.Unmarshal(m, b)
}
func (m *Vlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vlan.Marshal(b, m, deterministic)
}
func (m *Vlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vlan.Merge(m, src)
}
func (m *Vlan) XXX_Size() int {
	return xxx_messageInfo_Vlan.Size(m)
}
func (m *Vlan) XXX_DiscardUnknown() {
	xxx_messageInfo_Vlan.DiscardUnknown(m)
}

var xxx_messageInfo_Vlan proto.InternalMessageInfo

func (m *Vlan) GetId() *VlanID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Vlan) GetVlanAddress() string {
	if m != nil {
		return m.VlanAddress
	}
	return ""
}

func (m *Vlan) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type DHCPConfig struct {
	MacAddress           string   `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCPConfig) Reset()         { *m = DHCPConfig{} }
func (m *DHCPConfig) String() string { return proto.CompactTextString(m) }
func (*DHCPConfig) ProtoMessage()    {}
func (*DHCPConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{1}
}

func (m *DHCPConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCPConfig.Unmarshal(m, b)
}
func (m *DHCPConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCPConfig.Marshal(b, m, deterministic)
}
func (m *DHCPConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCPConfig.Merge(m, src)
}
func (m *DHCPConfig) XXX_Size() int {
	return xxx_messageInfo_DHCPConfig.Size(m)
}
func (m *DHCPConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCPConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DHCPConfig proto.InternalMessageInfo

func (m *DHCPConfig) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *DHCPConfig) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *DHCPConfig) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func init() {
	proto.RegisterType((*Vlan)(nil), "fleet.Vlan")
	proto.RegisterType((*DHCPConfig)(nil), "fleet.DHCPConfig")
}

func init() { proto.RegisterFile("network.proto", fileDescriptor_8571034d60397816) }

var fileDescriptor_8571034d60397816 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x49, 0xb4, 0x62, 0x67, 0xad, 0x48, 0x4e, 0xcb, 0xa2, 0xb8, 0xf6, 0xb4, 0xa7, 0x5d,
	0xd0, 0x5f, 0xa0, 0xed, 0x41, 0x6f, 0xb2, 0x07, 0x41, 0x2f, 0x65, 0x9a, 0x64, 0xeb, 0x60, 0x36,
	0x09, 0x49, 0x50, 0xfc, 0xf7, 0xd2, 0xb4, 0x2c, 0xde, 0xe6, 0xbd, 0x37, 0x7c, 0x6f, 0x06, 0x16,
	0x56, 0xa7, 0x1f, 0x17, 0xbe, 0x5a, 0x1f, 0x5c, 0x72, 0x62, 0x36, 0x18, 0xad, 0x53, 0x75, 0x75,
	0x74, 0x37, 0xa4, 0x0e, 0xc1, 0x52, 0xc1, 0xe9, 0x9b, 0x41, 0x2b, 0x6e, 0x80, 0x93, 0x2a, 0x59,
	0xcd, 0x9a, 0xe2, 0x7e, 0xd1, 0xe6, 0xed, 0x76, 0x1f, 0xbc, 0xac, 0x7b, 0x4e, 0x4a, 0xdc, 0xc1,
	0xc5, 0xb7, 0x41, 0xbb, 0x41, 0xa5, 0x82, 0x8e, 0xb1, 0xe4, 0x35, 0x6b, 0xe6, 0x7d, 0xb1, 0xf7,
	0x1e, 0x0f, 0x96, 0xa8, 0xe0, 0x5c, 0xa2, 0x47, 0x49, 0xe9, 0xb7, 0x3c, 0xa9, 0x59, 0x33, 0xeb,
	0x27, 0xbd, 0x7c, 0x07, 0x58, 0x3f, 0xaf, 0x5e, 0x57, 0xce, 0x0e, 0xb4, 0x13, 0xb7, 0x50, 0x8c,
	0x28, 0x27, 0x16, 0xcb, 0x2c, 0x18, 0x51, 0xfe, 0x43, 0x7d, 0xba, 0x98, 0x2c, 0x8e, 0xfa, 0xd8,
	0x34, 0x69, 0x71, 0x09, 0x9c, 0x7c, 0x2e, 0x98, 0xf7, 0x9c, 0xfc, 0xd3, 0xf5, 0x47, 0x45, 0x76,
	0x08, 0xd8, 0x19, 0xda, 0xc6, 0x2e, 0x1f, 0xde, 0xe5, 0xd7, 0x62, 0xb7, 0x73, 0xdb, 0xb3, 0x3c,
	0x3e, 0xfc, 0x05, 0x00, 0x00, 0xff, 0xff, 0x72, 0xc9, 0xe6, 0x75, 0x0f, 0x01, 0x00, 0x00,
}
