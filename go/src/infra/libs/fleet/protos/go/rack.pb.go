// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rack.proto

package _go

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Rack struct {
	// Serial number or asset tag
	Id       *RackID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// Descriptive name
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Capacity int32  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	// Types that are valid to be assigned to Rack:
	//	*Rack_ChromeRack
	//	*Rack_ChromeosRack
	Rack                 isRack_Rack `protobuf_oneof:"rack"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Rack) Reset()         { *m = Rack{} }
func (m *Rack) String() string { return proto.CompactTextString(m) }
func (*Rack) ProtoMessage()    {}
func (*Rack) Descriptor() ([]byte, []int) {
	return fileDescriptor_c01fa598ce731cfc, []int{0}
}

func (m *Rack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rack.Unmarshal(m, b)
}
func (m *Rack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rack.Marshal(b, m, deterministic)
}
func (m *Rack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rack.Merge(m, src)
}
func (m *Rack) XXX_Size() int {
	return xxx_messageInfo_Rack.Size(m)
}
func (m *Rack) XXX_DiscardUnknown() {
	xxx_messageInfo_Rack.DiscardUnknown(m)
}

var xxx_messageInfo_Rack proto.InternalMessageInfo

func (m *Rack) GetId() *RackID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Rack) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Rack) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Rack) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type isRack_Rack interface {
	isRack_Rack()
}

type Rack_ChromeRack struct {
	ChromeRack *ChromeRack `protobuf:"bytes,5,opt,name=chrome_rack,json=chromeRack,proto3,oneof"`
}

type Rack_ChromeosRack struct {
	ChromeosRack *ChromeOSRack `protobuf:"bytes,6,opt,name=chromeos_rack,json=chromeosRack,proto3,oneof"`
}

func (*Rack_ChromeRack) isRack_Rack() {}

func (*Rack_ChromeosRack) isRack_Rack() {}

func (m *Rack) GetRack() isRack_Rack {
	if m != nil {
		return m.Rack
	}
	return nil
}

func (m *Rack) GetChromeRack() *ChromeRack {
	if x, ok := m.GetRack().(*Rack_ChromeRack); ok {
		return x.ChromeRack
	}
	return nil
}

func (m *Rack) GetChromeosRack() *ChromeOSRack {
	if x, ok := m.GetRack().(*Rack_ChromeosRack); ok {
		return x.ChromeosRack
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Rack) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Rack_ChromeRack)(nil),
		(*Rack_ChromeosRack)(nil),
	}
}

type ChromeRack struct {
	Rpm                  []*RPM    `protobuf:"bytes,1,rep,name=rpm,proto3" json:"rpm,omitempty"`
	Kvm                  []*KVM    `protobuf:"bytes,2,rep,name=kvm,proto3" json:"kvm,omitempty"`
	Switches             []*Switch `protobuf:"bytes,3,rep,name=switches,proto3" json:"switches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChromeRack) Reset()         { *m = ChromeRack{} }
func (m *ChromeRack) String() string { return proto.CompactTextString(m) }
func (*ChromeRack) ProtoMessage()    {}
func (*ChromeRack) Descriptor() ([]byte, []int) {
	return fileDescriptor_c01fa598ce731cfc, []int{1}
}

func (m *ChromeRack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChromeRack.Unmarshal(m, b)
}
func (m *ChromeRack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChromeRack.Marshal(b, m, deterministic)
}
func (m *ChromeRack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChromeRack.Merge(m, src)
}
func (m *ChromeRack) XXX_Size() int {
	return xxx_messageInfo_ChromeRack.Size(m)
}
func (m *ChromeRack) XXX_DiscardUnknown() {
	xxx_messageInfo_ChromeRack.DiscardUnknown(m)
}

var xxx_messageInfo_ChromeRack proto.InternalMessageInfo

func (m *ChromeRack) GetRpm() []*RPM {
	if m != nil {
		return m.Rpm
	}
	return nil
}

func (m *ChromeRack) GetKvm() []*KVM {
	if m != nil {
		return m.Kvm
	}
	return nil
}

func (m *ChromeRack) GetSwitches() []*Switch {
	if m != nil {
		return m.Switches
	}
	return nil
}

type ChromeOSRack struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChromeOSRack) Reset()         { *m = ChromeOSRack{} }
func (m *ChromeOSRack) String() string { return proto.CompactTextString(m) }
func (*ChromeOSRack) ProtoMessage()    {}
func (*ChromeOSRack) Descriptor() ([]byte, []int) {
	return fileDescriptor_c01fa598ce731cfc, []int{2}
}

func (m *ChromeOSRack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChromeOSRack.Unmarshal(m, b)
}
func (m *ChromeOSRack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChromeOSRack.Marshal(b, m, deterministic)
}
func (m *ChromeOSRack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChromeOSRack.Merge(m, src)
}
func (m *ChromeOSRack) XXX_Size() int {
	return xxx_messageInfo_ChromeOSRack.Size(m)
}
func (m *ChromeOSRack) XXX_DiscardUnknown() {
	xxx_messageInfo_ChromeOSRack.DiscardUnknown(m)
}

var xxx_messageInfo_ChromeOSRack proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Rack)(nil), "fleet.Rack")
	proto.RegisterType((*ChromeRack)(nil), "fleet.ChromeRack")
	proto.RegisterType((*ChromeOSRack)(nil), "fleet.ChromeOSRack")
}

func init() { proto.RegisterFile("rack.proto", fileDescriptor_c01fa598ce731cfc) }

var fileDescriptor_c01fa598ce731cfc = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0xcb, 0x4b, 0xc3, 0x30,
	0x18, 0x37, 0x6d, 0x37, 0xe6, 0xb7, 0x87, 0x2c, 0x5e, 0x42, 0x99, 0x50, 0x76, 0xaa, 0x08, 0x2b,
	0x4c, 0x4f, 0x1e, 0xa7, 0x07, 0x45, 0x87, 0x92, 0x81, 0x07, 0x2f, 0x23, 0xcb, 0x32, 0x17, 0xd6,
	0x36, 0x25, 0x29, 0x8a, 0xff, 0xbb, 0x07, 0x49, 0xfa, 0xd0, 0xdd, 0xf2, 0x7b, 0xf2, 0xe3, 0x0b,
	0x80, 0x66, 0xfc, 0x30, 0x2b, 0xb4, 0x2a, 0x15, 0xee, 0xec, 0x52, 0x21, 0xca, 0x70, 0x94, 0x2a,
	0xce, 0x4a, 0xa9, 0xf2, 0x8a, 0x0e, 0xc7, 0x85, 0xd0, 0xb2, 0xd8, 0x0b, 0xcd, 0x52, 0x53, 0x53,
	0x43, 0x9b, 0x5a, 0xcb, 0x6d, 0x05, 0xa7, 0x3f, 0x08, 0x02, 0xca, 0xf8, 0x01, 0x5f, 0x80, 0x27,
	0xb7, 0x04, 0x45, 0x28, 0xee, 0xcf, 0x87, 0x33, 0x57, 0x37, 0xb3, 0xc2, 0xe3, 0x3d, 0xf5, 0xe4,
	0x16, 0x5f, 0x41, 0xaf, 0xe9, 0x26, 0x9e, 0x33, 0x9d, 0xd5, 0xa6, 0xe7, 0x9a, 0xa6, 0xad, 0x01,
	0x63, 0x08, 0x72, 0x96, 0x09, 0xe2, 0x47, 0x28, 0x3e, 0xa5, 0xee, 0x8d, 0x43, 0xe8, 0x71, 0x56,
	0x30, 0x2e, 0xcb, 0x6f, 0x12, 0x44, 0x28, 0xee, 0xd0, 0x16, 0xe3, 0x1b, 0xe8, 0xf3, 0xbd, 0x56,
	0x99, 0x58, 0xdb, 0x71, 0xa4, 0xe3, 0xfa, 0xc7, 0x75, 0xff, 0x9d, 0x53, 0xec, 0x94, 0x87, 0x13,
	0x0a, 0xbc, 0x45, 0xf8, 0x16, 0x86, 0x15, 0x52, 0xa6, 0xca, 0x75, 0x5d, 0xee, 0xfc, 0x28, 0xf7,
	0xb2, 0xaa, 0x93, 0x83, 0xc6, 0x6b, 0xf1, 0xa2, 0x0b, 0x81, 0x8d, 0x4c, 0x0d, 0xc0, 0x5f, 0x3f,
	0x9e, 0x80, 0xaf, 0x8b, 0x8c, 0xa0, 0xc8, 0x8f, 0xfb, 0x73, 0x68, 0x8e, 0xf0, 0xba, 0xa4, 0x96,
	0xb6, 0xea, 0xe1, 0x33, 0x23, 0xde, 0x91, 0xfa, 0xf4, 0xb6, 0xa4, 0x96, 0xc6, 0x97, 0xd0, 0x33,
	0x5f, 0xb2, 0xe4, 0x7b, 0x61, 0x88, 0xef, 0x2c, 0xcd, 0x15, 0x57, 0x8e, 0xa6, 0xad, 0x3c, 0x1d,
	0xc1, 0xe0, 0xff, 0xb8, 0xc5, 0xe4, 0x3d, 0x94, 0xf9, 0x4e, 0xb3, 0x24, 0x95, 0x1b, 0x93, 0xb8,
	0x50, 0xe2, 0x7e, 0xc7, 0x24, 0x1f, 0x6a, 0xd3, 0x75, 0xcf, 0xeb, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xc1, 0x6a, 0x04, 0x26, 0xef, 0x01, 0x00, 0x00,
}
