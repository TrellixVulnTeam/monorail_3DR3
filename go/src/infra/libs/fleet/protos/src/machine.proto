// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package fleet;

// Required by protoc-gen-go
option go_package = "infra/libs/fleet/protos/go";

import "chrome_config.proto";
import "chromeos_config.proto";
import "location.proto";
import "machine_id.proto";
import "peripherals.proto";

// Next Tag: 5
message Machine {
  // A unique ID for the machine.
  MachineID id = 1;
  Location location = 2;

  oneof device {
    ChromeMachine chrome_machine = 3;
    ChromeOSMachine chromeos_machine = 4;
  };
}

message ChromeMachine {
  // Descriptive name of Chrome Machine
  string name = 1;
  ChromePlatform platform = 2;  // Should match one of the predefined Chrome Platforms.
  string mac_address = 3;
  string nic_name = 4;

  // Interface of its connected devices.
  KVMInterface kvm_interface = 5;
  RPMInterface rpm_interface = 6;
  SwitchInterface network_device_interface = 7;

  Drac drac = 8;
  // Usually it's a buganizer bug.
  string deployment_ticket = 9;
  string description = 10; // Can be covered by deployment_ticket
}

message ChromeOSMachine {
  // All infos come from HaRT system.
  // used by referencing device config.
  string reference_board = 1;
  // used by ChromeOS build system.
  string build_target = 2;
  string model = 3;
  // Chromebook, labstation, servo, …
  ChromeOSDeviceType device_type = 4;
  // Used internally, Different boards/models could share the same name.
  string google_code_name = 5;
  // HaRT doesn’t guarantee its existence.
  string mac_address = 6;
}