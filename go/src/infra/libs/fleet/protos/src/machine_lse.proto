// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This proto definition describes the lab setup environment (LSE) for machine
// in UFS.
// See go/ufs-design for details of LSE.

syntax = "proto3";

package fleet;

// Required by protoc-gen-go
option go_package = "infra/libs/fleet/protos/go";

import "go.chromium.org/chromiumos/infra/proto/src/lab/device.proto";
import "chrome_config.proto";
import "lse_id.proto";
import "lse_prototype.proto";
import "network_id.proto";
import "peripherals.proto";
import "machine_id.proto";

message MachineLSE {
    LabSetupEnvID id = 1;
    // The prototype that this machine LSE should follow. System will use this
    // prototype to detect if the LSE is completed or valid.
    MachineLSEPrototypeID prototype_id = 2;

    oneof lse {
        ChromeMachineLSE chrome_machine_lse = 3;
        ChromeOSMachineLSE chromeos_machine_lse = 4;
    }

    // The machines that this LSE is linked to. No machine is linked if it's NULL.
    repeated MachineID machines = 5;
}

message ChromeMachineLSE {
    // The hostname is also recorded in DHCP configs
    string hostname = 1;
    // Indicate if VM is needed to set up
    repeated VM vms = 2;
}

message VM {
    // A unique vm name
    VMID id = 1;
    OSVersion os_version = 2;
    string mac_address = 3;
    string hostname = 4;
}

message VMID {
    string value = 1;
}

message ChromeOSMachineLSE {
    string hostname = 1;

    oneof chromeos_lse {
        ChromeOSDeviceLSE dut = 2;
        ChromeOSServerLSE server = 3;
    }
}

message ChromeOSDeviceLSE {
    lab.DeviceUnderTest config = 1;
    RPMInterface rpm_interface = 2;
    SwitchInterface network_device_interface = 3;
}

message ChromeOSServerLSE {
    // The vlan that this server is going to serve
    VlanID served_network = 1;
}