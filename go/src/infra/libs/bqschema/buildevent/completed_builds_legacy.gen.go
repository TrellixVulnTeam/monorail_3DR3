// THIS FILE IS AUTOGENERATED. DO NOT MODIFY.

package buildevent

import pb "infra/libs/bqschema/tabledef"
import time "time"

// CompletedBuildsLegacyTable is the TableDef for the
// "raw_events" dataset's "completed_builds_legacy" table.
var CompletedBuildsLegacyTable = &pb.TableDef{
	DatasetId: "raw_events",
	TableId:   "completed_builds_legacy",
}

// CompletedBuildsLegacy_Swarming is a record for the "swarming" field.
type CompletedBuildsLegacy_Swarming struct {
	// The host name.
	Host string `bigquery:"host"`

	// The run ID (zero out last digit for task ID).
	RunId string `bigquery:"run_id"`
}

// CompletedBuildsLegacy_Kitchen is a record for the "kitchen" field.
type CompletedBuildsLegacy_Kitchen struct {
	// The Kitchen package version.
	Version string `bigquery:"version"`
}

// CompletedBuildsLegacy_Deps is a record for the "deps" field.
type CompletedBuildsLegacy_Deps struct {
	ProjectId string `bigquery:"project_id"`

	// The URL of where to fetch the package data. Must always be a git repo URL.
	Url string `bigquery:"url"`

	// The ref to git-fetch when syncing this dependency.
	Branch string `bigquery:"branch"`

	// The git commit that we depend on.
	Revision string `bigquery:"revision"`
}

// CompletedBuildsLegacy_Recipes is a record for the "recipes" field.
type CompletedBuildsLegacy_Recipes struct {
	// The recipe repository, if checked out.
	Repository string `bigquery:"repository"`

	// The recipe repository's revision, if checked out.
	Revision string `bigquery:"revision"`

	// The recipe name that was invoked.
	Name string `bigquery:"name"`

	// List of recipe packages the recipe depends on.
	Deps []*CompletedBuildsLegacy_Deps `bigquery:"deps"`
}

// CompletedBuildsLegacy is the schema for "CompletedBuildsLegacyTable".
type CompletedBuildsLegacy struct {
	// The name of the BuildBot master.
	Master string `bigquery:"master"`

	// The name of the BuildBot builder.
	Builder string `bigquery:"builder"`

	// The BuildBot build number.
	BuildNumber int64 `bigquery:"build_number"`

	// The build schedule time, in milliseconds from epoch.
	BuildSchedMsec int64 `bigquery:"build_sched_msec"`

	// The build started time, in milliseconds from epoch.
	BuildStartedMsec int64 `bigquery:"build_started_msec"`

	// The build finished time, in milliseconds from epoch.
	BuildFinishedMsec int64 `bigquery:"build_finished_msec"`

	// The builder host name.
	HostName string `bigquery:"host_name"`

	// The build result (enum).
	Result string `bigquery:"result"`

	// The queue duration, in seconds.
	QueueDurationS float64 `bigquery:"queue_duration_s"`

	// The execution duration, in seconds.
	ExecutionDurationS float64 `bigquery:"execution_duration_s"`

	// The total duration, in seconds.
	TotalDurationS float64 `bigquery:"total_duration_s"`

	// The patch URL.
	PatchUrl string `bigquery:"patch_url"`

	// The build's project.
	Project string `bigquery:"project"`

	// The build category (enum).
	Category string `bigquery:"category"`

	// The BuildBucket ID.
	BbucketId string `bigquery:"bbucket_id"`

	// The BuildBucket user agent.
	BbucketUserAgent string `bigquery:"bbucket_user_agent"`

	// The head revision's Git hash.
	HeadRevisionGitHash string `bigquery:"head_revision_git_hash"`

	// An identifier unique to this build. Shared with 'build_id' in steps table.
	BuildId string `bigquery:"build_id"`

	// The BuildBucket bucket.
	BbucketBucket string `bigquery:"bbucket_bucket"`

	// The time when the build was scheduled.
	BuildScheduled time.Time `bigquery:"build_scheduled"`

	// The time when the build was started.
	BuildStarted time.Time `bigquery:"build_started"`

	// The time when the build was finished.
	BuildFinished time.Time `bigquery:"build_finished"`

	// Swarming information.
	Swarming *CompletedBuildsLegacy_Swarming `bigquery:"swarming"`

	// Kitchen information.
	Kitchen *CompletedBuildsLegacy_Kitchen `bigquery:"kitchen"`

	// Recipe information.
	Recipes *CompletedBuildsLegacy_Recipes `bigquery:"recipes"`
}
