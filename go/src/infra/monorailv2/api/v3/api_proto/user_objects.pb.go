// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// This file defines protobufs for users and related business
// objects, e.g., users, user preferences.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: api/v3/api_proto/user_objects.proto

package monorail_v3

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Potential roles of a user.
// Next available tag: 3
type UserSettings_SiteRole int32

const (
	// Default value. This value is unused.
	UserSettings_SITE_ROLE_UNSPECIFIED UserSettings_SiteRole = 0
	// Normal site user with no special site-wide extra permissions.
	UserSettings_NORMAL UserSettings_SiteRole = 1
	// Site-wide admin role.
	UserSettings_ADMIN UserSettings_SiteRole = 2
)

// Enum value maps for UserSettings_SiteRole.
var (
	UserSettings_SiteRole_name = map[int32]string{
		0: "SITE_ROLE_UNSPECIFIED",
		1: "NORMAL",
		2: "ADMIN",
	}
	UserSettings_SiteRole_value = map[string]int32{
		"SITE_ROLE_UNSPECIFIED": 0,
		"NORMAL":                1,
		"ADMIN":                 2,
	}
)

func (x UserSettings_SiteRole) Enum() *UserSettings_SiteRole {
	p := new(UserSettings_SiteRole)
	*p = x
	return p
}

func (x UserSettings_SiteRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettings_SiteRole) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_user_objects_proto_enumTypes[0].Descriptor()
}

func (UserSettings_SiteRole) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_user_objects_proto_enumTypes[0]
}

func (x UserSettings_SiteRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettings_SiteRole.Descriptor instead.
func (UserSettings_SiteRole) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1, 0}
}

// Trait options for notifications the user receives.
// Next available tag: 6;
type UserSettings_NotificationTraits int32

const (
	// Default value. This value is unused.
	UserSettings_NOTIFICATION_TRAITS_UNSPECIFIED UserSettings_NotificationTraits = 0
	// Send change notifications for issues where user is owner or cc.
	UserSettings_NOTIFY_ON_OWNED_OR_CC_ISSUE_CHANGES UserSettings_NotificationTraits = 1
	// Send change notifications for issues the user has starred.
	UserSettings_NOTIFY_ON_STARRED_ISSUE_CHANGES UserSettings_NotificationTraits = 2
	// Send date-type field notifications for issues the user has starred.
	// See monorail/doc/userguide/email.md#why-did-i-get-a-follow_up-email-notification.
	UserSettings_NOTIFY_ON_STARRED_NOTIFY_DATES UserSettings_NotificationTraits = 3
	// Email subject lines should be compact.
	UserSettings_COMPACT_SUBJECT_LINE UserSettings_NotificationTraits = 4
	// Include a button link to the issue, in Gmail.
	UserSettings_GMAIL_INCLUDE_ISSUE_LINK_BUTTON UserSettings_NotificationTraits = 5
)

// Enum value maps for UserSettings_NotificationTraits.
var (
	UserSettings_NotificationTraits_name = map[int32]string{
		0: "NOTIFICATION_TRAITS_UNSPECIFIED",
		1: "NOTIFY_ON_OWNED_OR_CC_ISSUE_CHANGES",
		2: "NOTIFY_ON_STARRED_ISSUE_CHANGES",
		3: "NOTIFY_ON_STARRED_NOTIFY_DATES",
		4: "COMPACT_SUBJECT_LINE",
		5: "GMAIL_INCLUDE_ISSUE_LINK_BUTTON",
	}
	UserSettings_NotificationTraits_value = map[string]int32{
		"NOTIFICATION_TRAITS_UNSPECIFIED":     0,
		"NOTIFY_ON_OWNED_OR_CC_ISSUE_CHANGES": 1,
		"NOTIFY_ON_STARRED_ISSUE_CHANGES":     2,
		"NOTIFY_ON_STARRED_NOTIFY_DATES":      3,
		"COMPACT_SUBJECT_LINE":                4,
		"GMAIL_INCLUDE_ISSUE_LINK_BUTTON":     5,
	}
)

func (x UserSettings_NotificationTraits) Enum() *UserSettings_NotificationTraits {
	p := new(UserSettings_NotificationTraits)
	*p = x
	return p
}

func (x UserSettings_NotificationTraits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettings_NotificationTraits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_user_objects_proto_enumTypes[1].Descriptor()
}

func (UserSettings_NotificationTraits) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_user_objects_proto_enumTypes[1]
}

func (x UserSettings_NotificationTraits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettings_NotificationTraits.Descriptor instead.
func (UserSettings_NotificationTraits) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1, 1}
}

// Privacy trait options for the user.
// Next available tag: 2
type UserSettings_PrivacyTraits int32

const (
	// Default value. This value is unused.
	UserSettings_PRIVACY_TRAITS_UNSPECIFIED UserSettings_PrivacyTraits = 0
	// Obscure the user's email from non-project members throughout the site.
	UserSettings_OBSCURE_EMAIL UserSettings_PrivacyTraits = 1
)

// Enum value maps for UserSettings_PrivacyTraits.
var (
	UserSettings_PrivacyTraits_name = map[int32]string{
		0: "PRIVACY_TRAITS_UNSPECIFIED",
		1: "OBSCURE_EMAIL",
	}
	UserSettings_PrivacyTraits_value = map[string]int32{
		"PRIVACY_TRAITS_UNSPECIFIED": 0,
		"OBSCURE_EMAIL":              1,
	}
)

func (x UserSettings_PrivacyTraits) Enum() *UserSettings_PrivacyTraits {
	p := new(UserSettings_PrivacyTraits)
	*p = x
	return p
}

func (x UserSettings_PrivacyTraits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettings_PrivacyTraits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_user_objects_proto_enumTypes[2].Descriptor()
}

func (UserSettings_PrivacyTraits) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_user_objects_proto_enumTypes[2]
}

func (x UserSettings_PrivacyTraits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettings_PrivacyTraits.Descriptor instead.
func (UserSettings_PrivacyTraits) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1, 2}
}

// Site interaction trait options for the user.
// Next available tag: 3
type UserSettings_SiteInteractionTraits int32

const (
	// Default value. This value is unused.
	UserSettings_SITE_INTERACTION_TRAITS_UNSPECIFIED UserSettings_SiteInteractionTraits = 0
	// Add 'Restrict-View-Google' labels to new issues the user reports.
	// Issues will only be visible to the user (issue reporter)
	// and users with the `Google` permission.
	UserSettings_REPORT_RESTRICT_VIEW_GOOGLE_ISSUES UserSettings_SiteInteractionTraits = 1
	// When viewing public issues, show a banner to remind the user not
	// to post sensitive information.
	UserSettings_PUBLIC_ISSUE_BANNER UserSettings_SiteInteractionTraits = 2
)

// Enum value maps for UserSettings_SiteInteractionTraits.
var (
	UserSettings_SiteInteractionTraits_name = map[int32]string{
		0: "SITE_INTERACTION_TRAITS_UNSPECIFIED",
		1: "REPORT_RESTRICT_VIEW_GOOGLE_ISSUES",
		2: "PUBLIC_ISSUE_BANNER",
	}
	UserSettings_SiteInteractionTraits_value = map[string]int32{
		"SITE_INTERACTION_TRAITS_UNSPECIFIED": 0,
		"REPORT_RESTRICT_VIEW_GOOGLE_ISSUES":  1,
		"PUBLIC_ISSUE_BANNER":                 2,
	}
)

func (x UserSettings_SiteInteractionTraits) Enum() *UserSettings_SiteInteractionTraits {
	p := new(UserSettings_SiteInteractionTraits)
	*p = x
	return p
}

func (x UserSettings_SiteInteractionTraits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettings_SiteInteractionTraits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_user_objects_proto_enumTypes[3].Descriptor()
}

func (UserSettings_SiteInteractionTraits) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_user_objects_proto_enumTypes[3]
}

func (x UserSettings_SiteInteractionTraits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettings_SiteInteractionTraits.Descriptor instead.
func (UserSettings_SiteInteractionTraits) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1, 3}
}

// Potential status of a user's access to the site.
// Next available tag: 3
type UserSettings_SiteAccess_Status int32

const (
	// Default value. This value is unused.
	UserSettings_SiteAccess_STATUS_UNSPECIFIED UserSettings_SiteAccess_Status = 0
	// The user has access to the site.
	UserSettings_SiteAccess_FULL_ACCESS UserSettings_SiteAccess_Status = 1
	// The user is banned from the site.
	UserSettings_SiteAccess_BANNED UserSettings_SiteAccess_Status = 2
)

// Enum value maps for UserSettings_SiteAccess_Status.
var (
	UserSettings_SiteAccess_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "FULL_ACCESS",
		2: "BANNED",
	}
	UserSettings_SiteAccess_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"FULL_ACCESS":        1,
		"BANNED":             2,
	}
)

func (x UserSettings_SiteAccess_Status) Enum() *UserSettings_SiteAccess_Status {
	p := new(UserSettings_SiteAccess_Status)
	*p = x
	return p
}

func (x UserSettings_SiteAccess_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettings_SiteAccess_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_user_objects_proto_enumTypes[4].Descriptor()
}

func (UserSettings_SiteAccess_Status) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_user_objects_proto_enumTypes[4]
}

func (x UserSettings_SiteAccess_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettings_SiteAccess_Status.Descriptor instead.
func (UserSettings_SiteAccess_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1, 0, 0}
}

// Subscription mode of this saved query
// Next available tag: 3
type UserSavedQuery_SubscriptionMode int32

const (
	// Default API value. This value is unused.
	UserSavedQuery_SUBSCRIPTION_MODE_UNSPECIFIED UserSavedQuery_SubscriptionMode = 0
	// Do not subscribe to notifications.
	UserSavedQuery_NO_NOTIFICATION UserSavedQuery_SubscriptionMode = 1
	// Subscribe to notifications.
	UserSavedQuery_IMMEDIATE_NOTIFICATION UserSavedQuery_SubscriptionMode = 2
)

// Enum value maps for UserSavedQuery_SubscriptionMode.
var (
	UserSavedQuery_SubscriptionMode_name = map[int32]string{
		0: "SUBSCRIPTION_MODE_UNSPECIFIED",
		1: "NO_NOTIFICATION",
		2: "IMMEDIATE_NOTIFICATION",
	}
	UserSavedQuery_SubscriptionMode_value = map[string]int32{
		"SUBSCRIPTION_MODE_UNSPECIFIED": 0,
		"NO_NOTIFICATION":               1,
		"IMMEDIATE_NOTIFICATION":        2,
	}
)

func (x UserSavedQuery_SubscriptionMode) Enum() *UserSavedQuery_SubscriptionMode {
	p := new(UserSavedQuery_SubscriptionMode)
	*p = x
	return p
}

func (x UserSavedQuery_SubscriptionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSavedQuery_SubscriptionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_user_objects_proto_enumTypes[5].Descriptor()
}

func (UserSavedQuery_SubscriptionMode) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_user_objects_proto_enumTypes[5]
}

func (x UserSavedQuery_SubscriptionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSavedQuery_SubscriptionMode.Descriptor instead.
func (UserSavedQuery_SubscriptionMode) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{2, 0}
}

// User represents a user of the Monorail site.
// Next available tag: 4
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the user.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Obscured or un-obscured user email or name to show other users using the site.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// User-written indication of their availability or working hours.
	AvailabilityMessage string `protobuf:"bytes,3,opt,name=availability_message,json=availabilityMessage,proto3" json:"availability_message,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetAvailabilityMessage() string {
	if x != nil {
		return x.AvailabilityMessage
	}
	return ""
}

// UserSettings represents preferences and account settings of a User.
// Next available tag: 8
type UserSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the user that has these settings.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The global site role for the user.
	SiteRole UserSettings_SiteRole `protobuf:"varint,2,opt,name=site_role,json=siteRole,proto3,enum=monorail.v3.UserSettings_SiteRole" json:"site_role,omitempty"`
	// Resource name of linked secondary users.
	LinkedSecondaryUsers []string `protobuf:"bytes,3,rep,name=linked_secondary_users,json=linkedSecondaryUsers,proto3" json:"linked_secondary_users,omitempty"`
	// The user's access to the site.
	SiteAccess *UserSettings_SiteAccess `protobuf:"bytes,4,opt,name=site_access,json=siteAccess,proto3" json:"site_access,omitempty"`
	// Notification trait preferences of the user.
	NotificationTraits []UserSettings_NotificationTraits `protobuf:"varint,5,rep,packed,name=notification_traits,json=notificationTraits,proto3,enum=monorail.v3.UserSettings_NotificationTraits" json:"notification_traits,omitempty"`
	// Privacy trait preferences of the user.
	PrivacyTraits []UserSettings_PrivacyTraits `protobuf:"varint,6,rep,packed,name=privacy_traits,json=privacyTraits,proto3,enum=monorail.v3.UserSettings_PrivacyTraits" json:"privacy_traits,omitempty"`
	// Site interaction trait preferences of the user.
	SiteInteractionTraits []UserSettings_SiteInteractionTraits `protobuf:"varint,7,rep,packed,name=site_interaction_traits,json=siteInteractionTraits,proto3,enum=monorail.v3.UserSettings_SiteInteractionTraits" json:"site_interaction_traits,omitempty"`
}

func (x *UserSettings) Reset() {
	*x = UserSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettings) ProtoMessage() {}

func (x *UserSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettings.ProtoReflect.Descriptor instead.
func (*UserSettings) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1}
}

func (x *UserSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSettings) GetSiteRole() UserSettings_SiteRole {
	if x != nil {
		return x.SiteRole
	}
	return UserSettings_SITE_ROLE_UNSPECIFIED
}

func (x *UserSettings) GetLinkedSecondaryUsers() []string {
	if x != nil {
		return x.LinkedSecondaryUsers
	}
	return nil
}

func (x *UserSettings) GetSiteAccess() *UserSettings_SiteAccess {
	if x != nil {
		return x.SiteAccess
	}
	return nil
}

func (x *UserSettings) GetNotificationTraits() []UserSettings_NotificationTraits {
	if x != nil {
		return x.NotificationTraits
	}
	return nil
}

func (x *UserSettings) GetPrivacyTraits() []UserSettings_PrivacyTraits {
	if x != nil {
		return x.PrivacyTraits
	}
	return nil
}

func (x *UserSettings) GetSiteInteractionTraits() []UserSettings_SiteInteractionTraits {
	if x != nil {
		return x.SiteInteractionTraits
	}
	return nil
}

// Defines saved queries that belong to a user.
//
// Next available tag: 6
type UserSavedQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of this saved query.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this saved query, ie 'open issues'.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Search term of this saved query.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// List of projects this query can be searched in.
	Projects         []string                        `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
	SubscriptionMode UserSavedQuery_SubscriptionMode `protobuf:"varint,5,opt,name=subscription_mode,json=subscriptionMode,proto3,enum=monorail.v3.UserSavedQuery_SubscriptionMode" json:"subscription_mode,omitempty"`
}

func (x *UserSavedQuery) Reset() {
	*x = UserSavedQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSavedQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSavedQuery) ProtoMessage() {}

func (x *UserSavedQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSavedQuery.ProtoReflect.Descriptor instead.
func (*UserSavedQuery) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{2}
}

func (x *UserSavedQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSavedQuery) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserSavedQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UserSavedQuery) GetProjects() []string {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *UserSavedQuery) GetSubscriptionMode() UserSavedQuery_SubscriptionMode {
	if x != nil {
		return x.SubscriptionMode
	}
	return UserSavedQuery_SUBSCRIPTION_MODE_UNSPECIFIED
}

// A project starred by a user.
//
// Next available tag: 2
type ProjectStar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the ProjectStar.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProjectStar) Reset() {
	*x = ProjectStar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectStar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectStar) ProtoMessage() {}

func (x *ProjectStar) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectStar.ProtoReflect.Descriptor instead.
func (*ProjectStar) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectStar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The access the user has to the site.
// Next available tag: 3
type UserSettings_SiteAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of the user's access to the site.
	Status UserSettings_SiteAccess_Status `protobuf:"varint,1,opt,name=status,proto3,enum=monorail.v3.UserSettings_SiteAccess_Status" json:"status,omitempty"`
	// An explanation for the value of `status`.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *UserSettings_SiteAccess) Reset() {
	*x = UserSettings_SiteAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettings_SiteAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettings_SiteAccess) ProtoMessage() {}

func (x *UserSettings_SiteAccess) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_user_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettings_SiteAccess.ProtoReflect.Descriptor instead.
func (*UserSettings_SiteAccess) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_user_objects_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UserSettings_SiteAccess) GetStatus() UserSettings_SiteAccess_Status {
	if x != nil {
		return x.Status
	}
	return UserSettings_SiteAccess_STATUS_UNSPECIFIED
}

func (x *UserSettings_SiteAccess) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_api_v3_api_proto_user_objects_proto protoreflect.FileDescriptor

var file_api_v3_api_proto_user_objects_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x76, 0x33, 0x1a, 0x26, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x14, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x3a, 0x28, 0xea, 0x41, 0x25, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x22, 0x96, 0x0a, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1f, 0xfa, 0x41, 0x1c, 0x0a, 0x1a,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76,
	0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x16, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0xe0,
	0x41, 0x03, 0x52, 0x14, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x5d, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x52,
	0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x69, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x54, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x54, 0x72, 0x61,
	0x69, 0x74, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x15, 0x73, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x1a, 0xa8, 0x01, 0x0a,
	0x0a, 0x53, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x55,
	0x4c, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42,
	0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x22, 0x3c, 0x0a, 0x08, 0x53, 0x69, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x10, 0x02, 0x22, 0xea, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x1f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41,
	0x49, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x4f,
	0x57, 0x4e, 0x45, 0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x43, 0x43, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x52, 0x45, 0x44, 0x5f,
	0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x10, 0x02, 0x12,
	0x22, 0x0a, 0x1e, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x52, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x45,
	0x53, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x43, 0x54, 0x5f, 0x53,
	0x55, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x23, 0x0a,
	0x1f, 0x47, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x49, 0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x5f, 0x49,
	0x53, 0x53, 0x55, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e,
	0x10, 0x05, 0x22, 0x42, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x54, 0x72, 0x61,
	0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x54,
	0x52, 0x41, 0x49, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x42, 0x53, 0x43, 0x55, 0x52, 0x45, 0x5f, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x53, 0x69, 0x74, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73,
	0x12, 0x27, 0x0a, 0x23, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x5f, 0x56, 0x49, 0x45,
	0x57, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x53, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x49, 0x53, 0x53, 0x55,
	0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x3a, 0x37, 0xea, 0x41, 0x34, 0x0a,
	0x1a, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x22, 0xa6, 0x03, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x41, 0x17, 0x0a, 0x15, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x4e, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4d, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x3a, 0x4c,
	0xea, 0x41, 0x49, 0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x29, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x7b, 0x73, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x7d, 0x22, 0x6e, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a,
	0x4b, 0xea, 0x41, 0x48, 0x0a, 0x19, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x12,
	0x2b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v3_api_proto_user_objects_proto_rawDescOnce sync.Once
	file_api_v3_api_proto_user_objects_proto_rawDescData = file_api_v3_api_proto_user_objects_proto_rawDesc
)

func file_api_v3_api_proto_user_objects_proto_rawDescGZIP() []byte {
	file_api_v3_api_proto_user_objects_proto_rawDescOnce.Do(func() {
		file_api_v3_api_proto_user_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v3_api_proto_user_objects_proto_rawDescData)
	})
	return file_api_v3_api_proto_user_objects_proto_rawDescData
}

var file_api_v3_api_proto_user_objects_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_v3_api_proto_user_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_v3_api_proto_user_objects_proto_goTypes = []interface{}{
	(UserSettings_SiteRole)(0),              // 0: monorail.v3.UserSettings.SiteRole
	(UserSettings_NotificationTraits)(0),    // 1: monorail.v3.UserSettings.NotificationTraits
	(UserSettings_PrivacyTraits)(0),         // 2: monorail.v3.UserSettings.PrivacyTraits
	(UserSettings_SiteInteractionTraits)(0), // 3: monorail.v3.UserSettings.SiteInteractionTraits
	(UserSettings_SiteAccess_Status)(0),     // 4: monorail.v3.UserSettings.SiteAccess.Status
	(UserSavedQuery_SubscriptionMode)(0),    // 5: monorail.v3.UserSavedQuery.SubscriptionMode
	(*User)(nil),                            // 6: monorail.v3.User
	(*UserSettings)(nil),                    // 7: monorail.v3.UserSettings
	(*UserSavedQuery)(nil),                  // 8: monorail.v3.UserSavedQuery
	(*ProjectStar)(nil),                     // 9: monorail.v3.ProjectStar
	(*UserSettings_SiteAccess)(nil),         // 10: monorail.v3.UserSettings.SiteAccess
}
var file_api_v3_api_proto_user_objects_proto_depIdxs = []int32{
	0,  // 0: monorail.v3.UserSettings.site_role:type_name -> monorail.v3.UserSettings.SiteRole
	10, // 1: monorail.v3.UserSettings.site_access:type_name -> monorail.v3.UserSettings.SiteAccess
	1,  // 2: monorail.v3.UserSettings.notification_traits:type_name -> monorail.v3.UserSettings.NotificationTraits
	2,  // 3: monorail.v3.UserSettings.privacy_traits:type_name -> monorail.v3.UserSettings.PrivacyTraits
	3,  // 4: monorail.v3.UserSettings.site_interaction_traits:type_name -> monorail.v3.UserSettings.SiteInteractionTraits
	5,  // 5: monorail.v3.UserSavedQuery.subscription_mode:type_name -> monorail.v3.UserSavedQuery.SubscriptionMode
	4,  // 6: monorail.v3.UserSettings.SiteAccess.status:type_name -> monorail.v3.UserSettings.SiteAccess.Status
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_v3_api_proto_user_objects_proto_init() }
func file_api_v3_api_proto_user_objects_proto_init() {
	if File_api_v3_api_proto_user_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v3_api_proto_user_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_user_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_user_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSavedQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_user_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectStar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_user_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettings_SiteAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v3_api_proto_user_objects_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v3_api_proto_user_objects_proto_goTypes,
		DependencyIndexes: file_api_v3_api_proto_user_objects_proto_depIdxs,
		EnumInfos:         file_api_v3_api_proto_user_objects_proto_enumTypes,
		MessageInfos:      file_api_v3_api_proto_user_objects_proto_msgTypes,
	}.Build()
	File_api_v3_api_proto_user_objects_proto = out.File
	file_api_v3_api_proto_user_objects_proto_rawDesc = nil
	file_api_v3_api_proto_user_objects_proto_goTypes = nil
	file_api_v3_api_proto_user_objects_proto_depIdxs = nil
}
