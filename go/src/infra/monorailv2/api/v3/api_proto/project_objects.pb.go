// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file or at
// https://developers.google.com/open-source/licenses/bsd

// This file defines protobufs for projects and their resources.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.1
// source: api/v3/api_proto/project_objects.proto

package monorail_v3

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Type of this status.
// Next available tag: 4
type StatusDef_StatusDefType int32

const (
	// Default enum value. This value is unused.
	StatusDef_STATUS_DEF_TYPE_UNSPECIFIED StatusDef_StatusDefType = 0
	// This status means issue is open.
	StatusDef_OPEN StatusDef_StatusDefType = 1
	// This status means issue is closed.
	StatusDef_CLOSED StatusDef_StatusDefType = 2
	// This status means issue is merged into another.
	StatusDef_MERGED StatusDef_StatusDefType = 3
)

// Enum value maps for StatusDef_StatusDefType.
var (
	StatusDef_StatusDefType_name = map[int32]string{
		0: "STATUS_DEF_TYPE_UNSPECIFIED",
		1: "OPEN",
		2: "CLOSED",
		3: "MERGED",
	}
	StatusDef_StatusDefType_value = map[string]int32{
		"STATUS_DEF_TYPE_UNSPECIFIED": 0,
		"OPEN":                        1,
		"CLOSED":                      2,
		"MERGED":                      3,
	}
)

func (x StatusDef_StatusDefType) Enum() *StatusDef_StatusDefType {
	p := new(StatusDef_StatusDefType)
	*p = x
	return p
}

func (x StatusDef_StatusDefType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusDef_StatusDefType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[0].Descriptor()
}

func (StatusDef_StatusDefType) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[0]
}

func (x StatusDef_StatusDefType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusDef_StatusDefType.Descriptor instead.
func (StatusDef_StatusDefType) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{1, 0}
}

// State of this status.
// Next available tag: 3
type StatusDef_StatusDefState int32

const (
	// Default value. This value is unused.
	StatusDef_STATUS_DEF_STATE_UNSPECIFIED StatusDef_StatusDefState = 0
	// This status is deprecated
	StatusDef_DEPRECATED StatusDef_StatusDefState = 1
	// This status is not deprecated
	StatusDef_ACTIVE StatusDef_StatusDefState = 2
)

// Enum value maps for StatusDef_StatusDefState.
var (
	StatusDef_StatusDefState_name = map[int32]string{
		0: "STATUS_DEF_STATE_UNSPECIFIED",
		1: "DEPRECATED",
		2: "ACTIVE",
	}
	StatusDef_StatusDefState_value = map[string]int32{
		"STATUS_DEF_STATE_UNSPECIFIED": 0,
		"DEPRECATED":                   1,
		"ACTIVE":                       2,
	}
)

func (x StatusDef_StatusDefState) Enum() *StatusDef_StatusDefState {
	p := new(StatusDef_StatusDefState)
	*p = x
	return p
}

func (x StatusDef_StatusDefState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusDef_StatusDefState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[1].Descriptor()
}

func (StatusDef_StatusDefState) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[1]
}

func (x StatusDef_StatusDefState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusDef_StatusDefState.Descriptor instead.
func (StatusDef_StatusDefState) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{1, 1}
}

// State of this label.
// Next available tag: 3
type LabelDef_LabelDefState int32

const (
	// Default enum value. This value is unused.
	LabelDef_LABEL_DEF_STATE_UNSPECIFIED LabelDef_LabelDefState = 0
	// This label is deprecated
	LabelDef_DEPRECATED LabelDef_LabelDefState = 1
	// This label is not deprecated
	LabelDef_ACTIVE LabelDef_LabelDefState = 2
)

// Enum value maps for LabelDef_LabelDefState.
var (
	LabelDef_LabelDefState_name = map[int32]string{
		0: "LABEL_DEF_STATE_UNSPECIFIED",
		1: "DEPRECATED",
		2: "ACTIVE",
	}
	LabelDef_LabelDefState_value = map[string]int32{
		"LABEL_DEF_STATE_UNSPECIFIED": 0,
		"DEPRECATED":                  1,
		"ACTIVE":                      2,
	}
)

func (x LabelDef_LabelDefState) Enum() *LabelDef_LabelDefState {
	p := new(LabelDef_LabelDefState)
	*p = x
	return p
}

func (x LabelDef_LabelDefState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LabelDef_LabelDefState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[2].Descriptor()
}

func (LabelDef_LabelDefState) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[2]
}

func (x LabelDef_LabelDefState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LabelDef_LabelDefState.Descriptor instead.
func (LabelDef_LabelDefState) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{2, 0}
}

// Type of this field.
// Next available tag: 7
type FieldDef_Type int32

const (
	// Default enum value. This value is unused.
	FieldDef_TYPE_UNSPECIFIED FieldDef_Type = 0
	// This field can be filled only with enumerated option(s).
	FieldDef_ENUM FieldDef_Type = 1
	// This field can be filled with integer(s).
	FieldDef_INT FieldDef_Type = 2
	// This field can be filled with string(s).
	FieldDef_STR FieldDef_Type = 3
	// This field can be filled with user(s).
	FieldDef_USER FieldDef_Type = 4
	// This field can be filled with date(s).
	FieldDef_DATE FieldDef_Type = 5
	// This field can be filled with URL(s).
	FieldDef_URL FieldDef_Type = 6
)

// Enum value maps for FieldDef_Type.
var (
	FieldDef_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "ENUM",
		2: "INT",
		3: "STR",
		4: "USER",
		5: "DATE",
		6: "URL",
	}
	FieldDef_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"ENUM":             1,
		"INT":              2,
		"STR":              3,
		"USER":             4,
		"DATE":             5,
		"URL":              6,
	}
)

func (x FieldDef_Type) Enum() *FieldDef_Type {
	p := new(FieldDef_Type)
	*p = x
	return p
}

func (x FieldDef_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldDef_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[3].Descriptor()
}

func (FieldDef_Type) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[3]
}

func (x FieldDef_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldDef_Type.Descriptor instead.
func (FieldDef_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 0}
}

// Traits of this field, ie is required or can support multiple values.
// Next available tag: 6
type FieldDef_Traits int32

const (
	// Default enum value. This value is unused.
	FieldDef_TRAITS_UNSPECIFIED FieldDef_Traits = 0
	// This field must be filled out in issues where it's applicable.
	FieldDef_REQUIRED FieldDef_Traits = 1
	// This field defaults to hidden.
	FieldDef_DEFAULT_HIDDEN FieldDef_Traits = 2
	// This field can have multiple values.
	FieldDef_MULTIVALUED FieldDef_Traits = 3
	// This is a phase field meaning it can only belong to gates.
	// TODO(monorail:7799): Change PHASE to GATE considering that users are more
	// familiar with that term.
	FieldDef_PHASE FieldDef_Traits = 4
	// Values of this field can only be edited in issues/templates by editors.
	// Project owners and field admins are not subject of this restriction.
	FieldDef_RESTRICTED FieldDef_Traits = 5
)

// Enum value maps for FieldDef_Traits.
var (
	FieldDef_Traits_name = map[int32]string{
		0: "TRAITS_UNSPECIFIED",
		1: "REQUIRED",
		2: "DEFAULT_HIDDEN",
		3: "MULTIVALUED",
		4: "PHASE",
		5: "RESTRICTED",
	}
	FieldDef_Traits_value = map[string]int32{
		"TRAITS_UNSPECIFIED": 0,
		"REQUIRED":           1,
		"DEFAULT_HIDDEN":     2,
		"MULTIVALUED":        3,
		"PHASE":              4,
		"RESTRICTED":         5,
	}
)

func (x FieldDef_Traits) Enum() *FieldDef_Traits {
	p := new(FieldDef_Traits)
	*p = x
	return p
}

func (x FieldDef_Traits) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldDef_Traits) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[4].Descriptor()
}

func (FieldDef_Traits) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[4]
}

func (x FieldDef_Traits) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldDef_Traits.Descriptor instead.
func (FieldDef_Traits) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 1}
}

// Event that triggers a notification.
// Next available tag: 3
type FieldDef_UserTypeSettings_NotifyTriggers int32

const (
	// Default notify trigger value. This value is unused.
	FieldDef_UserTypeSettings_NOTIFY_TRIGGERS_UNSPECIFIED FieldDef_UserTypeSettings_NotifyTriggers = 0
	// There are no notifications.
	FieldDef_UserTypeSettings_NEVER FieldDef_UserTypeSettings_NotifyTriggers = 1
	// Notify whenever any comment is made.
	FieldDef_UserTypeSettings_ANY_COMMENT FieldDef_UserTypeSettings_NotifyTriggers = 2
)

// Enum value maps for FieldDef_UserTypeSettings_NotifyTriggers.
var (
	FieldDef_UserTypeSettings_NotifyTriggers_name = map[int32]string{
		0: "NOTIFY_TRIGGERS_UNSPECIFIED",
		1: "NEVER",
		2: "ANY_COMMENT",
	}
	FieldDef_UserTypeSettings_NotifyTriggers_value = map[string]int32{
		"NOTIFY_TRIGGERS_UNSPECIFIED": 0,
		"NEVER":                       1,
		"ANY_COMMENT":                 2,
	}
)

func (x FieldDef_UserTypeSettings_NotifyTriggers) Enum() *FieldDef_UserTypeSettings_NotifyTriggers {
	p := new(FieldDef_UserTypeSettings_NotifyTriggers)
	*p = x
	return p
}

func (x FieldDef_UserTypeSettings_NotifyTriggers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldDef_UserTypeSettings_NotifyTriggers) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[5].Descriptor()
}

func (FieldDef_UserTypeSettings_NotifyTriggers) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[5]
}

func (x FieldDef_UserTypeSettings_NotifyTriggers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldDef_UserTypeSettings_NotifyTriggers.Descriptor instead.
func (FieldDef_UserTypeSettings_NotifyTriggers) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 3, 0}
}

// Field value(s) can only be set to users that fulfill the role
// requirements.
// Next available tag: 3
type FieldDef_UserTypeSettings_RoleRequirements int32

const (
	// Default role requirement value. This value is unused.
	FieldDef_UserTypeSettings_ROLE_REQUIREMENTS_UNSPECIFIED FieldDef_UserTypeSettings_RoleRequirements = 0
	// There is no requirement.
	FieldDef_UserTypeSettings_NO_ROLE_REQUIREMENT FieldDef_UserTypeSettings_RoleRequirements = 1
	// Field value(s) can only be set to users who are members.
	FieldDef_UserTypeSettings_PROJECT_MEMBER FieldDef_UserTypeSettings_RoleRequirements = 2
)

// Enum value maps for FieldDef_UserTypeSettings_RoleRequirements.
var (
	FieldDef_UserTypeSettings_RoleRequirements_name = map[int32]string{
		0: "ROLE_REQUIREMENTS_UNSPECIFIED",
		1: "NO_ROLE_REQUIREMENT",
		2: "PROJECT_MEMBER",
	}
	FieldDef_UserTypeSettings_RoleRequirements_value = map[string]int32{
		"ROLE_REQUIREMENTS_UNSPECIFIED": 0,
		"NO_ROLE_REQUIREMENT":           1,
		"PROJECT_MEMBER":                2,
	}
)

func (x FieldDef_UserTypeSettings_RoleRequirements) Enum() *FieldDef_UserTypeSettings_RoleRequirements {
	p := new(FieldDef_UserTypeSettings_RoleRequirements)
	*p = x
	return p
}

func (x FieldDef_UserTypeSettings_RoleRequirements) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldDef_UserTypeSettings_RoleRequirements) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[6].Descriptor()
}

func (FieldDef_UserTypeSettings_RoleRequirements) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[6]
}

func (x FieldDef_UserTypeSettings_RoleRequirements) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldDef_UserTypeSettings_RoleRequirements.Descriptor instead.
func (FieldDef_UserTypeSettings_RoleRequirements) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 3, 1}
}

// Action to do when a date field value arrives.
// Next available tag: 4
type FieldDef_DateTypeSettings_DateAction int32

const (
	// Default date action value. This value is unused.
	FieldDef_DateTypeSettings_DATE_ACTION_UNSPECIFIED FieldDef_DateTypeSettings_DateAction = 0
	// No action will be taken when a date arrives.
	FieldDef_DateTypeSettings_NO_ACTION FieldDef_DateTypeSettings_DateAction = 1
	// Notify owner only when a date arrives.
	FieldDef_DateTypeSettings_NOTIFY_OWNER FieldDef_DateTypeSettings_DateAction = 2
	// Notify all participants when a date arrives.
	FieldDef_DateTypeSettings_NOTIFY_PARTICIPANTS FieldDef_DateTypeSettings_DateAction = 3
)

// Enum value maps for FieldDef_DateTypeSettings_DateAction.
var (
	FieldDef_DateTypeSettings_DateAction_name = map[int32]string{
		0: "DATE_ACTION_UNSPECIFIED",
		1: "NO_ACTION",
		2: "NOTIFY_OWNER",
		3: "NOTIFY_PARTICIPANTS",
	}
	FieldDef_DateTypeSettings_DateAction_value = map[string]int32{
		"DATE_ACTION_UNSPECIFIED": 0,
		"NO_ACTION":               1,
		"NOTIFY_OWNER":            2,
		"NOTIFY_PARTICIPANTS":     3,
	}
)

func (x FieldDef_DateTypeSettings_DateAction) Enum() *FieldDef_DateTypeSettings_DateAction {
	p := new(FieldDef_DateTypeSettings_DateAction)
	*p = x
	return p
}

func (x FieldDef_DateTypeSettings_DateAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldDef_DateTypeSettings_DateAction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[7].Descriptor()
}

func (FieldDef_DateTypeSettings_DateAction) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[7]
}

func (x FieldDef_DateTypeSettings_DateAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldDef_DateTypeSettings_DateAction.Descriptor instead.
func (FieldDef_DateTypeSettings_DateAction) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 4, 0}
}

// The current state of the component definition.
// Next available tag: 3
type ComponentDef_ComponentDefState int32

const (
	// Default enum value. This value is unused.
	ComponentDef_COMPONENT_DEF_STATE_UNSPECIFIED ComponentDef_ComponentDefState = 0
	// This component is deprecated
	ComponentDef_DEPRECATED ComponentDef_ComponentDefState = 1
	// This component is not deprecated
	ComponentDef_ACTIVE ComponentDef_ComponentDefState = 2
)

// Enum value maps for ComponentDef_ComponentDefState.
var (
	ComponentDef_ComponentDefState_name = map[int32]string{
		0: "COMPONENT_DEF_STATE_UNSPECIFIED",
		1: "DEPRECATED",
		2: "ACTIVE",
	}
	ComponentDef_ComponentDefState_value = map[string]int32{
		"COMPONENT_DEF_STATE_UNSPECIFIED": 0,
		"DEPRECATED":                      1,
		"ACTIVE":                          2,
	}
)

func (x ComponentDef_ComponentDefState) Enum() *ComponentDef_ComponentDefState {
	p := new(ComponentDef_ComponentDefState)
	*p = x
	return p
}

func (x ComponentDef_ComponentDefState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentDef_ComponentDefState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[8].Descriptor()
}

func (ComponentDef_ComponentDefState) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[8]
}

func (x ComponentDef_ComponentDefState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentDef_ComponentDefState.Descriptor instead.
func (ComponentDef_ComponentDefState) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{4, 0}
}

// Visibility permission of template
// Next available tag: 3
type IssueTemplate_TemplatePrivacy int32

const (
	// This value is unused.
	IssueTemplate_TEMPLATE_PRIVACY_UNSPECIFIED IssueTemplate_TemplatePrivacy = 0
	// Owner project members may view this template.
	IssueTemplate_MEMBERS_ONLY IssueTemplate_TemplatePrivacy = 1
	// Anyone on the web can view this template.
	IssueTemplate_PUBLIC IssueTemplate_TemplatePrivacy = 2
)

// Enum value maps for IssueTemplate_TemplatePrivacy.
var (
	IssueTemplate_TemplatePrivacy_name = map[int32]string{
		0: "TEMPLATE_PRIVACY_UNSPECIFIED",
		1: "MEMBERS_ONLY",
		2: "PUBLIC",
	}
	IssueTemplate_TemplatePrivacy_value = map[string]int32{
		"TEMPLATE_PRIVACY_UNSPECIFIED": 0,
		"MEMBERS_ONLY":                 1,
		"PUBLIC":                       2,
	}
)

func (x IssueTemplate_TemplatePrivacy) Enum() *IssueTemplate_TemplatePrivacy {
	p := new(IssueTemplate_TemplatePrivacy)
	*p = x
	return p
}

func (x IssueTemplate_TemplatePrivacy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IssueTemplate_TemplatePrivacy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[9].Descriptor()
}

func (IssueTemplate_TemplatePrivacy) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[9]
}

func (x IssueTemplate_TemplatePrivacy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IssueTemplate_TemplatePrivacy.Descriptor instead.
func (IssueTemplate_TemplatePrivacy) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{7, 0}
}

// Indicator of who if anyone should be the default owner of the issue
// created with this template.
// Next available tag: 2
type IssueTemplate_DefaultOwner int32

const (
	// There is no default owner.
	// This value is used if the default owner is omitted.
	IssueTemplate_DEFAULT_OWNER_UNSPECIFIED IssueTemplate_DefaultOwner = 0
	// The owner should default to the Issue reporter if the reporter is a
	// member of the project.
	IssueTemplate_PROJECT_MEMBER_REPORTER IssueTemplate_DefaultOwner = 1
)

// Enum value maps for IssueTemplate_DefaultOwner.
var (
	IssueTemplate_DefaultOwner_name = map[int32]string{
		0: "DEFAULT_OWNER_UNSPECIFIED",
		1: "PROJECT_MEMBER_REPORTER",
	}
	IssueTemplate_DefaultOwner_value = map[string]int32{
		"DEFAULT_OWNER_UNSPECIFIED": 0,
		"PROJECT_MEMBER_REPORTER":   1,
	}
)

func (x IssueTemplate_DefaultOwner) Enum() *IssueTemplate_DefaultOwner {
	p := new(IssueTemplate_DefaultOwner)
	*p = x
	return p
}

func (x IssueTemplate_DefaultOwner) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IssueTemplate_DefaultOwner) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[10].Descriptor()
}

func (IssueTemplate_DefaultOwner) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[10]
}

func (x IssueTemplate_DefaultOwner) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IssueTemplate_DefaultOwner.Descriptor instead.
func (IssueTemplate_DefaultOwner) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{7, 1}
}

// The role the user has in the project.
// Next available tag: 4
type ProjectMember_ProjectRole int32

const (
	// The user has no role in the project.
	ProjectMember_PROJECT_ROLE_UNSPECIFIED ProjectMember_ProjectRole = 0
	// The user can make any changes to the project.
	ProjectMember_OWNER ProjectMember_ProjectRole = 1
	// The user may participate in the project but may not edit the project.
	ProjectMember_COMMITTER ProjectMember_ProjectRole = 2
	// The user starts with the same permissions as a non-member.
	ProjectMember_CONTRIBUTOR ProjectMember_ProjectRole = 3
)

// Enum value maps for ProjectMember_ProjectRole.
var (
	ProjectMember_ProjectRole_name = map[int32]string{
		0: "PROJECT_ROLE_UNSPECIFIED",
		1: "OWNER",
		2: "COMMITTER",
		3: "CONTRIBUTOR",
	}
	ProjectMember_ProjectRole_value = map[string]int32{
		"PROJECT_ROLE_UNSPECIFIED": 0,
		"OWNER":                    1,
		"COMMITTER":                2,
		"CONTRIBUTOR":              3,
	}
)

func (x ProjectMember_ProjectRole) Enum() *ProjectMember_ProjectRole {
	p := new(ProjectMember_ProjectRole)
	*p = x
	return p
}

func (x ProjectMember_ProjectRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectMember_ProjectRole) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[11].Descriptor()
}

func (ProjectMember_ProjectRole) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[11]
}

func (x ProjectMember_ProjectRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectMember_ProjectRole.Descriptor instead.
func (ProjectMember_ProjectRole) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{9, 0}
}

// Whether the user should show up in autocomplete.
// Next available tag: 3
type ProjectMember_AutocompleteVisibility int32

const (
	// No autocomplete visibility value specified.
	ProjectMember_AUTOCOMPLETE_VISIBILITY_UNSPECIFIED ProjectMember_AutocompleteVisibility = 0
	// The user should not show up in autocomplete.
	ProjectMember_HIDDEN ProjectMember_AutocompleteVisibility = 1
	// The user may show up in autocomplete.
	ProjectMember_SHOWN ProjectMember_AutocompleteVisibility = 2
)

// Enum value maps for ProjectMember_AutocompleteVisibility.
var (
	ProjectMember_AutocompleteVisibility_name = map[int32]string{
		0: "AUTOCOMPLETE_VISIBILITY_UNSPECIFIED",
		1: "HIDDEN",
		2: "SHOWN",
	}
	ProjectMember_AutocompleteVisibility_value = map[string]int32{
		"AUTOCOMPLETE_VISIBILITY_UNSPECIFIED": 0,
		"HIDDEN":                              1,
		"SHOWN":                               2,
	}
)

func (x ProjectMember_AutocompleteVisibility) Enum() *ProjectMember_AutocompleteVisibility {
	p := new(ProjectMember_AutocompleteVisibility)
	*p = x
	return p
}

func (x ProjectMember_AutocompleteVisibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectMember_AutocompleteVisibility) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v3_api_proto_project_objects_proto_enumTypes[12].Descriptor()
}

func (ProjectMember_AutocompleteVisibility) Type() protoreflect.EnumType {
	return &file_api_v3_api_proto_project_objects_proto_enumTypes[12]
}

func (x ProjectMember_AutocompleteVisibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectMember_AutocompleteVisibility.Descriptor instead.
func (ProjectMember_AutocompleteVisibility) EnumDescriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{9, 1}
}

// The top level organization of issues in Monorail.
//
// See monorail/doc/userguide/concepts.md#Projects-and-roles.
// and monorail/doc/userguide/project-owners.md#why-does-monorail-have-projects
// Next available tag: 5
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the project.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of the project.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Summary of the project, ie describing what its use and purpose.
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	// URL pointing to this project's logo image.
	ThumbnailUrl string `protobuf:"bytes,4,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Project) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Project) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

// Potential steps along the development process that an issue can be in.
//
// See monorail/doc/userguide/project-owners.md#How-to-configure-statuses
// (-- aip.dev/not-precedent: "Status" should be reserved for HTTP/gRPC codes
//     per aip.dev/216. Monorail's Status  preceded the AIP standards, and is
//     used extensively throughout the system.)
// Next available tag: 7
type StatusDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the status.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// String value of the status.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Type of this status.
	Type StatusDef_StatusDefType `protobuf:"varint,3,opt,name=type,proto3,enum=monorail.v3.StatusDef_StatusDefType" json:"type,omitempty"`
	// Sorting rank of this status. If we sort issues by status
	// this rank determines the sort order rather than status value.
	Rank uint32 `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	// Brief explanation of this status.
	Docstring string `protobuf:"bytes,5,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// State of this status.
	State StatusDef_StatusDefState `protobuf:"varint,6,opt,name=state,proto3,enum=monorail.v3.StatusDef_StatusDefState" json:"state,omitempty"`
}

func (x *StatusDef) Reset() {
	*x = StatusDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusDef) ProtoMessage() {}

func (x *StatusDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusDef.ProtoReflect.Descriptor instead.
func (*StatusDef) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{1}
}

func (x *StatusDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusDef) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StatusDef) GetType() StatusDef_StatusDefType {
	if x != nil {
		return x.Type
	}
	return StatusDef_STATUS_DEF_TYPE_UNSPECIFIED
}

func (x *StatusDef) GetRank() uint32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *StatusDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *StatusDef) GetState() StatusDef_StatusDefState {
	if x != nil {
		return x.State
	}
	return StatusDef_STATUS_DEF_STATE_UNSPECIFIED
}

// Well-known labels that can be applied to issues within the project.
//
// See monorail/doc/userguide/concepts.md#issue-fields-and-labels.
// Next available tag: 5
// Labels defined in this project.
type LabelDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the label.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// String value of the label.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Brief explanation of this label.
	Docstring string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// State of this label.
	State LabelDef_LabelDefState `protobuf:"varint,4,opt,name=state,proto3,enum=monorail.v3.LabelDef_LabelDefState" json:"state,omitempty"`
}

func (x *LabelDef) Reset() {
	*x = LabelDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelDef) ProtoMessage() {}

func (x *LabelDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelDef.ProtoReflect.Descriptor instead.
func (*LabelDef) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{2}
}

func (x *LabelDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelDef) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LabelDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *LabelDef) GetState() LabelDef_LabelDefState {
	if x != nil {
		return x.State
	}
	return LabelDef_LABEL_DEF_STATE_UNSPECIFIED
}

// Custom fields defined for the project.
//
// See monorail/doc/userguide/concepts.md#issue-fields-and-labels.
// Next available tag: 15
type FieldDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the field.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of the field.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Brief explanation of this field.
	Docstring string        `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	Type      FieldDef_Type `protobuf:"varint,4,opt,name=type,proto3,enum=monorail.v3.FieldDef_Type" json:"type,omitempty"`
	// Type of issue this field applies: ie Bug or Enhancement.
	// Note: type is indicated by any "Type-foo" label or "Type" custom field.
	ApplicableIssueType string `protobuf:"bytes,5,opt,name=applicable_issue_type,json=applicableIssueType,proto3" json:"applicable_issue_type,omitempty"`
	// Administrators of this field.
	Admins []string          `protobuf:"bytes,6,rep,name=admins,proto3" json:"admins,omitempty"`
	Traits []FieldDef_Traits `protobuf:"varint,7,rep,packed,name=traits,proto3,enum=monorail.v3.FieldDef_Traits" json:"traits,omitempty"`
	// ApprovalDef that this field belongs to, if applicable.
	ApprovalParent string                     `protobuf:"bytes,8,opt,name=approval_parent,json=approvalParent,proto3" json:"approval_parent,omitempty"`
	EnumSettings   *FieldDef_EnumTypeSettings `protobuf:"bytes,9,opt,name=enum_settings,json=enumSettings,proto3" json:"enum_settings,omitempty"`
	IntSettings    *FieldDef_IntTypeSettings  `protobuf:"bytes,10,opt,name=int_settings,json=intSettings,proto3" json:"int_settings,omitempty"`
	StrSettings    *FieldDef_StrTypeSettings  `protobuf:"bytes,11,opt,name=str_settings,json=strSettings,proto3" json:"str_settings,omitempty"`
	UserSettings   *FieldDef_UserTypeSettings `protobuf:"bytes,12,opt,name=user_settings,json=userSettings,proto3" json:"user_settings,omitempty"`
	DateSettings   *FieldDef_DateTypeSettings `protobuf:"bytes,13,opt,name=date_settings,json=dateSettings,proto3" json:"date_settings,omitempty"`
	// Editors of this field, only for RESTRICTED fields.
	Editors []string `protobuf:"bytes,14,rep,name=editors,proto3" json:"editors,omitempty"`
}

func (x *FieldDef) Reset() {
	*x = FieldDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef) ProtoMessage() {}

func (x *FieldDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef.ProtoReflect.Descriptor instead.
func (*FieldDef) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3}
}

func (x *FieldDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDef) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *FieldDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *FieldDef) GetType() FieldDef_Type {
	if x != nil {
		return x.Type
	}
	return FieldDef_TYPE_UNSPECIFIED
}

func (x *FieldDef) GetApplicableIssueType() string {
	if x != nil {
		return x.ApplicableIssueType
	}
	return ""
}

func (x *FieldDef) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *FieldDef) GetTraits() []FieldDef_Traits {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *FieldDef) GetApprovalParent() string {
	if x != nil {
		return x.ApprovalParent
	}
	return ""
}

func (x *FieldDef) GetEnumSettings() *FieldDef_EnumTypeSettings {
	if x != nil {
		return x.EnumSettings
	}
	return nil
}

func (x *FieldDef) GetIntSettings() *FieldDef_IntTypeSettings {
	if x != nil {
		return x.IntSettings
	}
	return nil
}

func (x *FieldDef) GetStrSettings() *FieldDef_StrTypeSettings {
	if x != nil {
		return x.StrSettings
	}
	return nil
}

func (x *FieldDef) GetUserSettings() *FieldDef_UserTypeSettings {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

func (x *FieldDef) GetDateSettings() *FieldDef_DateTypeSettings {
	if x != nil {
		return x.DateSettings
	}
	return nil
}

func (x *FieldDef) GetEditors() []string {
	if x != nil {
		return x.Editors
	}
	return nil
}

// A high level definition of the part of the software affected by an issue.
//
// See monorail/doc/userguide/project-owners.md#how-to-configure-components.
// Next available tag: 12
type ComponentDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the component, aka identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// String value of the component, ie 'Tools>Stability' or 'Blink'.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Brief explanation of this component.
	Docstring string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// Administrators of this component.
	Admins []string `protobuf:"bytes,4,rep,name=admins,proto3" json:"admins,omitempty"`
	// Auto cc'ed users of this component.
	Ccs []string `protobuf:"bytes,5,rep,name=ccs,proto3" json:"ccs,omitempty"`
	// State of this component.
	State ComponentDef_ComponentDefState `protobuf:"varint,6,opt,name=state,proto3,enum=monorail.v3.ComponentDef_ComponentDefState" json:"state,omitempty"`
	// The user that created this component.
	Creator string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	// The user that last modified this component.
	Modifier string `protobuf:"bytes,8,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// The time this component was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The time this component was last modified.
	ModifyTime *timestamp.Timestamp `protobuf:"bytes,10,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`
	// Labels that auto-apply to issues in this component.
	Labels []string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ComponentDef) Reset() {
	*x = ComponentDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentDef) ProtoMessage() {}

func (x *ComponentDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentDef.ProtoReflect.Descriptor instead.
func (*ComponentDef) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{4}
}

func (x *ComponentDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentDef) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ComponentDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *ComponentDef) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *ComponentDef) GetCcs() []string {
	if x != nil {
		return x.Ccs
	}
	return nil
}

func (x *ComponentDef) GetState() ComponentDef_ComponentDefState {
	if x != nil {
		return x.State
	}
	return ComponentDef_COMPONENT_DEF_STATE_UNSPECIFIED
}

func (x *ComponentDef) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ComponentDef) GetModifier() string {
	if x != nil {
		return x.Modifier
	}
	return ""
}

func (x *ComponentDef) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ComponentDef) GetModifyTime() *timestamp.Timestamp {
	if x != nil {
		return x.ModifyTime
	}
	return nil
}

func (x *ComponentDef) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Defines approvals that issues within the project may need.
//
// TODO(monorail:7193): Add documentation for approvals.
// Next available tag: 7
type ApprovalDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the approval.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of the field.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Brief explanation of this field.
	Docstring string `protobuf:"bytes,3,opt,name=docstring,proto3" json:"docstring,omitempty"`
	// Information approvers need from requester.
	// May be adjusted on the issue after creation.
	Survey string `protobuf:"bytes,4,opt,name=survey,proto3" json:"survey,omitempty"`
	// Default list of users who can approve this field.
	// May be adjusted on the issue after creation.
	Approvers []string `protobuf:"bytes,5,rep,name=approvers,proto3" json:"approvers,omitempty"`
	// Administrators of this field.
	Admins []string `protobuf:"bytes,6,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (x *ApprovalDef) Reset() {
	*x = ApprovalDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalDef) ProtoMessage() {}

func (x *ApprovalDef) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalDef.ProtoReflect.Descriptor instead.
func (*ApprovalDef) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{5}
}

func (x *ApprovalDef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApprovalDef) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ApprovalDef) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

func (x *ApprovalDef) GetSurvey() string {
	if x != nil {
		return x.Survey
	}
	return ""
}

func (x *ApprovalDef) GetApprovers() []string {
	if x != nil {
		return x.Approvers
	}
	return nil
}

func (x *ApprovalDef) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

// Defines saved queries that belong to a project
//
// Next available tag: 4
type ProjectSavedQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of this saved query.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this saved query, ie 'open issues'.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Search term of this saved query.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ProjectSavedQuery) Reset() {
	*x = ProjectSavedQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectSavedQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectSavedQuery) ProtoMessage() {}

func (x *ProjectSavedQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectSavedQuery.ProtoReflect.Descriptor instead.
func (*ProjectSavedQuery) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectSavedQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectSavedQuery) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ProjectSavedQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// Defines a template for filling issues.
// Next available tag: 10
type IssueTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the template.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Display name of this template.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Canonical Issue for this template
	Issue *Issue `protobuf:"bytes,3,opt,name=issue,proto3" json:"issue,omitempty"`
	// ApprovalValues to be created with the issue when using this template.
	ApprovalValues []*ApprovalValue `protobuf:"bytes,9,rep,name=approval_values,json=approvalValues,proto3" json:"approval_values,omitempty"`
	// Boolean indicating subsequent issue creation must have delta in summary
	SummaryMustBeEdited bool                          `protobuf:"varint,4,opt,name=summary_must_be_edited,json=summaryMustBeEdited,proto3" json:"summary_must_be_edited,omitempty"`
	TemplatePrivacy     IssueTemplate_TemplatePrivacy `protobuf:"varint,5,opt,name=template_privacy,json=templatePrivacy,proto3,enum=monorail.v3.IssueTemplate_TemplatePrivacy" json:"template_privacy,omitempty"`
	DefaultOwner        IssueTemplate_DefaultOwner    `protobuf:"varint,6,opt,name=default_owner,json=defaultOwner,proto3,enum=monorail.v3.IssueTemplate_DefaultOwner" json:"default_owner,omitempty"`
	// Boolean indicating whether issue must have a component.
	ComponentRequired bool `protobuf:"varint,7,opt,name=component_required,json=componentRequired,proto3" json:"component_required,omitempty"`
	// Names of Users who can administer this template.
	Admins []string `protobuf:"bytes,8,rep,name=admins,proto3" json:"admins,omitempty"`
}

func (x *IssueTemplate) Reset() {
	*x = IssueTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssueTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTemplate) ProtoMessage() {}

func (x *IssueTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTemplate.ProtoReflect.Descriptor instead.
func (*IssueTemplate) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{7}
}

func (x *IssueTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IssueTemplate) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *IssueTemplate) GetIssue() *Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

func (x *IssueTemplate) GetApprovalValues() []*ApprovalValue {
	if x != nil {
		return x.ApprovalValues
	}
	return nil
}

func (x *IssueTemplate) GetSummaryMustBeEdited() bool {
	if x != nil {
		return x.SummaryMustBeEdited
	}
	return false
}

func (x *IssueTemplate) GetTemplatePrivacy() IssueTemplate_TemplatePrivacy {
	if x != nil {
		return x.TemplatePrivacy
	}
	return IssueTemplate_TEMPLATE_PRIVACY_UNSPECIFIED
}

func (x *IssueTemplate) GetDefaultOwner() IssueTemplate_DefaultOwner {
	if x != nil {
		return x.DefaultOwner
	}
	return IssueTemplate_DEFAULT_OWNER_UNSPECIFIED
}

func (x *IssueTemplate) GetComponentRequired() bool {
	if x != nil {
		return x.ComponentRequired
	}
	return false
}

func (x *IssueTemplate) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

// Defines configurations of a project
//
// Next available tag: 11
type ProjectConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the project config.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Set of label prefixes that only apply once per issue.
	// E.g. priority, since no issue can be both Priority-High and Priority-Low.
	ExclusiveLabelPrefixes []string `protobuf:"bytes,2,rep,name=exclusive_label_prefixes,json=exclusiveLabelPrefixes,proto3" json:"exclusive_label_prefixes,omitempty"`
	// Default search query for this project's members.
	MemberDefaultQuery string `protobuf:"bytes,3,opt,name=member_default_query,json=memberDefaultQuery,proto3" json:"member_default_query,omitempty"`
	// TODO(crbug.com/monorail/7517): consider using IssuesListColumn
	// Default sort specification for this project.
	DefaultSort string `protobuf:"bytes,4,opt,name=default_sort,json=defaultSort,proto3" json:"default_sort,omitempty"`
	// Default columns for displaying issue list for this project.
	DefaultColumns    []*IssuesListColumn           `protobuf:"bytes,5,rep,name=default_columns,json=defaultColumns,proto3" json:"default_columns,omitempty"`
	ProjectGridConfig *ProjectConfig_GridViewConfig `protobuf:"bytes,6,opt,name=project_grid_config,json=projectGridConfig,proto3" json:"project_grid_config,omitempty"`
	// Default template used for issue entry for members of this project.
	MemberDefaultTemplate string `protobuf:"bytes,7,opt,name=member_default_template,json=memberDefaultTemplate,proto3" json:"member_default_template,omitempty"`
	// Default template used for issue entry for non-members of this project.
	NonMembersDefaultTemplate string `protobuf:"bytes,8,opt,name=non_members_default_template,json=nonMembersDefaultTemplate,proto3" json:"non_members_default_template,omitempty"`
	// URL to browse project's source code revisions for any given revnum.
	// E.g. https://crrev.com/{revnum}
	RevisionUrlFormat string `protobuf:"bytes,9,opt,name=revision_url_format,json=revisionUrlFormat,proto3" json:"revision_url_format,omitempty"`
	// A project's custom URL for the "New issue" link, only if specified.
	CustomIssueEntryUrl string `protobuf:"bytes,10,opt,name=custom_issue_entry_url,json=customIssueEntryUrl,proto3" json:"custom_issue_entry_url,omitempty"`
}

func (x *ProjectConfig) Reset() {
	*x = ProjectConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectConfig) ProtoMessage() {}

func (x *ProjectConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectConfig.ProtoReflect.Descriptor instead.
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectConfig) GetExclusiveLabelPrefixes() []string {
	if x != nil {
		return x.ExclusiveLabelPrefixes
	}
	return nil
}

func (x *ProjectConfig) GetMemberDefaultQuery() string {
	if x != nil {
		return x.MemberDefaultQuery
	}
	return ""
}

func (x *ProjectConfig) GetDefaultSort() string {
	if x != nil {
		return x.DefaultSort
	}
	return ""
}

func (x *ProjectConfig) GetDefaultColumns() []*IssuesListColumn {
	if x != nil {
		return x.DefaultColumns
	}
	return nil
}

func (x *ProjectConfig) GetProjectGridConfig() *ProjectConfig_GridViewConfig {
	if x != nil {
		return x.ProjectGridConfig
	}
	return nil
}

func (x *ProjectConfig) GetMemberDefaultTemplate() string {
	if x != nil {
		return x.MemberDefaultTemplate
	}
	return ""
}

func (x *ProjectConfig) GetNonMembersDefaultTemplate() string {
	if x != nil {
		return x.NonMembersDefaultTemplate
	}
	return ""
}

func (x *ProjectConfig) GetRevisionUrlFormat() string {
	if x != nil {
		return x.RevisionUrlFormat
	}
	return ""
}

func (x *ProjectConfig) GetCustomIssueEntryUrl() string {
	if x != nil {
		return x.CustomIssueEntryUrl
	}
	return ""
}

// Specifies info for a member of a project.
//
// Next available tag: 7
type ProjectMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource name of the Project Member.
	// projects/{project}/members/{user_id}
	Name string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Role ProjectMember_ProjectRole `protobuf:"varint,2,opt,name=role,proto3,enum=monorail.v3.ProjectMember_ProjectRole" json:"role,omitempty"`
	// Which built-in/standard permissions the user has set.
	StandardPerms []Permission `protobuf:"varint,3,rep,packed,name=standard_perms,json=standardPerms,proto3,enum=monorail.v3.Permission" json:"standard_perms,omitempty"`
	// Custom permissions defined for the user.
	// eg. "Google" in "Restrict-View-Google" is an example custom permission.
	CustomPerms []string `protobuf:"bytes,4,rep,name=custom_perms,json=customPerms,proto3" json:"custom_perms,omitempty"`
	// Annotations about a user configured by project owners.
	// Visible to anyone who can see the project's settings.
	Notes                 string                               `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	IncludeInAutocomplete ProjectMember_AutocompleteVisibility `protobuf:"varint,6,opt,name=include_in_autocomplete,json=includeInAutocomplete,proto3,enum=monorail.v3.ProjectMember_AutocompleteVisibility" json:"include_in_autocomplete,omitempty"`
}

func (x *ProjectMember) Reset() {
	*x = ProjectMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMember) ProtoMessage() {}

func (x *ProjectMember) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMember.ProtoReflect.Descriptor instead.
func (*ProjectMember) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMember) GetRole() ProjectMember_ProjectRole {
	if x != nil {
		return x.Role
	}
	return ProjectMember_PROJECT_ROLE_UNSPECIFIED
}

func (x *ProjectMember) GetStandardPerms() []Permission {
	if x != nil {
		return x.StandardPerms
	}
	return nil
}

func (x *ProjectMember) GetCustomPerms() []string {
	if x != nil {
		return x.CustomPerms
	}
	return nil
}

func (x *ProjectMember) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ProjectMember) GetIncludeInAutocomplete() ProjectMember_AutocompleteVisibility {
	if x != nil {
		return x.IncludeInAutocomplete
	}
	return ProjectMember_AUTOCOMPLETE_VISIBILITY_UNSPECIFIED
}

// Settings specific to enum type fields.
// Next available tag: 2
type FieldDef_EnumTypeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choices []*FieldDef_EnumTypeSettings_Choice `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *FieldDef_EnumTypeSettings) Reset() {
	*x = FieldDef_EnumTypeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef_EnumTypeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef_EnumTypeSettings) ProtoMessage() {}

func (x *FieldDef_EnumTypeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef_EnumTypeSettings.ProtoReflect.Descriptor instead.
func (*FieldDef_EnumTypeSettings) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 0}
}

func (x *FieldDef_EnumTypeSettings) GetChoices() []*FieldDef_EnumTypeSettings_Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

// Settings specific to int type fields.
// Next available tag: 3
type FieldDef_IntTypeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum value that this field can have.
	MinValue int32 `protobuf:"varint,1,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	// Maximum value that this field can have.
	MaxValue int32 `protobuf:"varint,2,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
}

func (x *FieldDef_IntTypeSettings) Reset() {
	*x = FieldDef_IntTypeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef_IntTypeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef_IntTypeSettings) ProtoMessage() {}

func (x *FieldDef_IntTypeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef_IntTypeSettings.ProtoReflect.Descriptor instead.
func (*FieldDef_IntTypeSettings) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 1}
}

func (x *FieldDef_IntTypeSettings) GetMinValue() int32 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *FieldDef_IntTypeSettings) GetMaxValue() int32 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

// Settings specific to str type fields.
// Next available tag: 2
type FieldDef_StrTypeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Regex that this field value(s) must match.
	Regex string `protobuf:"bytes,1,opt,name=regex,proto3" json:"regex,omitempty"`
}

func (x *FieldDef_StrTypeSettings) Reset() {
	*x = FieldDef_StrTypeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef_StrTypeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef_StrTypeSettings) ProtoMessage() {}

func (x *FieldDef_StrTypeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef_StrTypeSettings.ProtoReflect.Descriptor instead.
func (*FieldDef_StrTypeSettings) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 2}
}

func (x *FieldDef_StrTypeSettings) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

// Settings specific to user type fields.
// Next available tag: 5
type FieldDef_UserTypeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotifyTriggers   FieldDef_UserTypeSettings_NotifyTriggers   `protobuf:"varint,1,opt,name=notify_triggers,json=notifyTriggers,proto3,enum=monorail.v3.FieldDef_UserTypeSettings_NotifyTriggers" json:"notify_triggers,omitempty"`
	RoleRequirements FieldDef_UserTypeSettings_RoleRequirements `protobuf:"varint,2,opt,name=role_requirements,json=roleRequirements,proto3,enum=monorail.v3.FieldDef_UserTypeSettings_RoleRequirements" json:"role_requirements,omitempty"`
	// User(s) named in this field are granted this permission in the issue.
	GrantsPerm string `protobuf:"bytes,3,opt,name=grants_perm,json=grantsPerm,proto3" json:"grants_perm,omitempty"`
	// Field value(s) can only be set to users with this permission.
	NeedsPerm string `protobuf:"bytes,4,opt,name=needs_perm,json=needsPerm,proto3" json:"needs_perm,omitempty"`
}

func (x *FieldDef_UserTypeSettings) Reset() {
	*x = FieldDef_UserTypeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef_UserTypeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef_UserTypeSettings) ProtoMessage() {}

func (x *FieldDef_UserTypeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef_UserTypeSettings.ProtoReflect.Descriptor instead.
func (*FieldDef_UserTypeSettings) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 3}
}

func (x *FieldDef_UserTypeSettings) GetNotifyTriggers() FieldDef_UserTypeSettings_NotifyTriggers {
	if x != nil {
		return x.NotifyTriggers
	}
	return FieldDef_UserTypeSettings_NOTIFY_TRIGGERS_UNSPECIFIED
}

func (x *FieldDef_UserTypeSettings) GetRoleRequirements() FieldDef_UserTypeSettings_RoleRequirements {
	if x != nil {
		return x.RoleRequirements
	}
	return FieldDef_UserTypeSettings_ROLE_REQUIREMENTS_UNSPECIFIED
}

func (x *FieldDef_UserTypeSettings) GetGrantsPerm() string {
	if x != nil {
		return x.GrantsPerm
	}
	return ""
}

func (x *FieldDef_UserTypeSettings) GetNeedsPerm() string {
	if x != nil {
		return x.NeedsPerm
	}
	return ""
}

// Settings specific to date type fields.
// Next available tag: 2
type FieldDef_DateTypeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateAction FieldDef_DateTypeSettings_DateAction `protobuf:"varint,1,opt,name=date_action,json=dateAction,proto3,enum=monorail.v3.FieldDef_DateTypeSettings_DateAction" json:"date_action,omitempty"`
}

func (x *FieldDef_DateTypeSettings) Reset() {
	*x = FieldDef_DateTypeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef_DateTypeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef_DateTypeSettings) ProtoMessage() {}

func (x *FieldDef_DateTypeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef_DateTypeSettings.ProtoReflect.Descriptor instead.
func (*FieldDef_DateTypeSettings) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 4}
}

func (x *FieldDef_DateTypeSettings) GetDateAction() FieldDef_DateTypeSettings_DateAction {
	if x != nil {
		return x.DateAction
	}
	return FieldDef_DateTypeSettings_DATE_ACTION_UNSPECIFIED
}

// One available choice for an enum field.
// Next available tag: 3
type FieldDef_EnumTypeSettings_Choice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value of this choice.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Brief explanation of this choice.
	Docstring string `protobuf:"bytes,2,opt,name=docstring,proto3" json:"docstring,omitempty"`
}

func (x *FieldDef_EnumTypeSettings_Choice) Reset() {
	*x = FieldDef_EnumTypeSettings_Choice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDef_EnumTypeSettings_Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDef_EnumTypeSettings_Choice) ProtoMessage() {}

func (x *FieldDef_EnumTypeSettings_Choice) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDef_EnumTypeSettings_Choice.ProtoReflect.Descriptor instead.
func (*FieldDef_EnumTypeSettings_Choice) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *FieldDef_EnumTypeSettings_Choice) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FieldDef_EnumTypeSettings_Choice) GetDocstring() string {
	if x != nil {
		return x.Docstring
	}
	return ""
}

// Grid view configurations.
// Next available tag: 3
type ProjectConfig_GridViewConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Default column dimension in grid view for this project.
	DefaultXAttr string `protobuf:"bytes,1,opt,name=default_x_attr,json=defaultXAttr,proto3" json:"default_x_attr,omitempty"`
	// Default row dimension in grid view for this project.
	DefaultYAttr string `protobuf:"bytes,2,opt,name=default_y_attr,json=defaultYAttr,proto3" json:"default_y_attr,omitempty"`
}

func (x *ProjectConfig_GridViewConfig) Reset() {
	*x = ProjectConfig_GridViewConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectConfig_GridViewConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectConfig_GridViewConfig) ProtoMessage() {}

func (x *ProjectConfig_GridViewConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v3_api_proto_project_objects_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectConfig_GridViewConfig.ProtoReflect.Descriptor instead.
func (*ProjectConfig_GridViewConfig) Descriptor() ([]byte, []int) {
	return file_api_v3_api_proto_project_objects_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ProjectConfig_GridViewConfig) GetDefaultXAttr() string {
	if x != nil {
		return x.DefaultXAttr
	}
	return ""
}

func (x *ProjectConfig_GridViewConfig) GetDefaultYAttr() string {
	if x != nil {
		return x.DefaultYAttr
	}
	return ""
}

var File_api_v3_api_proto_project_objects_proto protoreflect.FileDescriptor

var file_api_v3_api_proto_project_objects_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x33, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x01,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x55, 0x72, 0x6c, 0x3a, 0x2e, 0xea, 0x41, 0x2b, 0x0a, 0x15, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x7d, 0x22, 0xcb, 0x03, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x6e,
	0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f,
	0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x52, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x44, 0x10, 0x03, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x3a, 0x47, 0xea, 0x41, 0x44, 0x0a, 0x17,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x12, 0x29, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x66, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x66, 0x7d, 0x22, 0xa1, 0x02, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f,
	0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x4c, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f, 0x44, 0x45, 0x46,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02,
	0x3a, 0x44, 0xea, 0x41, 0x41, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x12, 0x27, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x7d, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x65, 0x66, 0x73, 0x2f, 0x7b, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x44, 0x65, 0x66, 0x7d, 0x22, 0xe9, 0x0f, 0x0a, 0x08, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x65, 0x66, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x54,
	0x72, 0x61, 0x69, 0x74, 0x73, 0x52, 0x06, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x4a, 0x0a,
	0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xfa, 0x41, 0x1b, 0x0a, 0x19, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x44, 0x65, 0x66, 0xe0, 0x41, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x44, 0x65, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x48, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x99, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x07,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x65, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x1a, 0x4b, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x27, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x1a, 0xcb, 0x03, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5e,
	0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x52, 0x0e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x64,
	0x0a, 0x11, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x22, 0x4d, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x45, 0x56, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4e, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x22, 0x62, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x1a, 0xcb, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x52, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x63, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x17, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41,
	0x4e, 0x54, 0x53, 0x10, 0x03, 0x22, 0x55, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x54, 0x52, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x06, 0x22, 0x6e, 0x0a, 0x06,
	0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x49, 0x54, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x48, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x48, 0x41, 0x53, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x45, 0x53, 0x54, 0x52, 0x49, 0x43, 0x54, 0x45, 0x44, 0x10, 0x05, 0x3a, 0x44, 0xea, 0x41,
	0x41, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x12, 0x27, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65,
	0x66, 0x7d, 0x22, 0xa7, 0x05, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x6f, 0x63, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x06, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x41, 0x14,
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x03,
	0x63, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x41, 0x14, 0x0a, 0x12,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x03, 0x63, 0x63, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69,
	0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0xfa, 0x41, 0x14,
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x55, 0x73, 0x65, 0x72, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x36, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1a, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62,
	0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0xe0, 0x41, 0x03, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x22, 0x54, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x3a, 0x50, 0xea, 0x41, 0x4d, 0x0a,
	0x1a, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x12, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x73, 0x2f, 0x7b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x7d, 0x22, 0xb6, 0x02, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x17, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75,
	0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x3a, 0x4d, 0xea, 0x41, 0x4a, 0x0a, 0x19, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x12, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x44, 0x65, 0x66, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x44, 0x65, 0x66, 0x7d, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x52, 0xea, 0x41, 0x4f, 0x0a, 0x1f, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x7d, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2f,
	0x7b, 0x73, 0x61, 0x76, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x7d, 0x22, 0xde, 0x05, 0x0a,
	0x0d, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x05, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x62, 0x65, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x4d, 0x75, 0x73, 0x74, 0x42, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12, 0x55,
	0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72,
	0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x4c, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x17, 0xfa, 0x41, 0x14, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62,
	0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x73, 0x22, 0x51, 0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x53, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x43, 0x10, 0x02, 0x22, 0x4a, 0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x52,
	0x10, 0x01, 0x3a, 0x49, 0xea, 0x41, 0x46, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62,
	0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x2c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x7d, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x22, 0x88, 0x06,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x59, 0x0a, 0x13, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x72, 0x69, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x69, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x53, 0x0a, 0x17, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x15, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x5c, 0x0a, 0x1c, 0x6e, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1b, 0xfa, 0x41, 0x18, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x19, 0x6e,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x1a, 0x5c, 0x0a,
	0x0e, 0x47, 0x72, 0x69, 0x64, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x24, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x78, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x58, 0x41, 0x74, 0x74, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x59, 0x41, 0x74, 0x74, 0x72, 0x3a, 0x3b, 0xea, 0x41, 0x38,
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x72, 0x62, 0x75, 0x67, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x7d, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xf5, 0x03, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x33,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x61, 0x69, 0x6c, 0x2e,
	0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x49, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x56,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x18, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54,
	0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x49, 0x42,
	0x55, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x22, 0x58, 0x0a, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x27, 0x0a, 0x23, 0x41, 0x55, 0x54, 0x4f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x49, 0x44,
	0x44, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x4f, 0x57, 0x4e, 0x10, 0x02,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v3_api_proto_project_objects_proto_rawDescOnce sync.Once
	file_api_v3_api_proto_project_objects_proto_rawDescData = file_api_v3_api_proto_project_objects_proto_rawDesc
)

func file_api_v3_api_proto_project_objects_proto_rawDescGZIP() []byte {
	file_api_v3_api_proto_project_objects_proto_rawDescOnce.Do(func() {
		file_api_v3_api_proto_project_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v3_api_proto_project_objects_proto_rawDescData)
	})
	return file_api_v3_api_proto_project_objects_proto_rawDescData
}

var file_api_v3_api_proto_project_objects_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_api_v3_api_proto_project_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_v3_api_proto_project_objects_proto_goTypes = []interface{}{
	(StatusDef_StatusDefType)(0),                    // 0: monorail.v3.StatusDef.StatusDefType
	(StatusDef_StatusDefState)(0),                   // 1: monorail.v3.StatusDef.StatusDefState
	(LabelDef_LabelDefState)(0),                     // 2: monorail.v3.LabelDef.LabelDefState
	(FieldDef_Type)(0),                              // 3: monorail.v3.FieldDef.Type
	(FieldDef_Traits)(0),                            // 4: monorail.v3.FieldDef.Traits
	(FieldDef_UserTypeSettings_NotifyTriggers)(0),   // 5: monorail.v3.FieldDef.UserTypeSettings.NotifyTriggers
	(FieldDef_UserTypeSettings_RoleRequirements)(0), // 6: monorail.v3.FieldDef.UserTypeSettings.RoleRequirements
	(FieldDef_DateTypeSettings_DateAction)(0),       // 7: monorail.v3.FieldDef.DateTypeSettings.DateAction
	(ComponentDef_ComponentDefState)(0),             // 8: monorail.v3.ComponentDef.ComponentDefState
	(IssueTemplate_TemplatePrivacy)(0),              // 9: monorail.v3.IssueTemplate.TemplatePrivacy
	(IssueTemplate_DefaultOwner)(0),                 // 10: monorail.v3.IssueTemplate.DefaultOwner
	(ProjectMember_ProjectRole)(0),                  // 11: monorail.v3.ProjectMember.ProjectRole
	(ProjectMember_AutocompleteVisibility)(0),       // 12: monorail.v3.ProjectMember.AutocompleteVisibility
	(*Project)(nil),                                 // 13: monorail.v3.Project
	(*StatusDef)(nil),                               // 14: monorail.v3.StatusDef
	(*LabelDef)(nil),                                // 15: monorail.v3.LabelDef
	(*FieldDef)(nil),                                // 16: monorail.v3.FieldDef
	(*ComponentDef)(nil),                            // 17: monorail.v3.ComponentDef
	(*ApprovalDef)(nil),                             // 18: monorail.v3.ApprovalDef
	(*ProjectSavedQuery)(nil),                       // 19: monorail.v3.ProjectSavedQuery
	(*IssueTemplate)(nil),                           // 20: monorail.v3.IssueTemplate
	(*ProjectConfig)(nil),                           // 21: monorail.v3.ProjectConfig
	(*ProjectMember)(nil),                           // 22: monorail.v3.ProjectMember
	(*FieldDef_EnumTypeSettings)(nil),               // 23: monorail.v3.FieldDef.EnumTypeSettings
	(*FieldDef_IntTypeSettings)(nil),                // 24: monorail.v3.FieldDef.IntTypeSettings
	(*FieldDef_StrTypeSettings)(nil),                // 25: monorail.v3.FieldDef.StrTypeSettings
	(*FieldDef_UserTypeSettings)(nil),               // 26: monorail.v3.FieldDef.UserTypeSettings
	(*FieldDef_DateTypeSettings)(nil),               // 27: monorail.v3.FieldDef.DateTypeSettings
	(*FieldDef_EnumTypeSettings_Choice)(nil),        // 28: monorail.v3.FieldDef.EnumTypeSettings.Choice
	(*ProjectConfig_GridViewConfig)(nil),            // 29: monorail.v3.ProjectConfig.GridViewConfig
	(*timestamp.Timestamp)(nil),                     // 30: google.protobuf.Timestamp
	(*Issue)(nil),                                   // 31: monorail.v3.Issue
	(*ApprovalValue)(nil),                           // 32: monorail.v3.ApprovalValue
	(*IssuesListColumn)(nil),                        // 33: monorail.v3.IssuesListColumn
	(Permission)(0),                                 // 34: monorail.v3.Permission
}
var file_api_v3_api_proto_project_objects_proto_depIdxs = []int32{
	0,  // 0: monorail.v3.StatusDef.type:type_name -> monorail.v3.StatusDef.StatusDefType
	1,  // 1: monorail.v3.StatusDef.state:type_name -> monorail.v3.StatusDef.StatusDefState
	2,  // 2: monorail.v3.LabelDef.state:type_name -> monorail.v3.LabelDef.LabelDefState
	3,  // 3: monorail.v3.FieldDef.type:type_name -> monorail.v3.FieldDef.Type
	4,  // 4: monorail.v3.FieldDef.traits:type_name -> monorail.v3.FieldDef.Traits
	23, // 5: monorail.v3.FieldDef.enum_settings:type_name -> monorail.v3.FieldDef.EnumTypeSettings
	24, // 6: monorail.v3.FieldDef.int_settings:type_name -> monorail.v3.FieldDef.IntTypeSettings
	25, // 7: monorail.v3.FieldDef.str_settings:type_name -> monorail.v3.FieldDef.StrTypeSettings
	26, // 8: monorail.v3.FieldDef.user_settings:type_name -> monorail.v3.FieldDef.UserTypeSettings
	27, // 9: monorail.v3.FieldDef.date_settings:type_name -> monorail.v3.FieldDef.DateTypeSettings
	8,  // 10: monorail.v3.ComponentDef.state:type_name -> monorail.v3.ComponentDef.ComponentDefState
	30, // 11: monorail.v3.ComponentDef.create_time:type_name -> google.protobuf.Timestamp
	30, // 12: monorail.v3.ComponentDef.modify_time:type_name -> google.protobuf.Timestamp
	31, // 13: monorail.v3.IssueTemplate.issue:type_name -> monorail.v3.Issue
	32, // 14: monorail.v3.IssueTemplate.approval_values:type_name -> monorail.v3.ApprovalValue
	9,  // 15: monorail.v3.IssueTemplate.template_privacy:type_name -> monorail.v3.IssueTemplate.TemplatePrivacy
	10, // 16: monorail.v3.IssueTemplate.default_owner:type_name -> monorail.v3.IssueTemplate.DefaultOwner
	33, // 17: monorail.v3.ProjectConfig.default_columns:type_name -> monorail.v3.IssuesListColumn
	29, // 18: monorail.v3.ProjectConfig.project_grid_config:type_name -> monorail.v3.ProjectConfig.GridViewConfig
	11, // 19: monorail.v3.ProjectMember.role:type_name -> monorail.v3.ProjectMember.ProjectRole
	34, // 20: monorail.v3.ProjectMember.standard_perms:type_name -> monorail.v3.Permission
	12, // 21: monorail.v3.ProjectMember.include_in_autocomplete:type_name -> monorail.v3.ProjectMember.AutocompleteVisibility
	28, // 22: monorail.v3.FieldDef.EnumTypeSettings.choices:type_name -> monorail.v3.FieldDef.EnumTypeSettings.Choice
	5,  // 23: monorail.v3.FieldDef.UserTypeSettings.notify_triggers:type_name -> monorail.v3.FieldDef.UserTypeSettings.NotifyTriggers
	6,  // 24: monorail.v3.FieldDef.UserTypeSettings.role_requirements:type_name -> monorail.v3.FieldDef.UserTypeSettings.RoleRequirements
	7,  // 25: monorail.v3.FieldDef.DateTypeSettings.date_action:type_name -> monorail.v3.FieldDef.DateTypeSettings.DateAction
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_api_v3_api_proto_project_objects_proto_init() }
func file_api_v3_api_proto_project_objects_proto_init() {
	if File_api_v3_api_proto_project_objects_proto != nil {
		return
	}
	file_api_v3_api_proto_issue_objects_proto_init()
	file_api_v3_api_proto_permission_objects_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v3_api_proto_project_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectSavedQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssueTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef_EnumTypeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef_IntTypeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef_StrTypeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef_UserTypeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef_DateTypeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDef_EnumTypeSettings_Choice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v3_api_proto_project_objects_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectConfig_GridViewConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v3_api_proto_project_objects_proto_rawDesc,
			NumEnums:      13,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v3_api_proto_project_objects_proto_goTypes,
		DependencyIndexes: file_api_v3_api_proto_project_objects_proto_depIdxs,
		EnumInfos:         file_api_v3_api_proto_project_objects_proto_enumTypes,
		MessageInfos:      file_api_v3_api_proto_project_objects_proto_msgTypes,
	}.Build()
	File_api_v3_api_proto_project_objects_proto = out.File
	file_api_v3_api_proto_project_objects_proto_rawDesc = nil
	file_api_v3_api_proto_project_objects_proto_goTypes = nil
	file_api_v3_api_proto_project_objects_proto_depIdxs = nil
}
