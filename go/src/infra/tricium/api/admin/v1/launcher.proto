// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

import "infra/tricium/api/v1/data.proto";

package admin;

// Launcher implements the internal launcher API of the Tricium service.
service Launcher {
  // Launch launches a workflow for provided request details.
  rpc Launch(LaunchRequest) returns (LaunchResponse);
}

// LaunchRequest contains the details needed to launch a workflow for an
// analysis request.
message LaunchRequest {
  // The run ID created by a Tricium.Analyze call.
  int64 run_id = 1;

  // The name of the project in luci-config.
  string project = 2;

  // The full URL of the git repo used for this run.
  string git_url = 3;

  // A git commit-ish, such as a Gerrit revision ref name like
  // "refs/changes/34/1234/1", or any other ref name or commit hash.
  // This is used in the GitFileDetails data type used to pull files.
  string git_ref = 4;

  // File metadata from the root of the Git repository.
  repeated tricium.Data.File files = 5;

  // Commit message text from Gerrit if available.
  //
  // If this launch request is not for Gerrit, this could be an empty string.
  string commit_message = 6;
}

message LaunchResponse {
}
