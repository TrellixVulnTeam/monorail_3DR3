// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tricium/api/admin/v1/tracker.proto

package admin

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	v1 "infra/tricium/api/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// WorkflowLaunchedRequest specified details need to mark a workflow as
// launched.
//
// This message should be sent by the Launcher after a workflow has been launched.
type WorkflowLaunchedRequest struct {
	RunId                int64    `protobuf:"varint,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowLaunchedRequest) Reset()         { *m = WorkflowLaunchedRequest{} }
func (m *WorkflowLaunchedRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowLaunchedRequest) ProtoMessage()    {}
func (*WorkflowLaunchedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3a5c4f0d9b4ac4, []int{0}
}

func (m *WorkflowLaunchedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowLaunchedRequest.Unmarshal(m, b)
}
func (m *WorkflowLaunchedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowLaunchedRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowLaunchedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowLaunchedRequest.Merge(m, src)
}
func (m *WorkflowLaunchedRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowLaunchedRequest.Size(m)
}
func (m *WorkflowLaunchedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowLaunchedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowLaunchedRequest proto.InternalMessageInfo

func (m *WorkflowLaunchedRequest) GetRunId() int64 {
	if m != nil {
		return m.RunId
	}
	return 0
}

type WorkflowLaunchedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowLaunchedResponse) Reset()         { *m = WorkflowLaunchedResponse{} }
func (m *WorkflowLaunchedResponse) String() string { return proto.CompactTextString(m) }
func (*WorkflowLaunchedResponse) ProtoMessage()    {}
func (*WorkflowLaunchedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3a5c4f0d9b4ac4, []int{1}
}

func (m *WorkflowLaunchedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowLaunchedResponse.Unmarshal(m, b)
}
func (m *WorkflowLaunchedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowLaunchedResponse.Marshal(b, m, deterministic)
}
func (m *WorkflowLaunchedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowLaunchedResponse.Merge(m, src)
}
func (m *WorkflowLaunchedResponse) XXX_Size() int {
	return xxx_messageInfo_WorkflowLaunchedResponse.Size(m)
}
func (m *WorkflowLaunchedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowLaunchedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowLaunchedResponse proto.InternalMessageInfo

// WorkerLaunchedRequest specifies details needed to mark a worker as launched.
// This includes details useful for the tracking UI.
//
// This message should be sent by the Driver after a swarming task or buildbucket
// build for the worker has been triggered.
type WorkerLaunchedRequest struct {
	RunId                int64    `protobuf:"varint,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Worker               string   `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
	IsolatedInputHash    string   `protobuf:"bytes,3,opt,name=isolated_input_hash,json=isolatedInputHash,proto3" json:"isolated_input_hash,omitempty"`
	SwarmingTaskId       string   `protobuf:"bytes,4,opt,name=swarming_task_id,json=swarmingTaskId,proto3" json:"swarming_task_id,omitempty"`
	BuildbucketBuildId   int64    `protobuf:"varint,5,opt,name=buildbucket_build_id,json=buildbucketBuildId,proto3" json:"buildbucket_build_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerLaunchedRequest) Reset()         { *m = WorkerLaunchedRequest{} }
func (m *WorkerLaunchedRequest) String() string { return proto.CompactTextString(m) }
func (*WorkerLaunchedRequest) ProtoMessage()    {}
func (*WorkerLaunchedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3a5c4f0d9b4ac4, []int{2}
}

func (m *WorkerLaunchedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerLaunchedRequest.Unmarshal(m, b)
}
func (m *WorkerLaunchedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerLaunchedRequest.Marshal(b, m, deterministic)
}
func (m *WorkerLaunchedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerLaunchedRequest.Merge(m, src)
}
func (m *WorkerLaunchedRequest) XXX_Size() int {
	return xxx_messageInfo_WorkerLaunchedRequest.Size(m)
}
func (m *WorkerLaunchedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerLaunchedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerLaunchedRequest proto.InternalMessageInfo

func (m *WorkerLaunchedRequest) GetRunId() int64 {
	if m != nil {
		return m.RunId
	}
	return 0
}

func (m *WorkerLaunchedRequest) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

func (m *WorkerLaunchedRequest) GetIsolatedInputHash() string {
	if m != nil {
		return m.IsolatedInputHash
	}
	return ""
}

func (m *WorkerLaunchedRequest) GetSwarmingTaskId() string {
	if m != nil {
		return m.SwarmingTaskId
	}
	return ""
}

func (m *WorkerLaunchedRequest) GetBuildbucketBuildId() int64 {
	if m != nil {
		return m.BuildbucketBuildId
	}
	return 0
}

type WorkerLaunchedResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerLaunchedResponse) Reset()         { *m = WorkerLaunchedResponse{} }
func (m *WorkerLaunchedResponse) String() string { return proto.CompactTextString(m) }
func (*WorkerLaunchedResponse) ProtoMessage()    {}
func (*WorkerLaunchedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3a5c4f0d9b4ac4, []int{3}
}

func (m *WorkerLaunchedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerLaunchedResponse.Unmarshal(m, b)
}
func (m *WorkerLaunchedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerLaunchedResponse.Marshal(b, m, deterministic)
}
func (m *WorkerLaunchedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerLaunchedResponse.Merge(m, src)
}
func (m *WorkerLaunchedResponse) XXX_Size() int {
	return xxx_messageInfo_WorkerLaunchedResponse.Size(m)
}
func (m *WorkerLaunchedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerLaunchedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerLaunchedResponse proto.InternalMessageInfo

// WorkerDoneRequest specifies details needed to mark a worker as done.
// This includes details useful for the tracking UI.
//
// This message should be sent by the Driver after results from the swarming
// task for a worker have been collected. Depending on the type of worker, either
// the isolated_output_hash and isolated_namespace (for swarming tasks) or the
// buildbucket_output (for buildbucket builds) should be populated.
type WorkerDoneRequest struct {
	RunId                int64        `protobuf:"varint,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Worker               string       `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
	IsolatedNamespace    string       `protobuf:"bytes,7,opt,name=isolated_namespace,json=isolatedNamespace,proto3" json:"isolated_namespace,omitempty"`
	IsolatedOutputHash   string       `protobuf:"bytes,3,opt,name=isolated_output_hash,json=isolatedOutputHash,proto3" json:"isolated_output_hash,omitempty"`
	Provides             v1.Data_Type `protobuf:"varint,4,opt,name=provides,proto3,enum=tricium.Data_Type" json:"provides,omitempty"`
	State                v1.State     `protobuf:"varint,5,opt,name=state,proto3,enum=tricium.State" json:"state,omitempty"`
	BuildbucketOutput    string       `protobuf:"bytes,6,opt,name=buildbucket_output,json=buildbucketOutput,proto3" json:"buildbucket_output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WorkerDoneRequest) Reset()         { *m = WorkerDoneRequest{} }
func (m *WorkerDoneRequest) String() string { return proto.CompactTextString(m) }
func (*WorkerDoneRequest) ProtoMessage()    {}
func (*WorkerDoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3a5c4f0d9b4ac4, []int{4}
}

func (m *WorkerDoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerDoneRequest.Unmarshal(m, b)
}
func (m *WorkerDoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerDoneRequest.Marshal(b, m, deterministic)
}
func (m *WorkerDoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerDoneRequest.Merge(m, src)
}
func (m *WorkerDoneRequest) XXX_Size() int {
	return xxx_messageInfo_WorkerDoneRequest.Size(m)
}
func (m *WorkerDoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerDoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerDoneRequest proto.InternalMessageInfo

func (m *WorkerDoneRequest) GetRunId() int64 {
	if m != nil {
		return m.RunId
	}
	return 0
}

func (m *WorkerDoneRequest) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

func (m *WorkerDoneRequest) GetIsolatedNamespace() string {
	if m != nil {
		return m.IsolatedNamespace
	}
	return ""
}

func (m *WorkerDoneRequest) GetIsolatedOutputHash() string {
	if m != nil {
		return m.IsolatedOutputHash
	}
	return ""
}

func (m *WorkerDoneRequest) GetProvides() v1.Data_Type {
	if m != nil {
		return m.Provides
	}
	return v1.Data_NONE
}

func (m *WorkerDoneRequest) GetState() v1.State {
	if m != nil {
		return m.State
	}
	return v1.State_PENDING
}

func (m *WorkerDoneRequest) GetBuildbucketOutput() string {
	if m != nil {
		return m.BuildbucketOutput
	}
	return ""
}

type WorkerDoneResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerDoneResponse) Reset()         { *m = WorkerDoneResponse{} }
func (m *WorkerDoneResponse) String() string { return proto.CompactTextString(m) }
func (*WorkerDoneResponse) ProtoMessage()    {}
func (*WorkerDoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3a5c4f0d9b4ac4, []int{5}
}

func (m *WorkerDoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerDoneResponse.Unmarshal(m, b)
}
func (m *WorkerDoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerDoneResponse.Marshal(b, m, deterministic)
}
func (m *WorkerDoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerDoneResponse.Merge(m, src)
}
func (m *WorkerDoneResponse) XXX_Size() int {
	return xxx_messageInfo_WorkerDoneResponse.Size(m)
}
func (m *WorkerDoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerDoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerDoneResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WorkflowLaunchedRequest)(nil), "admin.WorkflowLaunchedRequest")
	proto.RegisterType((*WorkflowLaunchedResponse)(nil), "admin.WorkflowLaunchedResponse")
	proto.RegisterType((*WorkerLaunchedRequest)(nil), "admin.WorkerLaunchedRequest")
	proto.RegisterType((*WorkerLaunchedResponse)(nil), "admin.WorkerLaunchedResponse")
	proto.RegisterType((*WorkerDoneRequest)(nil), "admin.WorkerDoneRequest")
	proto.RegisterType((*WorkerDoneResponse)(nil), "admin.WorkerDoneResponse")
}

func init() {
	proto.RegisterFile("infra/tricium/api/admin/v1/tracker.proto", fileDescriptor_fc3a5c4f0d9b4ac4)
}

var fileDescriptor_fc3a5c4f0d9b4ac4 = []byte{
	// 457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0x8d, 0x76, 0x70, 0x2e, 0xa2, 0xcd, 0x6c, 0xc3, 0x44, 0xc0, 0xa6, 0x88, 0x8b,
	0xde, 0x90, 0x6c, 0xe5, 0x09, 0x40, 0xbb, 0xa0, 0x12, 0x1f, 0x52, 0x56, 0x89, 0xcb, 0xc8, 0x8d,
	0x3d, 0x6a, 0xa5, 0xb5, 0x83, 0x3f, 0x5a, 0xf1, 0x46, 0x3c, 0x0f, 0x4f, 0xc2, 0x23, 0x20, 0xdb,
	0x6d, 0x48, 0xbf, 0x24, 0xc4, 0x9d, 0xed, 0xdf, 0xdf, 0xc7, 0xe7, 0xfc, 0xf3, 0x0f, 0x0c, 0xb8,
	0x78, 0x50, 0x24, 0x37, 0x8a, 0x57, 0xdc, 0xce, 0x73, 0xd2, 0xf0, 0x9c, 0xd0, 0x39, 0x17, 0xf9,
	0xe2, 0x36, 0x37, 0x8a, 0x54, 0x35, 0x53, 0x59, 0xa3, 0xa4, 0x91, 0xa8, 0xe7, 0xcf, 0x93, 0xab,
	0xdd, 0x0b, 0x8b, 0xdb, 0x9c, 0x12, 0x43, 0x82, 0x2e, 0x49, 0xf7, 0x0a, 0x56, 0xdb, 0xa0, 0x49,
	0x6f, 0xe0, 0xd9, 0x57, 0xa9, 0xea, 0x87, 0x99, 0x5c, 0x7e, 0x24, 0x56, 0x54, 0x53, 0x46, 0x0b,
	0xf6, 0xdd, 0x32, 0x6d, 0xd0, 0x05, 0xf4, 0x95, 0x15, 0x25, 0xa7, 0x38, 0xba, 0x8e, 0x06, 0xc7,
	0x45, 0x4f, 0x59, 0x31, 0xa2, 0x69, 0x02, 0x78, 0xf7, 0x86, 0x6e, 0xa4, 0xd0, 0x2c, 0xfd, 0x15,
	0xc1, 0x85, 0x83, 0x4c, 0xfd, 0x5b, 0x31, 0x74, 0x09, 0xfd, 0xa5, 0xd7, 0xe3, 0xa3, 0xeb, 0x68,
	0xf0, 0xa4, 0x58, 0xed, 0x50, 0x06, 0x4f, 0xb9, 0x96, 0x33, 0x62, 0x18, 0x2d, 0xb9, 0x68, 0xac,
	0x29, 0xa7, 0x44, 0x4f, 0xf1, 0xb1, 0x17, 0x9d, 0xad, 0xd1, 0xc8, 0x91, 0x0f, 0x44, 0x4f, 0xd1,
	0x00, 0x4e, 0xf5, 0x92, 0xa8, 0x39, 0x17, 0xdf, 0x4a, 0x43, 0x74, 0xed, 0x1e, 0x7a, 0xe4, 0xc5,
	0xf1, 0xfa, 0x7c, 0x4c, 0x74, 0x3d, 0xa2, 0xe8, 0x06, 0xce, 0x27, 0x96, 0xcf, 0xe8, 0xc4, 0x56,
	0x35, 0x33, 0xa5, 0x5f, 0x3b, 0x75, 0xcf, 0xb7, 0x85, 0x3a, 0xec, 0xbd, 0x5b, 0x8e, 0x68, 0x8a,
	0xe1, 0x72, 0x7b, 0xa6, 0xd5, 0xb8, 0x3f, 0x8f, 0xe0, 0x2c, 0xa0, 0x3b, 0x29, 0xd8, 0x7f, 0x8e,
	0xfa, 0x06, 0x50, 0x3b, 0xaa, 0x20, 0x73, 0xa6, 0x1b, 0x52, 0x31, 0x7c, 0xb2, 0x39, 0xe9, 0xe7,
	0x35, 0x70, 0xfd, 0xb7, 0x72, 0x69, 0xcd, 0x96, 0x35, 0x6d, 0xa9, 0x2f, 0x1e, 0x79, 0x6f, 0x32,
	0x78, 0xdc, 0x28, 0xb9, 0xe0, 0x94, 0x69, 0xef, 0x49, 0x3c, 0x44, 0xd9, 0x3a, 0x04, 0x77, 0x2e,
	0x2d, 0xe3, 0x1f, 0x0d, 0x2b, 0x5a, 0x0d, 0x7a, 0x0d, 0x3d, 0x6d, 0x88, 0x61, 0xde, 0x92, 0x78,
	0x18, 0xb7, 0xe2, 0x7b, 0x77, 0x5a, 0x04, 0xe8, 0xda, 0xee, 0xfa, 0x18, 0x5a, 0xc1, 0xfd, 0xd0,
	0x76, 0x87, 0x84, 0x46, 0xd2, 0x73, 0x40, 0x5d, 0xa7, 0x82, 0x81, 0xc3, 0xdf, 0x11, 0x9c, 0x8c,
	0x43, 0xb6, 0xd1, 0x3d, 0x9c, 0x6e, 0xe7, 0x0a, 0xbd, 0xca, 0x7c, 0xd4, 0xb3, 0x03, 0x11, 0x4d,
	0xae, 0x0e, 0xf2, 0xf0, 0x00, 0xfa, 0x04, 0xf1, 0xe6, 0xb7, 0x43, 0x2f, 0x3a, 0x57, 0x76, 0x62,
	0x9a, 0xbc, 0x3c, 0x40, 0x57, 0xe5, 0xde, 0x01, 0xfc, 0x9d, 0x02, 0xe1, 0x0d, 0x71, 0x27, 0x02,
	0xc9, 0xf3, 0x3d, 0x24, 0x94, 0x98, 0xf4, 0xfd, 0x7f, 0xf7, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf1, 0x2c, 0xb5, 0x84, 0xef, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TrackerClient is the client API for Tracker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackerClient interface {
	// WorkflowLaunched marks the workflow as launched for a specified run.
	WorkflowLaunched(ctx context.Context, in *WorkflowLaunchedRequest, opts ...grpc.CallOption) (*WorkflowLaunchedResponse, error)
	// WorkerLaunched marks the specified worker as launched.
	WorkerLaunched(ctx context.Context, in *WorkerLaunchedRequest, opts ...grpc.CallOption) (*WorkerLaunchedResponse, error)
	// WorkerDone marks the specified worker as done.
	WorkerDone(ctx context.Context, in *WorkerDoneRequest, opts ...grpc.CallOption) (*WorkerDoneResponse, error)
}
type trackerPRPCClient struct {
	client *prpc.Client
}

func NewTrackerPRPCClient(client *prpc.Client) TrackerClient {
	return &trackerPRPCClient{client}
}

func (c *trackerPRPCClient) WorkflowLaunched(ctx context.Context, in *WorkflowLaunchedRequest, opts ...grpc.CallOption) (*WorkflowLaunchedResponse, error) {
	out := new(WorkflowLaunchedResponse)
	err := c.client.Call(ctx, "admin.Tracker", "WorkflowLaunched", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackerPRPCClient) WorkerLaunched(ctx context.Context, in *WorkerLaunchedRequest, opts ...grpc.CallOption) (*WorkerLaunchedResponse, error) {
	out := new(WorkerLaunchedResponse)
	err := c.client.Call(ctx, "admin.Tracker", "WorkerLaunched", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackerPRPCClient) WorkerDone(ctx context.Context, in *WorkerDoneRequest, opts ...grpc.CallOption) (*WorkerDoneResponse, error) {
	out := new(WorkerDoneResponse)
	err := c.client.Call(ctx, "admin.Tracker", "WorkerDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type trackerClient struct {
	cc grpc.ClientConnInterface
}

func NewTrackerClient(cc grpc.ClientConnInterface) TrackerClient {
	return &trackerClient{cc}
}

func (c *trackerClient) WorkflowLaunched(ctx context.Context, in *WorkflowLaunchedRequest, opts ...grpc.CallOption) (*WorkflowLaunchedResponse, error) {
	out := new(WorkflowLaunchedResponse)
	err := c.cc.Invoke(ctx, "/admin.Tracker/WorkflowLaunched", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackerClient) WorkerLaunched(ctx context.Context, in *WorkerLaunchedRequest, opts ...grpc.CallOption) (*WorkerLaunchedResponse, error) {
	out := new(WorkerLaunchedResponse)
	err := c.cc.Invoke(ctx, "/admin.Tracker/WorkerLaunched", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackerClient) WorkerDone(ctx context.Context, in *WorkerDoneRequest, opts ...grpc.CallOption) (*WorkerDoneResponse, error) {
	out := new(WorkerDoneResponse)
	err := c.cc.Invoke(ctx, "/admin.Tracker/WorkerDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackerServer is the server API for Tracker service.
type TrackerServer interface {
	// WorkflowLaunched marks the workflow as launched for a specified run.
	WorkflowLaunched(context.Context, *WorkflowLaunchedRequest) (*WorkflowLaunchedResponse, error)
	// WorkerLaunched marks the specified worker as launched.
	WorkerLaunched(context.Context, *WorkerLaunchedRequest) (*WorkerLaunchedResponse, error)
	// WorkerDone marks the specified worker as done.
	WorkerDone(context.Context, *WorkerDoneRequest) (*WorkerDoneResponse, error)
}

// UnimplementedTrackerServer can be embedded to have forward compatible implementations.
type UnimplementedTrackerServer struct {
}

func (*UnimplementedTrackerServer) WorkflowLaunched(ctx context.Context, req *WorkflowLaunchedRequest) (*WorkflowLaunchedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkflowLaunched not implemented")
}
func (*UnimplementedTrackerServer) WorkerLaunched(ctx context.Context, req *WorkerLaunchedRequest) (*WorkerLaunchedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkerLaunched not implemented")
}
func (*UnimplementedTrackerServer) WorkerDone(ctx context.Context, req *WorkerDoneRequest) (*WorkerDoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkerDone not implemented")
}

func RegisterTrackerServer(s prpc.Registrar, srv TrackerServer) {
	s.RegisterService(&_Tracker_serviceDesc, srv)
}

func _Tracker_WorkflowLaunched_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowLaunchedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServer).WorkflowLaunched(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Tracker/WorkflowLaunched",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServer).WorkflowLaunched(ctx, req.(*WorkflowLaunchedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tracker_WorkerLaunched_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerLaunchedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServer).WorkerLaunched(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Tracker/WorkerLaunched",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServer).WorkerLaunched(ctx, req.(*WorkerLaunchedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tracker_WorkerDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerDoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServer).WorkerDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.Tracker/WorkerDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServer).WorkerDone(ctx, req.(*WorkerDoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tracker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.Tracker",
	HandlerType: (*TrackerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WorkflowLaunched",
			Handler:    _Tracker_WorkflowLaunched_Handler,
		},
		{
			MethodName: "WorkerLaunched",
			Handler:    _Tracker_WorkerLaunched_Handler,
		},
		{
			MethodName: "WorkerDone",
			Handler:    _Tracker_WorkerDone_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/tricium/api/admin/v1/tracker.proto",
}
