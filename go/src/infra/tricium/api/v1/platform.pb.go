// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/tricium/api/v1/platform.proto

package tricium

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum names of supported platforms.
//
// Note that all platforms may be used to specify data dependencies but only
// some may be used as runtime platforms.
//
// The number of a platform corresponds to one bit in the platforms field of
// Tricium data entries.
//
// Names must not contain "_", since this is used as a separator character
// in worker names.
type Platform_Name int32

const (
	// Use for platform-independent data types.
	Platform_ANY Platform_Name = 0
	// Generic Linux.
	Platform_LINUX  Platform_Name = 1
	Platform_UBUNTU Platform_Name = 2
	// Generic Android.
	Platform_ANDROID Platform_Name = 11
	// Generic Mac
	Platform_MAC Platform_Name = 16
	Platform_OSX Platform_Name = 17
	Platform_IOS Platform_Name = 18
	// Generic Windows.
	Platform_WINDOWS  Platform_Name = 21
	Platform_CHROMEOS Platform_Name = 26
	Platform_FUCHSIA  Platform_Name = 31
)

var Platform_Name_name = map[int32]string{
	0:  "ANY",
	1:  "LINUX",
	2:  "UBUNTU",
	11: "ANDROID",
	16: "MAC",
	17: "OSX",
	18: "IOS",
	21: "WINDOWS",
	26: "CHROMEOS",
	31: "FUCHSIA",
}

var Platform_Name_value = map[string]int32{
	"ANY":      0,
	"LINUX":    1,
	"UBUNTU":   2,
	"ANDROID":  11,
	"MAC":      16,
	"OSX":      17,
	"IOS":      18,
	"WINDOWS":  21,
	"CHROMEOS": 26,
	"FUCHSIA":  31,
}

func (x Platform_Name) String() string {
	return proto.EnumName(Platform_Name_name, int32(x))
}

func (Platform_Name) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_def4186eac94d158, []int{0, 0}
}

// Platforms supported by Tricium.
type Platform struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Platform) Reset()         { *m = Platform{} }
func (m *Platform) String() string { return proto.CompactTextString(m) }
func (*Platform) ProtoMessage()    {}
func (*Platform) Descriptor() ([]byte, []int) {
	return fileDescriptor_def4186eac94d158, []int{0}
}

func (m *Platform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Platform.Unmarshal(m, b)
}
func (m *Platform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Platform.Marshal(b, m, deterministic)
}
func (m *Platform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Platform.Merge(m, src)
}
func (m *Platform) XXX_Size() int {
	return xxx_messageInfo_Platform.Size(m)
}
func (m *Platform) XXX_DiscardUnknown() {
	xxx_messageInfo_Platform.DiscardUnknown(m)
}

var xxx_messageInfo_Platform proto.InternalMessageInfo

// Platform details for supported platforms.
//
// Links platform enum name to Swarming dimensions.
type Platform_Details struct {
	Name Platform_Name `protobuf:"varint,1,opt,name=name,proto3,enum=tricium.Platform_Name" json:"name,omitempty"`
	// Swarming dimensions of the form "key:value", with keys and values mapping
	// to valid swarming keys/values.
	Dimensions []string `protobuf:"bytes,2,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	// Whether this platform can be used as a runtime platform.
	//
	// Note that we can analyze for some platforms without actually running
	// the function workers on those platforms.
	//
	// This field is used when validating configurations and only platforms
	// with this field set to true may be configured as the runtime platform
	// of an implementation. All platform values may be used to express
	// data dependencies between functions.
	HasRuntime           bool     `protobuf:"varint,3,opt,name=has_runtime,json=hasRuntime,proto3" json:"has_runtime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Platform_Details) Reset()         { *m = Platform_Details{} }
func (m *Platform_Details) String() string { return proto.CompactTextString(m) }
func (*Platform_Details) ProtoMessage()    {}
func (*Platform_Details) Descriptor() ([]byte, []int) {
	return fileDescriptor_def4186eac94d158, []int{0, 0}
}

func (m *Platform_Details) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Platform_Details.Unmarshal(m, b)
}
func (m *Platform_Details) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Platform_Details.Marshal(b, m, deterministic)
}
func (m *Platform_Details) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Platform_Details.Merge(m, src)
}
func (m *Platform_Details) XXX_Size() int {
	return xxx_messageInfo_Platform_Details.Size(m)
}
func (m *Platform_Details) XXX_DiscardUnknown() {
	xxx_messageInfo_Platform_Details.DiscardUnknown(m)
}

var xxx_messageInfo_Platform_Details proto.InternalMessageInfo

func (m *Platform_Details) GetName() Platform_Name {
	if m != nil {
		return m.Name
	}
	return Platform_ANY
}

func (m *Platform_Details) GetDimensions() []string {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *Platform_Details) GetHasRuntime() bool {
	if m != nil {
		return m.HasRuntime
	}
	return false
}

func init() {
	proto.RegisterEnum("tricium.Platform_Name", Platform_Name_name, Platform_Name_value)
	proto.RegisterType((*Platform)(nil), "tricium.Platform")
	proto.RegisterType((*Platform_Details)(nil), "tricium.Platform.Details")
}

func init() {
	proto.RegisterFile("infra/tricium/api/v1/platform.proto", fileDescriptor_def4186eac94d158)
}

var fileDescriptor_def4186eac94d158 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd0, 0xc1, 0x4e, 0xb3, 0x40,
	0x14, 0x05, 0xe0, 0x9f, 0xd2, 0xbf, 0xd0, 0x8b, 0x31, 0xd7, 0x49, 0x34, 0xa4, 0x0b, 0x4b, 0xea,
	0x86, 0xb8, 0x80, 0xa8, 0x4f, 0x80, 0xa0, 0x29, 0x89, 0x9d, 0x31, 0x83, 0xa4, 0x75, 0x65, 0x46,
	0xa5, 0xe9, 0x24, 0x1d, 0x20, 0x40, 0x79, 0x78, 0x57, 0x66, 0x2a, 0x26, 0xee, 0x4e, 0xce, 0xf9,
	0x72, 0x17, 0x17, 0xae, 0x64, 0xb9, 0x6d, 0x44, 0xd8, 0x35, 0xf2, 0x43, 0x1e, 0x54, 0x28, 0x6a,
	0x19, 0xf6, 0x37, 0x61, 0xbd, 0x17, 0xdd, 0xb6, 0x6a, 0x54, 0x50, 0x37, 0x55, 0x57, 0x11, 0x6b,
	0x98, 0x17, 0x5f, 0x06, 0xd8, 0xcf, 0xc3, 0x36, 0xeb, 0xc1, 0x4a, 0x8a, 0x4e, 0xc8, 0x7d, 0x4b,
	0xae, 0x61, 0x5c, 0x0a, 0x55, 0xb8, 0x86, 0x67, 0xf8, 0xa7, 0xb7, 0x17, 0xc1, 0xe0, 0x83, 0x5f,
	0x1b, 0x50, 0xa1, 0x0a, 0x7e, 0x34, 0xe4, 0x12, 0xe0, 0x53, 0xaa, 0xa2, 0x6c, 0x65, 0x55, 0xb6,
	0xee, 0xc8, 0x33, 0xfd, 0x29, 0xff, 0xd3, 0x90, 0x39, 0x38, 0x3b, 0xd1, 0xbe, 0x35, 0x87, 0xb2,
	0x93, 0xaa, 0x70, 0x4d, 0xcf, 0xf0, 0x6d, 0x0e, 0x3b, 0xd1, 0xf2, 0x9f, 0x66, 0xd1, 0xc3, 0x58,
	0x9f, 0x23, 0x16, 0x98, 0x11, 0x7d, 0xc5, 0x7f, 0x64, 0x0a, 0xff, 0x9f, 0x52, 0x9a, 0x6f, 0xd0,
	0x20, 0x00, 0x93, 0xfc, 0x3e, 0xa7, 0x2f, 0x39, 0x8e, 0x88, 0x03, 0x56, 0x44, 0x13, 0xce, 0xd2,
	0x04, 0x1d, 0x8d, 0x57, 0x51, 0x8c, 0xa8, 0x03, 0xcb, 0x36, 0x78, 0xa6, 0x43, 0xca, 0x32, 0x24,
	0xda, 0xad, 0x53, 0x9a, 0xb0, 0x75, 0x86, 0xe7, 0xe4, 0x04, 0xec, 0x78, 0xc9, 0xd9, 0xea, 0x81,
	0x65, 0x38, 0xd3, 0xd3, 0x63, 0x1e, 0x2f, 0xb3, 0x34, 0xc2, 0xf9, 0xfb, 0xe4, 0xf8, 0x8c, 0xbb,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x85, 0x8a, 0x4e, 0x33, 0x01, 0x00, 0x00,
}
