// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/qscheduler/qslib/protos/config.proto

package protos

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// SchedulerConfig represents configuration information about the behavior of
// accounts for this quota scheduler pool.
type SchedulerConfig struct {
	// Configuration for a given account, keyed by account id.
	AccountConfigs map[string]*AccountConfig `protobuf:"bytes,1,rep,name=account_configs,json=accountConfigs,proto3" json:"account_configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// If set, scheduler will never preempt running tasks.
	DisablePreemption bool `protobuf:"varint,2,opt,name=disable_preemption,json=disablePreemption,proto3" json:"disable_preemption,omitempty"`
	// BotExpiration is the duration after which a bot will no longer be
	// considered idle, if the scheduler doesn't receive any assignment requests
	// for it.
	//
	// If unspecified, defaults to 300 seconds.
	BotExpiration        *duration.Duration `protobuf:"bytes,4,opt,name=bot_expiration,json=botExpiration,proto3" json:"bot_expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SchedulerConfig) Reset()         { *m = SchedulerConfig{} }
func (m *SchedulerConfig) String() string { return proto.CompactTextString(m) }
func (*SchedulerConfig) ProtoMessage()    {}
func (*SchedulerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9585cdf0027c1e37, []int{0}
}

func (m *SchedulerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulerConfig.Unmarshal(m, b)
}
func (m *SchedulerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulerConfig.Marshal(b, m, deterministic)
}
func (m *SchedulerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulerConfig.Merge(m, src)
}
func (m *SchedulerConfig) XXX_Size() int {
	return xxx_messageInfo_SchedulerConfig.Size(m)
}
func (m *SchedulerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulerConfig proto.InternalMessageInfo

func (m *SchedulerConfig) GetAccountConfigs() map[string]*AccountConfig {
	if m != nil {
		return m.AccountConfigs
	}
	return nil
}

func (m *SchedulerConfig) GetDisablePreemption() bool {
	if m != nil {
		return m.DisablePreemption
	}
	return false
}

func (m *SchedulerConfig) GetBotExpiration() *duration.Duration {
	if m != nil {
		return m.BotExpiration
	}
	return nil
}

// AccountConfig represents per-quota-account configuration information, such
// as the recharge parameters. This does not represent anything about the
// current state of an account.
type AccountConfig struct {
	// ChargeRate is the rates (per second) at which per-priority accounts grow.
	//
	// Conceptually this is the time-averaged number of workers that this account
	// may use, at each priority level.
	ChargeRate []float32 `protobuf:"fixed32,1,rep,packed,name=charge_rate,json=chargeRate,proto3" json:"charge_rate,omitempty"`
	// MaxChargeSeconds is the maximum amount of time over which this account can
	// accumulate quota before hitting its cap.
	//
	// Conceptually this sets the time window over which the time averaged
	// utilization by this account is measured. Very bursty clients will need to
	// use a wider window, whereas very consistent clients will use a narrow one.
	MaxChargeSeconds float32 `protobuf:"fixed32,2,opt,name=max_charge_seconds,json=maxChargeSeconds,proto3" json:"max_charge_seconds,omitempty"`
	// MaxFanout is the maximum number of concurrent paid jobs for a single
	// provisionable label that this account will pay for (0 = no limit).
	//
	// Additional jobs beyond this may run if there is idle capacity, but they
	// will run in the FreeBucket priority level (except if DisableFreeTasks
	// is true, in which case they will not run).
	MaxFanout int32 `protobuf:"varint,3,opt,name=max_fanout,json=maxFanout,proto3" json:"max_fanout,omitempty"`
	// If DisableFreeTasks is true, then jobs for this account will not start
	// running if they would be run at FreeBucket priority.
	DisableFreeTasks bool `protobuf:"varint,4,opt,name=disable_free_tasks,json=disableFreeTasks,proto3" json:"disable_free_tasks,omitempty"`
	// Human readable description of account's intended purpose.
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountConfig) Reset()         { *m = AccountConfig{} }
func (m *AccountConfig) String() string { return proto.CompactTextString(m) }
func (*AccountConfig) ProtoMessage()    {}
func (*AccountConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9585cdf0027c1e37, []int{1}
}

func (m *AccountConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountConfig.Unmarshal(m, b)
}
func (m *AccountConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountConfig.Marshal(b, m, deterministic)
}
func (m *AccountConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountConfig.Merge(m, src)
}
func (m *AccountConfig) XXX_Size() int {
	return xxx_messageInfo_AccountConfig.Size(m)
}
func (m *AccountConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AccountConfig proto.InternalMessageInfo

func (m *AccountConfig) GetChargeRate() []float32 {
	if m != nil {
		return m.ChargeRate
	}
	return nil
}

func (m *AccountConfig) GetMaxChargeSeconds() float32 {
	if m != nil {
		return m.MaxChargeSeconds
	}
	return 0
}

func (m *AccountConfig) GetMaxFanout() int32 {
	if m != nil {
		return m.MaxFanout
	}
	return 0
}

func (m *AccountConfig) GetDisableFreeTasks() bool {
	if m != nil {
		return m.DisableFreeTasks
	}
	return false
}

func (m *AccountConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*SchedulerConfig)(nil), "protos.SchedulerConfig")
	proto.RegisterMapType((map[string]*AccountConfig)(nil), "protos.SchedulerConfig.AccountConfigsEntry")
	proto.RegisterType((*AccountConfig)(nil), "protos.AccountConfig")
}

func init() {
	proto.RegisterFile("infra/qscheduler/qslib/protos/config.proto", fileDescriptor_9585cdf0027c1e37)
}

var fileDescriptor_9585cdf0027c1e37 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x8f, 0x93, 0x40,
	0x14, 0xc7, 0x33, 0xd0, 0x9a, 0xee, 0x90, 0xdd, 0xc5, 0x31, 0x26, 0xb8, 0x89, 0x4a, 0xf6, 0x44,
	0xac, 0x42, 0x52, 0x2f, 0xc6, 0x93, 0xa6, 0xb6, 0x07, 0x4f, 0x66, 0xda, 0x83, 0x37, 0x32, 0xc0,
	0x83, 0x92, 0x02, 0x43, 0x67, 0x06, 0x43, 0xbf, 0x99, 0x5f, 0xc2, 0xef, 0x64, 0x98, 0x81, 0xc6,
	0x9a, 0xbd, 0xf1, 0xfe, 0xef, 0xf7, 0x1e, 0xef, 0xff, 0xcf, 0xe0, 0x77, 0x65, 0x93, 0x0b, 0x16,
	0x9d, 0x64, 0x7a, 0x80, 0xac, 0xab, 0x40, 0x44, 0x27, 0x59, 0x95, 0x49, 0xd4, 0x0a, 0xae, 0xb8,
	0x8c, 0x52, 0xde, 0xe4, 0x65, 0x11, 0xea, 0x8a, 0x3c, 0x33, 0xe2, 0xc3, 0x9b, 0x82, 0xf3, 0xa2,
	0x02, 0xc3, 0x24, 0x5d, 0x1e, 0x65, 0x9d, 0x60, 0xaa, 0xe4, 0x8d, 0xe1, 0x1e, 0x7f, 0x5b, 0xf8,
	0x7e, 0x37, 0xed, 0x5b, 0xeb, 0x0d, 0x64, 0x8f, 0xef, 0x59, 0x9a, 0xf2, 0xae, 0x51, 0xb1, 0xd9,
	0x29, 0x3d, 0xe4, 0xdb, 0x81, 0xb3, 0x5a, 0x9a, 0x21, 0x19, 0xfe, 0x37, 0x11, 0x7e, 0x35, 0xb8,
	0xa9, 0xe4, 0xa6, 0x51, 0xe2, 0x4c, 0xef, 0xd8, 0x95, 0x48, 0x3e, 0x60, 0x92, 0x95, 0x92, 0x25,
	0x15, 0xc4, 0xad, 0x00, 0xa8, 0xdb, 0xe1, 0x0a, 0xcf, 0xf2, 0x51, 0xb0, 0xa0, 0xcf, 0xc7, 0xce,
	0x8f, 0x4b, 0x83, 0x7c, 0xc1, 0x77, 0x09, 0x57, 0x31, 0xf4, 0x6d, 0x69, 0x0e, 0xf6, 0x66, 0x3e,
	0x0a, 0x9c, 0xd5, 0xab, 0xd0, 0x38, 0x0a, 0x27, 0x47, 0xe1, 0xb7, 0xd1, 0x11, 0xbd, 0x4d, 0xb8,
	0xda, 0x5c, 0xf8, 0x87, 0x9f, 0xf8, 0xc5, 0x13, 0x77, 0x11, 0x17, 0xdb, 0x47, 0x38, 0x7b, 0xc8,
	0x47, 0xc1, 0x0d, 0x1d, 0x3e, 0xc9, 0x12, 0xcf, 0x7f, 0xb1, 0xaa, 0x03, 0x7d, 0x8c, 0xb3, 0x7a,
	0x39, 0xb9, 0xbc, 0x9a, 0xa6, 0x86, 0xf9, 0x6c, 0x7d, 0x42, 0xdf, 0x67, 0x0b, 0xdb, 0x9d, 0x3d,
	0xfe, 0x41, 0xf8, 0xf6, 0x0a, 0x21, 0x6f, 0xb1, 0x93, 0x1e, 0x98, 0x28, 0x20, 0x16, 0x4c, 0x81,
	0x0e, 0xcd, 0xa2, 0xd8, 0x48, 0x94, 0x29, 0x20, 0xef, 0x31, 0xa9, 0x59, 0x1f, 0x8f, 0x90, 0x84,
	0x94, 0x37, 0x99, 0xd4, 0xbf, 0xb5, 0xa8, 0x5b, 0xb3, 0x7e, 0xad, 0x1b, 0x3b, 0xa3, 0x93, 0xd7,
	0x18, 0x0f, 0x74, 0xce, 0x1a, 0xde, 0x29, 0xcf, 0xf6, 0x51, 0x30, 0xa7, 0x37, 0x35, 0xeb, 0xb7,
	0x5a, 0x18, 0x96, 0x4d, 0x81, 0xe6, 0x02, 0x20, 0x56, 0x4c, 0x1e, 0xa5, 0x4e, 0x69, 0x41, 0xdd,
	0xb1, 0xb3, 0x15, 0x00, 0xfb, 0x41, 0x27, 0x3e, 0x76, 0x32, 0x90, 0xa9, 0x28, 0x4d, 0xee, 0x73,
	0x6d, 0xff, 0x5f, 0x29, 0x31, 0x4f, 0xe6, 0xe3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x18,
	0x22, 0x29, 0x67, 0x02, 0x00, 0x00,
}
