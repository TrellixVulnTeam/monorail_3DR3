// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/appengine/arquebus/app/backend/model/model.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TaskStatus represents the status of an Assigner task.
type TaskStatus int32

const (
	// TaskStatusScheduled means that the task has been scheduled, but
	// has not yet started.
	TaskStatus_Scheduled TaskStatus = 0
	// Running means that the task is running.
	TaskStatus_Running TaskStatus = 1
	// Succeeded means that the task completed successfully.
	TaskStatus_Succeeded TaskStatus = 2
	// Failed means that the task failed.
	TaskStatus_Failed TaskStatus = 3
	// Cancelled means that the task was cancelled before starting.
	TaskStatus_Cancelled TaskStatus = 4
	// Aborted means that the task started, but was aborted manually or
	// due to hard deadline.
	TaskStatus_Aborted TaskStatus = 5
)

var TaskStatus_name = map[int32]string{
	0: "Scheduled",
	1: "Running",
	2: "Succeeded",
	3: "Failed",
	4: "Cancelled",
	5: "Aborted",
}

var TaskStatus_value = map[string]int32{
	"Scheduled": 0,
	"Running":   1,
	"Succeeded": 2,
	"Failed":    3,
	"Cancelled": 4,
	"Aborted":   5,
}

func (x TaskStatus) String() string {
	return proto.EnumName(TaskStatus_name, int32(x))
}

func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_479d434fd7939889, []int{0}
}

func init() {
	proto.RegisterEnum("backend.model.TaskStatus", TaskStatus_name, TaskStatus_value)
}

func init() {
	proto.RegisterFile("infra/appengine/arquebus/app/backend/model/model.proto", fileDescriptor_479d434fd7939889)
}

var fileDescriptor_479d434fd7939889 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8d, 0x4d, 0xca, 0xc2, 0x30,
	0x10, 0x40, 0xbf, 0xbf, 0xb6, 0x7c, 0x91, 0x42, 0xc8, 0x31, 0x5c, 0x34, 0x0b, 0xc1, 0xbd, 0x0a,
	0x1e, 0xc0, 0xba, 0x72, 0x23, 0x93, 0xcc, 0x58, 0x43, 0xeb, 0xa4, 0xa6, 0xc9, 0xfd, 0x25, 0xd1,
	0xcd, 0xc0, 0xbc, 0x37, 0xc3, 0x13, 0x5b, 0xc7, 0xb7, 0x00, 0x1a, 0xe6, 0x99, 0x78, 0x70, 0x4c,
	0x1a, 0xc2, 0x33, 0x91, 0x49, 0x4b, 0x46, 0xda, 0x80, 0x1d, 0x89, 0x51, 0x3f, 0x3c, 0xd2, 0xf4,
	0x9e, 0xdd, 0x1c, 0x7c, 0xf4, 0xaa, 0xfd, 0xa8, 0xae, 0xc0, 0xf5, 0x55, 0x88, 0x33, 0x2c, 0x63,
	0x1f, 0x21, 0xa6, 0x45, 0xb5, 0xe2, 0xbf, 0xb7, 0x77, 0xc2, 0x34, 0x11, 0xca, 0x2f, 0xb5, 0x12,
	0xcd, 0x29, 0x31, 0x3b, 0x1e, 0xe4, 0x77, 0x71, 0xc9, 0x5a, 0x22, 0x24, 0x94, 0x3f, 0x4a, 0x88,
	0xfa, 0x08, 0x2e, 0xdf, 0xfd, 0x66, 0x75, 0x00, 0xb6, 0x34, 0xe5, 0xf5, 0x2f, 0xbf, 0xed, 0x8c,
	0x0f, 0x91, 0x50, 0x56, 0xfb, 0xe6, 0x52, 0x95, 0x92, 0xa9, 0x4b, 0x7f, 0xf3, 0x0a, 0x00, 0x00,
	0xff, 0xff, 0xac, 0x2a, 0x1b, 0xc8, 0xb9, 0x00, 0x00, 0x00,
}
