// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package dashboard;

import "google/protobuf/timestamp.proto";

// The ChromeOps statuses service definition.
service ChopsServiceStatus {
  rpc UpdateOpenIncidents (UpdateOpenIncidentsRequest) returns (UpdateOpenIncidentsResponse) {}
  rpc GetAllServicesData (GetAllServicesDataRequest) returns (GetAllServicesDataResponse){}
}

enum Severity {
  UNDEFINED = 0;
  RED = 1;
  YELLOW = 2;
}

message UpdateOpenIncidentsRequest {
  ChopsService chops_service = 1;
}

message UpdateOpenIncidentsResponse {
  repeated ChopsIncident open_incidents = 1;
}

message GetAllServicesDataRequest {
  // A unix timestamp to indicate the upper limit of the seven-day query range.
  // A value of 0 indicates interest in incidents that occurred in the last 7 days.
  int64 upto_time = 1;
}

message GetAllServicesDataResponse {
  repeated ChopsService services = 1;
  repeated ChopsService nonsla_services = 2;
}

message ChopsIncident {
  string id = 1;
  bool open = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  Severity severity = 5;
  string incident_link = 6;
}

message ChopsService {
  string name = 1;
  repeated ChopsIncident incidents = 2;
  string sla = 3;
}

// The ChromeOps Announcements service definition.
service ChopsAnnouncements {
  rpc CreateLiveAnnouncement (CreateLiveAnnouncementRequest) returns (CreateLiveAnnouncementResponse) {}
  rpc RetireAnnouncement (RetireAnnouncementRequest) returns (Announcement) {}
  rpc SearchAnnouncements (SearchAnnouncementsRequest) returns (SearchAnnouncementsResponse) {}
}

message CreateLiveAnnouncementRequest {
  string message_content = 1;
  repeated Platform platforms = 2;
}

message CreateLiveAnnouncementResponse {
  Announcement announcement = 1;
}

message RetireAnnouncementRequest {
  int64 announcement_id = 1;
}

message SearchAnnouncementsRequest {
  string platform_name = 1;
  bool retired = 2;
  // A limit <= 0 will be ignored.
  int32 limit = 3;
  // An offset < 0, will be ignored.
  int32 offset = 4;
}

message SearchAnnouncementsResponse {
  repeated Announcement announcements = 1;
}

// Platform represents a ChOps frontend service (eg. "monorail", "gerrit" for chromium) in
// which Announcement messages should be displayed.
message Platform {
  string name = 1;
  // Specific pages in which the Announcement should be shown.
  // If no url_paths are given, the Announcement should
  // be visible on every page of the service.
  repeated string url_paths = 2;
}

message Announcement {
  int64 id = 1;
  google.protobuf.Timestamp start_time = 2;
  string message_content = 3;
  string creator = 4;
  google.protobuf.Timestamp end_time = 5;
  // Announcements that are retired are no longer relevant to users
  // and should not be displayed in platforms.
  bool retired = 6;
  repeated Platform platforms = 7;
  // The user who retires the announcement.
  string closer = 8;
}
