// Copyright 2018 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

syntax = "proto3";

package crosskylabadmin.fleet;

option go_package = "fleet";

// BotSelector is used in various fleet RPCs to filter the Swarming bots that
// the RPC applies to.
//
// For example, it is used to select the bots to summarize by the Tracker RPCs,
// and to select the bots against which admin tasks are managed by the Tasker
// RPCs.
message BotSelector {
  // dut_id selects a bot by the dut_id dimension.
  string dut_id = 1;

  // dimensions select bots by Swarming dimensions.
  //
  // All fields in the dimension message must match for a bot to be selected.
  BotDimensions dimensions = 2;
}

// BotDimensions is a subset of Swarming bot dimensions.
message BotDimensions {
  repeated string pools = 1;
  string model = 2;
  string dut_name = 3;
}

// ServerRole is adapted from chrome.chromeos_infra.skylab.proto.inventory
// (Server.Role enum). It is filtered down to only server roles that are
// applicable to Skylab.
//
// Commented-out fields are those that exist in the inventory proto schema, but
// do no apply to this API.
enum ServerRole {
  ROLE_INVALID = 0;
  // ROLE_AFE = 1;
  ROLE_CRASH_SERVER = 2;
  // ROLE_DATABASE = 3;
  // ROLE_DATABASE_SLAVE = 4;
  ROLE_DEVSERVER = 5;
  // ROLE_DRONE = 6;
  // ROLE_GOLO_PROXY = 7;
  // ROLE_HOST_SCHEDULER = 8;
  // ROLE_SCHEDULER = 9;
  // ROLE_SENTINEL = 10;
  // ROLE_SHARD = 11;
  ROLE_SUITE_SCHEDULER = 12;
  ROLE_SKYLAB_DRONE = 13;
  ROLE_SKYLAB_SUITE_PROXY = 14;
  ROLE_RPMSERVER = 15;
}

// Server is adapted from chrome.chromeos_infra.skylab.proto.inventory
// (Server message type). It is filtered down to only aspects applicable
// to Skylab, and of interest to clients of the crosskylabadmin APIs.
message Server {
  string hostname = 1;

  repeated ServerRole roles = 2;

  repeated string dut_uids = 3;
}
