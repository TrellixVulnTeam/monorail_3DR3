// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/appengine/rotang/proto/rotangapi/rotangapi.proto

package rotangapi

import (
	prpc "go.chromium.org/luci/grpc/prpc"

	context "context"

	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	duration "github.com/golang/protobuf/ptypes/duration"

	timestamp "github.com/golang/protobuf/ptypes/timestamp"

	grpc "google.golang.org/grpc"

	codes "google.golang.org/grpc/codes"

	status "google.golang.org/grpc/status"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// OncallRequest contains the name of the rotation of interest.
type OncallRequest struct {
	// name is a required field containing the name of the rotation
	// of interest.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OncallRequest) Reset()         { *m = OncallRequest{} }
func (m *OncallRequest) String() string { return proto.CompactTextString(m) }
func (*OncallRequest) ProtoMessage()    {}
func (*OncallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{0}
}

func (m *OncallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OncallRequest.Unmarshal(m, b)
}
func (m *OncallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OncallRequest.Marshal(b, m, deterministic)
}
func (m *OncallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OncallRequest.Merge(m, src)
}
func (m *OncallRequest) XXX_Size() int {
	return xxx_messageInfo_OncallRequest.Size(m)
}
func (m *OncallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OncallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OncallRequest proto.InternalMessageInfo

func (m *OncallRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// OncallResponse contains the current on-callers for a rotation.
type OncallResponse struct {
	// shift contains the current shift entry for the specified rotation.
	Shift *ShiftEntry `protobuf:"bytes,1,opt,name=shift,proto3" json:"shift,omitempty"`
	// tz_consider indicates if the rotation generator considers the TimeZone
	// of members when scheduling memmbers.
	// A rotation using a Generator considering timezones will generatate a shift
	// with one on-caller per TZ of their members.
	// Eg. if a rotation have members:
	//
	// Australia/Sydney:
	//  syd1@oncall.com
	//  syd2@oncall.com
	// EST
	//  est1@oncall.com
	//  est2@oncall.com
	// US/Pacific
	//  mtv1@oncall.com
	//  mtv2@oncall.com
	// UTC
	//  utc1@oncall.com
	//  utc2@oncall.com
	//
	// A rotation using a tz_consider generator would generate a shift with one
	// member from each TZ.
	//   syd1@oncall.com , est1@oncall.com , mtv1@oncall.com and utc1@oncall.com
	TzConsider           bool     `protobuf:"varint,2,opt,name=tz_consider,json=tzConsider,proto3" json:"tz_consider,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OncallResponse) Reset()         { *m = OncallResponse{} }
func (m *OncallResponse) String() string { return proto.CompactTextString(m) }
func (*OncallResponse) ProtoMessage()    {}
func (*OncallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{1}
}

func (m *OncallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OncallResponse.Unmarshal(m, b)
}
func (m *OncallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OncallResponse.Marshal(b, m, deterministic)
}
func (m *OncallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OncallResponse.Merge(m, src)
}
func (m *OncallResponse) XXX_Size() int {
	return xxx_messageInfo_OncallResponse.Size(m)
}
func (m *OncallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OncallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OncallResponse proto.InternalMessageInfo

func (m *OncallResponse) GetShift() *ShiftEntry {
	if m != nil {
		return m.Shift
	}
	return nil
}

func (m *OncallResponse) GetTzConsider() bool {
	if m != nil {
		return m.TzConsider
	}
	return false
}

// ListRotationsRequest is used to get a list of all configured rotations.
type ListRotationsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRotationsRequest) Reset()         { *m = ListRotationsRequest{} }
func (m *ListRotationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRotationsRequest) ProtoMessage()    {}
func (*ListRotationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{2}
}

func (m *ListRotationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRotationsRequest.Unmarshal(m, b)
}
func (m *ListRotationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRotationsRequest.Marshal(b, m, deterministic)
}
func (m *ListRotationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRotationsRequest.Merge(m, src)
}
func (m *ListRotationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRotationsRequest.Size(m)
}
func (m *ListRotationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRotationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRotationsRequest proto.InternalMessageInfo

// ListRotationsResponse contains the configured rotations.
type ListRotationsResponse struct {
	Rotations            []*Rotation `protobuf:"bytes,1,rep,name=rotations,proto3" json:"rotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListRotationsResponse) Reset()         { *m = ListRotationsResponse{} }
func (m *ListRotationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRotationsResponse) ProtoMessage()    {}
func (*ListRotationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{3}
}

func (m *ListRotationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRotationsResponse.Unmarshal(m, b)
}
func (m *ListRotationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRotationsResponse.Marshal(b, m, deterministic)
}
func (m *ListRotationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRotationsResponse.Merge(m, src)
}
func (m *ListRotationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRotationsResponse.Size(m)
}
func (m *ListRotationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRotationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRotationsResponse proto.InternalMessageInfo

func (m *ListRotationsResponse) GetRotations() []*Rotation {
	if m != nil {
		return m.Rotations
	}
	return nil
}

// ShiftsRequest defines shifts of interest to fetch.
type ShiftsRequest struct {
	// name is a required field containing the rotation name of interest.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// start contains the beginning of the time range of interest.
	// Leaving this field empty will fetch shifts from the beginning of time.
	Start *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// end contains the end of the time range of interest.
	// Leaving this field empty will fetch shift to the end of time.
	End                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ShiftsRequest) Reset()         { *m = ShiftsRequest{} }
func (m *ShiftsRequest) String() string { return proto.CompactTextString(m) }
func (*ShiftsRequest) ProtoMessage()    {}
func (*ShiftsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{4}
}

func (m *ShiftsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiftsRequest.Unmarshal(m, b)
}
func (m *ShiftsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiftsRequest.Marshal(b, m, deterministic)
}
func (m *ShiftsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiftsRequest.Merge(m, src)
}
func (m *ShiftsRequest) XXX_Size() int {
	return xxx_messageInfo_ShiftsRequest.Size(m)
}
func (m *ShiftsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiftsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShiftsRequest proto.InternalMessageInfo

func (m *ShiftsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShiftsRequest) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *ShiftsRequest) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

// ShiftsResponse contains the shifts requested by ShiftsRequest.
type ShiftsResponse struct {
	Shifts               []*ShiftEntry `protobuf:"bytes,1,rep,name=shifts,proto3" json:"shifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ShiftsResponse) Reset()         { *m = ShiftsResponse{} }
func (m *ShiftsResponse) String() string { return proto.CompactTextString(m) }
func (*ShiftsResponse) ProtoMessage()    {}
func (*ShiftsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{5}
}

func (m *ShiftsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiftsResponse.Unmarshal(m, b)
}
func (m *ShiftsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiftsResponse.Marshal(b, m, deterministic)
}
func (m *ShiftsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiftsResponse.Merge(m, src)
}
func (m *ShiftsResponse) XXX_Size() int {
	return xxx_messageInfo_ShiftsResponse.Size(m)
}
func (m *ShiftsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiftsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShiftsResponse proto.InternalMessageInfo

func (m *ShiftsResponse) GetShifts() []*ShiftEntry {
	if m != nil {
		return m.Shifts
	}
	return nil
}

// MigrationsInfoRequest identifies the rotation information to fetch
// along with a timerange for shifts of interest.
type MigrationInfoRequest struct {
	// name is a required field containing the rotation name of interest.
	// Requester needs to be an owner of the requested rotation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// start contains the beginning of the time range of interest.
	// Leaving this field empty will fetch shifts from the beginning
	// of time.
	Start *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// end contains the end of the time range of interest.
	// Leaving this field empty will fetch shifts to the end of time.
	End                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MigrationInfoRequest) Reset()         { *m = MigrationInfoRequest{} }
func (m *MigrationInfoRequest) String() string { return proto.CompactTextString(m) }
func (*MigrationInfoRequest) ProtoMessage()    {}
func (*MigrationInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{6}
}

func (m *MigrationInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationInfoRequest.Unmarshal(m, b)
}
func (m *MigrationInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationInfoRequest.Marshal(b, m, deterministic)
}
func (m *MigrationInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationInfoRequest.Merge(m, src)
}
func (m *MigrationInfoRequest) XXX_Size() int {
	return xxx_messageInfo_MigrationInfoRequest.Size(m)
}
func (m *MigrationInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationInfoRequest proto.InternalMessageInfo

func (m *MigrationInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MigrationInfoRequest) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *MigrationInfoRequest) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

// MigrationInfoResponse contain information needed for migrating a
// RotaNG rotation to another scheduler.
type MigrationInfoResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The calendar currently configured for this rotation.
	Calendar string `protobuf:"bytes,2,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// owners contain the email addresses of the rotation owners.
	Owners []string `protobuf:"bytes,3,rep,name=owners,proto3" json:"owners,omitempty"`
	// tz_consider indicates that this rotation is using a genarator
	// that is TZ aware.
	TzConsider bool `protobuf:"varint,4,opt,name=tz_consider,json=tzConsider,proto3" json:"tz_consider,omitempty"`
	// members lists all members of the rotation.
	Members []*TZGroup `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	// shifts lists shifts in the requested range.
	Shifts               []*ShiftEntry `protobuf:"bytes,6,rep,name=shifts,proto3" json:"shifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MigrationInfoResponse) Reset()         { *m = MigrationInfoResponse{} }
func (m *MigrationInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MigrationInfoResponse) ProtoMessage()    {}
func (*MigrationInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{7}
}

func (m *MigrationInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MigrationInfoResponse.Unmarshal(m, b)
}
func (m *MigrationInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MigrationInfoResponse.Marshal(b, m, deterministic)
}
func (m *MigrationInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MigrationInfoResponse.Merge(m, src)
}
func (m *MigrationInfoResponse) XXX_Size() int {
	return xxx_messageInfo_MigrationInfoResponse.Size(m)
}
func (m *MigrationInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MigrationInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MigrationInfoResponse proto.InternalMessageInfo

func (m *MigrationInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MigrationInfoResponse) GetCalendar() string {
	if m != nil {
		return m.Calendar
	}
	return ""
}

func (m *MigrationInfoResponse) GetOwners() []string {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *MigrationInfoResponse) GetTzConsider() bool {
	if m != nil {
		return m.TzConsider
	}
	return false
}

func (m *MigrationInfoResponse) GetMembers() []*TZGroup {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *MigrationInfoResponse) GetShifts() []*ShiftEntry {
	if m != nil {
		return m.Shifts
	}
	return nil
}

// TZGroup represents a group of members in a particular business group.
type TZGroup struct {
	// business_group identifies the business group the members belong to.
	// If the rotation don't use a timezone aware generator there will
	// be a single group named "default".
	BusinessGroup        string      `protobuf:"bytes,1,opt,name=business_group,json=businessGroup,proto3" json:"business_group,omitempty"`
	Members              []*OnCaller `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TZGroup) Reset()         { *m = TZGroup{} }
func (m *TZGroup) String() string { return proto.CompactTextString(m) }
func (*TZGroup) ProtoMessage()    {}
func (*TZGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{8}
}

func (m *TZGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TZGroup.Unmarshal(m, b)
}
func (m *TZGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TZGroup.Marshal(b, m, deterministic)
}
func (m *TZGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TZGroup.Merge(m, src)
}
func (m *TZGroup) XXX_Size() int {
	return xxx_messageInfo_TZGroup.Size(m)
}
func (m *TZGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_TZGroup.DiscardUnknown(m)
}

var xxx_messageInfo_TZGroup proto.InternalMessageInfo

func (m *TZGroup) GetBusinessGroup() string {
	if m != nil {
		return m.BusinessGroup
	}
	return ""
}

func (m *TZGroup) GetMembers() []*OnCaller {
	if m != nil {
		return m.Members
	}
	return nil
}

// Shift defines a shift configuration.
// RotaNG supports rotations with multiple shifts.
// Eg. follow-the-sun configurations:
// Shift:
//   SYD: 8hours
//   MTV: 8hours
//   EY:  8hours.
type ShiftConfiguration struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Duration             *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Entries              []*ShiftEntry      `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ShiftConfiguration) Reset()         { *m = ShiftConfiguration{} }
func (m *ShiftConfiguration) String() string { return proto.CompactTextString(m) }
func (*ShiftConfiguration) ProtoMessage()    {}
func (*ShiftConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{9}
}

func (m *ShiftConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiftConfiguration.Unmarshal(m, b)
}
func (m *ShiftConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiftConfiguration.Marshal(b, m, deterministic)
}
func (m *ShiftConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiftConfiguration.Merge(m, src)
}
func (m *ShiftConfiguration) XXX_Size() int {
	return xxx_messageInfo_ShiftConfiguration.Size(m)
}
func (m *ShiftConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiftConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ShiftConfiguration proto.InternalMessageInfo

func (m *ShiftConfiguration) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShiftConfiguration) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *ShiftConfiguration) GetEntries() []*ShiftEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// ShiftEntry defines a single shift.
type ShiftEntry struct {
	// name is the Shift configuration this entry belongs to.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// oncallers is the email addresses of the members on-call
	// for this shift.
	Oncallers []*OnCaller `protobuf:"bytes,2,rep,name=oncallers,proto3" json:"oncallers,omitempty"`
	// start is the start of this shift.
	Start *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	// end is the end of the shift.
	End *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// comment contains an optional comment about this shift.
	// Eg. Information about a shift swap.
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	// event_id contains the Google Calendar Event ID of this shift.
	// Only enabled rotations will have event_id's.
	EventId              string   `protobuf:"bytes,6,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShiftEntry) Reset()         { *m = ShiftEntry{} }
func (m *ShiftEntry) String() string { return proto.CompactTextString(m) }
func (*ShiftEntry) ProtoMessage()    {}
func (*ShiftEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{10}
}

func (m *ShiftEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShiftEntry.Unmarshal(m, b)
}
func (m *ShiftEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShiftEntry.Marshal(b, m, deterministic)
}
func (m *ShiftEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShiftEntry.Merge(m, src)
}
func (m *ShiftEntry) XXX_Size() int {
	return xxx_messageInfo_ShiftEntry.Size(m)
}
func (m *ShiftEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ShiftEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ShiftEntry proto.InternalMessageInfo

func (m *ShiftEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShiftEntry) GetOncallers() []*OnCaller {
	if m != nil {
		return m.Oncallers
	}
	return nil
}

func (m *ShiftEntry) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *ShiftEntry) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *ShiftEntry) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ShiftEntry) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

// OnCaller contains one member on-call for a shift.
type OnCaller struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tz                   string   `protobuf:"bytes,3,opt,name=tz,proto3" json:"tz,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnCaller) Reset()         { *m = OnCaller{} }
func (m *OnCaller) String() string { return proto.CompactTextString(m) }
func (*OnCaller) ProtoMessage()    {}
func (*OnCaller) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{11}
}

func (m *OnCaller) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnCaller.Unmarshal(m, b)
}
func (m *OnCaller) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnCaller.Marshal(b, m, deterministic)
}
func (m *OnCaller) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnCaller.Merge(m, src)
}
func (m *OnCaller) XXX_Size() int {
	return xxx_messageInfo_OnCaller.Size(m)
}
func (m *OnCaller) XXX_DiscardUnknown() {
	xxx_messageInfo_OnCaller.DiscardUnknown(m)
}

var xxx_messageInfo_OnCaller proto.InternalMessageInfo

func (m *OnCaller) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *OnCaller) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OnCaller) GetTz() string {
	if m != nil {
		return m.Tz
	}
	return ""
}

// Rotation contains the Rotation information returned by the List
// RPC call.
type Rotation struct {
	// name contain the name of the rotation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// enabled signifies if the rotation is enabled.
	// A rotation needs to be enabled to create/modify Google calendar
	// events and sending e-mails.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// external signifies if this rotation is external.
	// An external rotation fetches shifts from a shared calendar.
	// Commonly used to get G3 oncall information in to RotaNG.
	External             bool     `protobuf:"varint,3,opt,name=external,proto3" json:"external,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rotation) Reset()         { *m = Rotation{} }
func (m *Rotation) String() string { return proto.CompactTextString(m) }
func (*Rotation) ProtoMessage()    {}
func (*Rotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{12}
}

func (m *Rotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rotation.Unmarshal(m, b)
}
func (m *Rotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rotation.Marshal(b, m, deterministic)
}
func (m *Rotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rotation.Merge(m, src)
}
func (m *Rotation) XXX_Size() int {
	return xxx_messageInfo_Rotation.Size(m)
}
func (m *Rotation) XXX_DiscardUnknown() {
	xxx_messageInfo_Rotation.DiscardUnknown(m)
}

var xxx_messageInfo_Rotation proto.InternalMessageInfo

func (m *Rotation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Rotation) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Rotation) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

// CreateExternal request contain the information needed to create an external
// rotation.
type CreateExternalRequest struct {
	// name is a required field naming the new rotation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// calendar is a required field specifying the Google calendar ID
	// of the rotation calendar.
	// Service account `rota-ng@appspot.gserviceaccount.com` need to have permissions
	// to read events from the calendar.
	Calendar string `protobuf:"bytes,2,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// owners_email is a required field containing a list of owners e-mail addresses.
	OwnersEmails []string `protobuf:"bytes,3,rep,name=owners_emails,json=ownersEmails,proto3" json:"owners_emails,omitempty"`
	// description is an optional field describing the rotation.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// match is a required field matching the Summary of the event.
	// Eg. from the CCI-Trooper rotation.
	//
	// With summary of an event looks something like this.
	//
	//  `CCI-Trooper: primary, secondary`
	//
	// The match filed should be set to `CCI-Trooper:`
	Match                string   `protobuf:"bytes,5,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateExternalRequest) Reset()         { *m = CreateExternalRequest{} }
func (m *CreateExternalRequest) String() string { return proto.CompactTextString(m) }
func (*CreateExternalRequest) ProtoMessage()    {}
func (*CreateExternalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{13}
}

func (m *CreateExternalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExternalRequest.Unmarshal(m, b)
}
func (m *CreateExternalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExternalRequest.Marshal(b, m, deterministic)
}
func (m *CreateExternalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExternalRequest.Merge(m, src)
}
func (m *CreateExternalRequest) XXX_Size() int {
	return xxx_messageInfo_CreateExternalRequest.Size(m)
}
func (m *CreateExternalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExternalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExternalRequest proto.InternalMessageInfo

func (m *CreateExternalRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateExternalRequest) GetCalendar() string {
	if m != nil {
		return m.Calendar
	}
	return ""
}

func (m *CreateExternalRequest) GetOwnersEmails() []string {
	if m != nil {
		return m.OwnersEmails
	}
	return nil
}

func (m *CreateExternalRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateExternalRequest) GetMatch() string {
	if m != nil {
		return m.Match
	}
	return ""
}

// CreateExternalResponse is the result of a CreateRequest.
type CreateExternalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateExternalResponse) Reset()         { *m = CreateExternalResponse{} }
func (m *CreateExternalResponse) String() string { return proto.CompactTextString(m) }
func (*CreateExternalResponse) ProtoMessage()    {}
func (*CreateExternalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{14}
}

func (m *CreateExternalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExternalResponse.Unmarshal(m, b)
}
func (m *CreateExternalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExternalResponse.Marshal(b, m, deterministic)
}
func (m *CreateExternalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExternalResponse.Merge(m, src)
}
func (m *CreateExternalResponse) XXX_Size() int {
	return xxx_messageInfo_CreateExternalResponse.Size(m)
}
func (m *CreateExternalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExternalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExternalResponse proto.InternalMessageInfo

type DeleteExternalRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteExternalRequest) Reset()         { *m = DeleteExternalRequest{} }
func (m *DeleteExternalRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteExternalRequest) ProtoMessage()    {}
func (*DeleteExternalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{15}
}

func (m *DeleteExternalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExternalRequest.Unmarshal(m, b)
}
func (m *DeleteExternalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExternalRequest.Marshal(b, m, deterministic)
}
func (m *DeleteExternalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExternalRequest.Merge(m, src)
}
func (m *DeleteExternalRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteExternalRequest.Size(m)
}
func (m *DeleteExternalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExternalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExternalRequest proto.InternalMessageInfo

func (m *DeleteExternalRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteExternalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteExternalResponse) Reset()         { *m = DeleteExternalResponse{} }
func (m *DeleteExternalResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteExternalResponse) ProtoMessage()    {}
func (*DeleteExternalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{16}
}

func (m *DeleteExternalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExternalResponse.Unmarshal(m, b)
}
func (m *DeleteExternalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExternalResponse.Marshal(b, m, deterministic)
}
func (m *DeleteExternalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExternalResponse.Merge(m, src)
}
func (m *DeleteExternalResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteExternalResponse.Size(m)
}
func (m *DeleteExternalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExternalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExternalResponse proto.InternalMessageInfo

type RotationMembersRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RotationMembersRequest) Reset()         { *m = RotationMembersRequest{} }
func (m *RotationMembersRequest) String() string { return proto.CompactTextString(m) }
func (*RotationMembersRequest) ProtoMessage()    {}
func (*RotationMembersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{17}
}

func (m *RotationMembersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotationMembersRequest.Unmarshal(m, b)
}
func (m *RotationMembersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotationMembersRequest.Marshal(b, m, deterministic)
}
func (m *RotationMembersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotationMembersRequest.Merge(m, src)
}
func (m *RotationMembersRequest) XXX_Size() int {
	return xxx_messageInfo_RotationMembersRequest.Size(m)
}
func (m *RotationMembersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RotationMembersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RotationMembersRequest proto.InternalMessageInfo

func (m *RotationMembersRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RotationMembersResponse struct {
	Rotation             string        `protobuf:"bytes,1,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Members              []*MemberInfo `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RotationMembersResponse) Reset()         { *m = RotationMembersResponse{} }
func (m *RotationMembersResponse) String() string { return proto.CompactTextString(m) }
func (*RotationMembersResponse) ProtoMessage()    {}
func (*RotationMembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{18}
}

func (m *RotationMembersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotationMembersResponse.Unmarshal(m, b)
}
func (m *RotationMembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotationMembersResponse.Marshal(b, m, deterministic)
}
func (m *RotationMembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotationMembersResponse.Merge(m, src)
}
func (m *RotationMembersResponse) XXX_Size() int {
	return xxx_messageInfo_RotationMembersResponse.Size(m)
}
func (m *RotationMembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RotationMembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RotationMembersResponse proto.InternalMessageInfo

func (m *RotationMembersResponse) GetRotation() string {
	if m != nil {
		return m.Rotation
	}
	return ""
}

func (m *RotationMembersResponse) GetMembers() []*MemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

type MemberInfo struct {
	Member               *OnCaller     `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	OncallShifts         []*ShiftEntry `protobuf:"bytes,3,rep,name=oncall_shifts,json=oncallShifts,proto3" json:"oncall_shifts,omitempty"`
	Ooo                  []*OOO        `protobuf:"bytes,4,rep,name=ooo,proto3" json:"ooo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MemberInfo) Reset()         { *m = MemberInfo{} }
func (m *MemberInfo) String() string { return proto.CompactTextString(m) }
func (*MemberInfo) ProtoMessage()    {}
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{19}
}

func (m *MemberInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberInfo.Unmarshal(m, b)
}
func (m *MemberInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberInfo.Marshal(b, m, deterministic)
}
func (m *MemberInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberInfo.Merge(m, src)
}
func (m *MemberInfo) XXX_Size() int {
	return xxx_messageInfo_MemberInfo.Size(m)
}
func (m *MemberInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MemberInfo proto.InternalMessageInfo

func (m *MemberInfo) GetMember() *OnCaller {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *MemberInfo) GetOncallShifts() []*ShiftEntry {
	if m != nil {
		return m.OncallShifts
	}
	return nil
}

func (m *MemberInfo) GetOoo() []*OOO {
	if m != nil {
		return m.Ooo
	}
	return nil
}

type OOO struct {
	Start                *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Comment              string               `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OOO) Reset()         { *m = OOO{} }
func (m *OOO) String() string { return proto.CompactTextString(m) }
func (*OOO) ProtoMessage()    {}
func (*OOO) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{20}
}

func (m *OOO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OOO.Unmarshal(m, b)
}
func (m *OOO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OOO.Marshal(b, m, deterministic)
}
func (m *OOO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OOO.Merge(m, src)
}
func (m *OOO) XXX_Size() int {
	return xxx_messageInfo_OOO.Size(m)
}
func (m *OOO) XXX_DiscardUnknown() {
	xxx_messageInfo_OOO.DiscardUnknown(m)
}

var xxx_messageInfo_OOO proto.InternalMessageInfo

func (m *OOO) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *OOO) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *OOO) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type MakeAllMembersOwnersRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeAllMembersOwnersRequest) Reset()         { *m = MakeAllMembersOwnersRequest{} }
func (m *MakeAllMembersOwnersRequest) String() string { return proto.CompactTextString(m) }
func (*MakeAllMembersOwnersRequest) ProtoMessage()    {}
func (*MakeAllMembersOwnersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{21}
}

func (m *MakeAllMembersOwnersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeAllMembersOwnersRequest.Unmarshal(m, b)
}
func (m *MakeAllMembersOwnersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeAllMembersOwnersRequest.Marshal(b, m, deterministic)
}
func (m *MakeAllMembersOwnersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeAllMembersOwnersRequest.Merge(m, src)
}
func (m *MakeAllMembersOwnersRequest) XXX_Size() int {
	return xxx_messageInfo_MakeAllMembersOwnersRequest.Size(m)
}
func (m *MakeAllMembersOwnersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeAllMembersOwnersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakeAllMembersOwnersRequest proto.InternalMessageInfo

func (m *MakeAllMembersOwnersRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MakeAllMembersOwnersResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakeAllMembersOwnersResponse) Reset()         { *m = MakeAllMembersOwnersResponse{} }
func (m *MakeAllMembersOwnersResponse) String() string { return proto.CompactTextString(m) }
func (*MakeAllMembersOwnersResponse) ProtoMessage()    {}
func (*MakeAllMembersOwnersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f93f086ae77577, []int{22}
}

func (m *MakeAllMembersOwnersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MakeAllMembersOwnersResponse.Unmarshal(m, b)
}
func (m *MakeAllMembersOwnersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MakeAllMembersOwnersResponse.Marshal(b, m, deterministic)
}
func (m *MakeAllMembersOwnersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakeAllMembersOwnersResponse.Merge(m, src)
}
func (m *MakeAllMembersOwnersResponse) XXX_Size() int {
	return xxx_messageInfo_MakeAllMembersOwnersResponse.Size(m)
}
func (m *MakeAllMembersOwnersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakeAllMembersOwnersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakeAllMembersOwnersResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*OncallRequest)(nil), "rotangapi.OncallRequest")
	proto.RegisterType((*OncallResponse)(nil), "rotangapi.OncallResponse")
	proto.RegisterType((*ListRotationsRequest)(nil), "rotangapi.ListRotationsRequest")
	proto.RegisterType((*ListRotationsResponse)(nil), "rotangapi.ListRotationsResponse")
	proto.RegisterType((*ShiftsRequest)(nil), "rotangapi.ShiftsRequest")
	proto.RegisterType((*ShiftsResponse)(nil), "rotangapi.ShiftsResponse")
	proto.RegisterType((*MigrationInfoRequest)(nil), "rotangapi.MigrationInfoRequest")
	proto.RegisterType((*MigrationInfoResponse)(nil), "rotangapi.MigrationInfoResponse")
	proto.RegisterType((*TZGroup)(nil), "rotangapi.TZGroup")
	proto.RegisterType((*ShiftConfiguration)(nil), "rotangapi.ShiftConfiguration")
	proto.RegisterType((*ShiftEntry)(nil), "rotangapi.ShiftEntry")
	proto.RegisterType((*OnCaller)(nil), "rotangapi.OnCaller")
	proto.RegisterType((*Rotation)(nil), "rotangapi.Rotation")
	proto.RegisterType((*CreateExternalRequest)(nil), "rotangapi.CreateExternalRequest")
	proto.RegisterType((*CreateExternalResponse)(nil), "rotangapi.CreateExternalResponse")
	proto.RegisterType((*DeleteExternalRequest)(nil), "rotangapi.DeleteExternalRequest")
	proto.RegisterType((*DeleteExternalResponse)(nil), "rotangapi.DeleteExternalResponse")
	proto.RegisterType((*RotationMembersRequest)(nil), "rotangapi.RotationMembersRequest")
	proto.RegisterType((*RotationMembersResponse)(nil), "rotangapi.RotationMembersResponse")
	proto.RegisterType((*MemberInfo)(nil), "rotangapi.MemberInfo")
	proto.RegisterType((*OOO)(nil), "rotangapi.OOO")
	proto.RegisterType((*MakeAllMembersOwnersRequest)(nil), "rotangapi.MakeAllMembersOwnersRequest")
	proto.RegisterType((*MakeAllMembersOwnersResponse)(nil), "rotangapi.MakeAllMembersOwnersResponse")
}

func init() {
	proto.RegisterFile("infra/appengine/rotang/proto/rotangapi/rotangapi.proto", fileDescriptor_67f93f086ae77577)
}

var fileDescriptor_67f93f086ae77577 = []byte{
	// 995 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0xce, 0xf8, 0x2f, 0x76, 0x79, 0x6d, 0xa4, 0x26, 0x0e, 0x93, 0x01, 0x6d, 0xbc, 0xbd, 0x02,
	0x22, 0x25, 0x6b, 0x13, 0x23, 0x38, 0x70, 0x89, 0x56, 0x49, 0x84, 0x16, 0x11, 0x59, 0x1a, 0x22,
	0xad, 0xb4, 0x07, 0xac, 0xb6, 0xdd, 0x76, 0x46, 0xcc, 0x74, 0x9b, 0x99, 0x36, 0x3f, 0xb9, 0x70,
	0xe0, 0xc6, 0x89, 0x1b, 0x2f, 0xc0, 0x53, 0x70, 0xe3, 0x1d, 0xb8, 0x72, 0xe7, 0x31, 0xd0, 0xf4,
	0xcf, 0xfc, 0x65, 0xec, 0x24, 0xa7, 0xbd, 0x4d, 0x55, 0x7f, 0x5d, 0xf3, 0x55, 0x75, 0x7d, 0xd5,
	0x0d, 0x9f, 0x7b, 0x6c, 0x11, 0x92, 0x21, 0x59, 0xad, 0x28, 0x5b, 0x7a, 0x8c, 0x0e, 0x43, 0x2e,
	0x08, 0x5b, 0x0e, 0x57, 0x21, 0x17, 0x5c, 0x1b, 0x64, 0xe5, 0xa5, 0x5f, 0x03, 0xb9, 0x82, 0x5a,
	0x89, 0xc3, 0x39, 0x5c, 0x72, 0xbe, 0xf4, 0xa9, 0xda, 0x32, 0x5d, 0x2f, 0x86, 0xc2, 0x0b, 0x68,
	0x24, 0x48, 0xb0, 0x52, 0x58, 0xe7, 0x69, 0x11, 0x30, 0x5f, 0x87, 0x44, 0x78, 0x9c, 0xa9, 0x75,
	0xfc, 0x1c, 0x3a, 0x63, 0x36, 0x23, 0xbe, 0xef, 0xd2, 0xef, 0xd7, 0x34, 0x12, 0x08, 0x41, 0x8d,
	0x91, 0x80, 0xda, 0x56, 0xdf, 0x3a, 0x6a, 0xb9, 0xf2, 0x1b, 0x7f, 0x0b, 0x5d, 0x03, 0x8a, 0x56,
	0x9c, 0x45, 0x14, 0x1d, 0x43, 0x3d, 0xba, 0xf1, 0x16, 0x42, 0xc2, 0xda, 0xa3, 0xde, 0x20, 0xe5,
	0xf8, 0x4d, 0xec, 0xbf, 0x64, 0x22, 0xfc, 0xd9, 0x55, 0x18, 0x74, 0x08, 0x6d, 0x71, 0x3b, 0x99,
	0x71, 0x16, 0x79, 0x73, 0x1a, 0xda, 0x95, 0xbe, 0x75, 0xd4, 0x74, 0x41, 0xdc, 0x9e, 0x6b, 0x0f,
	0xde, 0x87, 0xbd, 0xaf, 0xbd, 0x48, 0xb8, 0x5c, 0x48, 0x6a, 0x91, 0xe6, 0x82, 0xbf, 0x82, 0x5e,
	0xc1, 0xaf, 0x7f, 0x7f, 0x0a, 0xb2, 0x06, 0xd2, 0x69, 0x5b, 0xfd, 0xea, 0x51, 0x7b, 0xf4, 0x6e,
	0x86, 0x82, 0xd9, 0xe0, 0xa6, 0x28, 0xfc, 0xab, 0x05, 0x1d, 0x49, 0x2d, 0xda, 0x92, 0x29, 0xfa,
	0x04, 0xea, 0x91, 0x20, 0xa1, 0x90, 0x24, 0xdb, 0x23, 0x67, 0xa0, 0xca, 0x37, 0x30, 0xe5, 0x1b,
	0x5c, 0x9b, 0xfa, 0xba, 0x0a, 0x88, 0x4e, 0xa0, 0x4a, 0xd9, 0xdc, 0xae, 0xde, 0x8b, 0x8f, 0x61,
	0xf8, 0x0c, 0xba, 0x86, 0x84, 0x4e, 0xe5, 0x05, 0x34, 0x64, 0x95, 0x4c, 0x1e, 0x1b, 0x4a, 0xa9,
	0x41, 0xf8, 0x37, 0x0b, 0xf6, 0xae, 0xbc, 0xa5, 0x3a, 0xc3, 0x57, 0x6c, 0xc1, 0xdf, 0x66, 0x36,
	0xff, 0x5a, 0xd0, 0x2b, 0x90, 0xd1, 0x59, 0x95, 0xb1, 0x71, 0xa0, 0x39, 0x23, 0x3e, 0x65, 0x73,
	0xa2, 0x7a, 0xa0, 0xe5, 0x26, 0x36, 0xda, 0x87, 0x06, 0xff, 0x91, 0xd1, 0x30, 0xb2, 0xab, 0xfd,
	0xea, 0x51, 0xcb, 0xd5, 0x56, 0xb1, 0x75, 0x6a, 0xc5, 0xd6, 0x41, 0x27, 0xb0, 0x1b, 0xd0, 0x60,
	0x1a, 0xef, 0xac, 0xcb, 0xfa, 0xa1, 0x4c, 0xfd, 0xae, 0xdf, 0x7c, 0x19, 0xf2, 0xf5, 0xca, 0x35,
	0x90, 0x4c, 0xb1, 0x1b, 0x0f, 0x29, 0xf6, 0x04, 0x76, 0x75, 0x08, 0xf4, 0x21, 0x74, 0xa7, 0xeb,
	0xc8, 0x63, 0x34, 0x8a, 0x26, 0xcb, 0xd8, 0xa3, 0x53, 0xeb, 0x18, 0xaf, 0x82, 0xbd, 0x48, 0xe9,
	0x54, 0xee, 0xb4, 0xe5, 0x98, 0x9d, 0x13, 0xdf, 0xa7, 0x61, 0xc2, 0x07, 0xff, 0x6e, 0x01, 0x92,
	0xff, 0x3d, 0xe7, 0x6c, 0xe1, 0x2d, 0xb5, 0x34, 0x4b, 0xab, 0xf7, 0x19, 0x34, 0x8d, 0x74, 0xf5,
	0x71, 0x1e, 0xdc, 0x39, 0x9e, 0x0b, 0x0d, 0x70, 0x13, 0x28, 0x1a, 0xc2, 0x2e, 0x65, 0x22, 0xf4,
	0xa8, 0xaa, 0xec, 0xc6, 0x94, 0x0d, 0x0a, 0xff, 0x67, 0x01, 0xa4, 0xfe, 0x52, 0x2a, 0xa7, 0xd0,
	0xe2, 0x72, 0x1c, 0xdc, 0x93, 0x66, 0x8a, 0x4a, 0x3b, 0xb1, 0xfa, 0xc8, 0x4e, 0xac, 0x3d, 0xa8,
	0x13, 0x91, 0x0d, 0xbb, 0x33, 0x1e, 0x04, 0x94, 0x09, 0xbb, 0x2e, 0x99, 0x1a, 0x13, 0x1d, 0x40,
	0x93, 0xfe, 0x40, 0x99, 0x98, 0x78, 0x73, 0xbb, 0xa1, 0x96, 0xa4, 0xfd, 0x6a, 0x8e, 0x2f, 0xa0,
	0x69, 0xb8, 0xa2, 0x3d, 0xa8, 0xd3, 0x80, 0x78, 0xbe, 0x4e, 0x54, 0x19, 0x49, 0xf6, 0x95, 0x4c,
	0xf6, 0x5d, 0xa8, 0x88, 0x5b, 0x99, 0x47, 0xcb, 0xad, 0x88, 0x5b, 0x7c, 0x0d, 0x4d, 0x33, 0x6f,
	0x4a, 0xab, 0x65, 0xc7, 0x27, 0x40, 0xa6, 0x3e, 0x9d, 0xeb, 0xc9, 0x67, 0xcc, 0x58, 0x10, 0xf4,
	0x27, 0x41, 0x43, 0x46, 0x7c, 0x19, 0xaf, 0xe9, 0x26, 0x36, 0xfe, 0xd3, 0x82, 0xde, 0x79, 0x48,
	0x89, 0xa0, 0x97, 0xda, 0xb5, 0x4d, 0xe8, 0xdb, 0xa4, 0xf5, 0x1c, 0x3a, 0x4a, 0x4c, 0x13, 0x99,
	0x93, 0x51, 0xd8, 0x13, 0xe5, 0xbc, 0x94, 0x3e, 0xd4, 0x87, 0xf6, 0x9c, 0x46, 0xb3, 0xd0, 0x5b,
	0xc9, 0x06, 0xab, 0xc9, 0x18, 0x59, 0x57, 0x5c, 0xa0, 0x80, 0x88, 0xd9, 0x8d, 0xae, 0xaf, 0x32,
	0xb0, 0x0d, 0xfb, 0x45, 0x96, 0x6a, 0x02, 0xe0, 0x63, 0xe8, 0x5d, 0x50, 0x9f, 0x3e, 0x88, 0x7f,
	0x1c, 0xa6, 0x08, 0xd6, 0x61, 0x4e, 0x60, 0xdf, 0x54, 0xf7, 0x4a, 0x89, 0x66, 0x5b, 0x9c, 0x05,
	0xbc, 0x77, 0x07, 0xad, 0x27, 0x92, 0x03, 0x4d, 0x73, 0x19, 0xe8, 0x2d, 0x89, 0x1d, 0x8b, 0x24,
	0xaf, 0xda, 0xac, 0x48, 0x54, 0x20, 0x39, 0xdd, 0x12, 0xdd, 0xfe, 0x61, 0x01, 0xa4, 0x7e, 0x74,
	0x0c, 0x0d, 0xb5, 0xa2, 0x95, 0x59, 0xaa, 0x06, 0x0d, 0x41, 0x5f, 0x40, 0x47, 0xe9, 0x62, 0xa2,
	0x47, 0xd1, 0x56, 0x5d, 0x3e, 0x51, 0x58, 0x75, 0x69, 0xa0, 0x3e, 0x54, 0x39, 0xe7, 0x76, 0x4d,
	0xee, 0xe8, 0x66, 0xff, 0x32, 0x1e, 0xbb, 0xf1, 0x12, 0xfe, 0x05, 0xaa, 0xe3, 0xf1, 0x38, 0xd5,
	0x9b, 0xf5, 0x48, 0xbd, 0x55, 0x1e, 0xad, 0xb7, 0x6a, 0x4e, 0x6f, 0xf8, 0x14, 0xde, 0xbf, 0x22,
	0xdf, 0xd1, 0x97, 0xbe, 0xaf, 0x4f, 0x60, 0x2c, 0xfb, 0x6c, 0xdb, 0xa9, 0x3d, 0x85, 0x0f, 0xca,
	0xb7, 0xa8, 0xa3, 0x1b, 0xfd, 0x55, 0x01, 0x50, 0xef, 0x0f, 0x59, 0xed, 0x33, 0x68, 0x28, 0x0b,
	0xd9, 0xb9, 0x3a, 0x67, 0x5e, 0x31, 0xce, 0x41, 0xc9, 0x8a, 0xee, 0xa8, 0x1d, 0x74, 0x0d, 0x9d,
	0xdc, 0xb3, 0x02, 0x1d, 0x66, 0xd0, 0x65, 0x0f, 0x11, 0xa7, 0xbf, 0x19, 0x90, 0x44, 0x3d, 0x83,
	0x86, 0x3e, 0x25, 0xbb, 0x78, 0x94, 0x51, 0x19, 0xad, 0xfc, 0x3b, 0x40, 0xd1, 0xca, 0x5d, 0xa6,
	0x39, 0x5a, 0x65, 0x77, 0x7e, 0x8e, 0x56, 0xe9, 0x3d, 0x8c, 0x77, 0x46, 0x7f, 0x5b, 0xd0, 0x31,
	0x74, 0x5f, 0xce, 0x03, 0x8f, 0xa1, 0xd7, 0xd0, 0xcd, 0x6b, 0x16, 0x65, 0xe3, 0x94, 0x0e, 0x1d,
	0xe7, 0xd9, 0x16, 0x44, 0x92, 0xc0, 0x6b, 0xe8, 0xe6, 0x55, 0x9c, 0x0b, 0x5c, 0x3a, 0x0d, 0x72,
	0x81, 0x37, 0x8c, 0x80, 0x9d, 0xd1, 0x3f, 0x16, 0xb4, 0x55, 0x6b, 0xa8, 0x0c, 0xde, 0xc0, 0x3b,
	0x05, 0x99, 0xa3, 0x67, 0x25, 0xcf, 0xbf, 0xfc, 0xc0, 0x70, 0xf0, 0x36, 0x48, 0x92, 0x84, 0x07,
	0x7b, 0x65, 0xcd, 0x88, 0x3e, 0xca, 0xd6, 0x7a, 0x73, 0x83, 0x3b, 0x1f, 0xdf, 0x8b, 0x33, 0xbf,
	0x9a, 0x36, 0xa4, 0xba, 0x3e, 0xfd, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x1b, 0xcd, 0x67, 0x10, 0x08,
	0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OncallInfoClient is the client API for OncallInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OncallInfoClient interface {
	// Oncall can be used to get the current oncaller(s) for the
	// provided rotation.
	Oncall(ctx context.Context, in *OncallRequest, opts ...grpc.CallOption) (*OncallResponse, error)
	// ListRotations lists all configured rotations.
	ListRotations(ctx context.Context, in *ListRotationsRequest, opts ...grpc.CallOption) (*ListRotationsResponse, error)
	// Shifts returns ShiftEntries for a specific time range.
	// Leaving times empty returns all shifts.
	Shifts(ctx context.Context, in *ShiftsRequest, opts ...grpc.CallOption) (*ShiftsResponse, error)
	// MigrationInfo returns ShiftEntries and members together with
	// relevant rotation configuration.
	MigrationInfo(ctx context.Context, in *MigrationInfoRequest, opts ...grpc.CallOption) (*MigrationInfoResponse, error)
}
type oncallInfoPRPCClient struct {
	client *prpc.Client
}

func NewOncallInfoPRPCClient(client *prpc.Client) OncallInfoClient {
	return &oncallInfoPRPCClient{client}
}

func (c *oncallInfoPRPCClient) Oncall(ctx context.Context, in *OncallRequest, opts ...grpc.CallOption) (*OncallResponse, error) {
	out := new(OncallResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "Oncall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoPRPCClient) ListRotations(ctx context.Context, in *ListRotationsRequest, opts ...grpc.CallOption) (*ListRotationsResponse, error) {
	out := new(ListRotationsResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "ListRotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoPRPCClient) Shifts(ctx context.Context, in *ShiftsRequest, opts ...grpc.CallOption) (*ShiftsResponse, error) {
	out := new(ShiftsResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "Shifts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoPRPCClient) MigrationInfo(ctx context.Context, in *MigrationInfoRequest, opts ...grpc.CallOption) (*MigrationInfoResponse, error) {
	out := new(MigrationInfoResponse)
	err := c.client.Call(ctx, "rotangapi.OncallInfo", "MigrationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type oncallInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewOncallInfoClient(cc grpc.ClientConnInterface) OncallInfoClient {
	return &oncallInfoClient{cc}
}

func (c *oncallInfoClient) Oncall(ctx context.Context, in *OncallRequest, opts ...grpc.CallOption) (*OncallResponse, error) {
	out := new(OncallResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/Oncall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoClient) ListRotations(ctx context.Context, in *ListRotationsRequest, opts ...grpc.CallOption) (*ListRotationsResponse, error) {
	out := new(ListRotationsResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/ListRotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoClient) Shifts(ctx context.Context, in *ShiftsRequest, opts ...grpc.CallOption) (*ShiftsResponse, error) {
	out := new(ShiftsResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/Shifts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oncallInfoClient) MigrationInfo(ctx context.Context, in *MigrationInfoRequest, opts ...grpc.CallOption) (*MigrationInfoResponse, error) {
	out := new(MigrationInfoResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.OncallInfo/MigrationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OncallInfoServer is the server API for OncallInfo service.
type OncallInfoServer interface {
	// Oncall can be used to get the current oncaller(s) for the
	// provided rotation.
	Oncall(context.Context, *OncallRequest) (*OncallResponse, error)
	// ListRotations lists all configured rotations.
	ListRotations(context.Context, *ListRotationsRequest) (*ListRotationsResponse, error)
	// Shifts returns ShiftEntries for a specific time range.
	// Leaving times empty returns all shifts.
	Shifts(context.Context, *ShiftsRequest) (*ShiftsResponse, error)
	// MigrationInfo returns ShiftEntries and members together with
	// relevant rotation configuration.
	MigrationInfo(context.Context, *MigrationInfoRequest) (*MigrationInfoResponse, error)
}

// UnimplementedOncallInfoServer can be embedded to have forward compatible implementations.
type UnimplementedOncallInfoServer struct {
}

func (*UnimplementedOncallInfoServer) Oncall(ctx context.Context, req *OncallRequest) (*OncallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Oncall not implemented")
}
func (*UnimplementedOncallInfoServer) ListRotations(ctx context.Context, req *ListRotationsRequest) (*ListRotationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRotations not implemented")
}
func (*UnimplementedOncallInfoServer) Shifts(ctx context.Context, req *ShiftsRequest) (*ShiftsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Shifts not implemented")
}
func (*UnimplementedOncallInfoServer) MigrationInfo(ctx context.Context, req *MigrationInfoRequest) (*MigrationInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MigrationInfo not implemented")
}

func RegisterOncallInfoServer(s prpc.Registrar, srv OncallInfoServer) {
	s.RegisterService(&_OncallInfo_serviceDesc, srv)
}

func _OncallInfo_Oncall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OncallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).Oncall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/Oncall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).Oncall(ctx, req.(*OncallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OncallInfo_ListRotations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRotationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).ListRotations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/ListRotations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).ListRotations(ctx, req.(*ListRotationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OncallInfo_Shifts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShiftsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).Shifts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/Shifts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).Shifts(ctx, req.(*ShiftsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OncallInfo_MigrationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MigrationInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OncallInfoServer).MigrationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.OncallInfo/MigrationInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OncallInfoServer).MigrationInfo(ctx, req.(*MigrationInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OncallInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rotangapi.OncallInfo",
	HandlerType: (*OncallInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Oncall",
			Handler:    _OncallInfo_Oncall_Handler,
		},
		{
			MethodName: "ListRotations",
			Handler:    _OncallInfo_ListRotations_Handler,
		},
		{
			MethodName: "Shifts",
			Handler:    _OncallInfo_Shifts_Handler,
		},
		{
			MethodName: "MigrationInfo",
			Handler:    _OncallInfo_MigrationInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/rotang/proto/rotangapi/rotangapi.proto",
}

// RotationAdminClient is the client API for RotationAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RotationAdminClient interface {
	// CreateExternal creates a new external rotation.
	// An external rotation scrapes a calendar to populate it's shifts.
	CreateExternal(ctx context.Context, in *CreateExternalRequest, opts ...grpc.CallOption) (*CreateExternalResponse, error)
	// DeleteExternal deletes an existing external rotation.
	DeleteExternal(ctx context.Context, in *DeleteExternalRequest, opts ...grpc.CallOption) (*DeleteExternalResponse, error)
}
type rotationAdminPRPCClient struct {
	client *prpc.Client
}

func NewRotationAdminPRPCClient(client *prpc.Client) RotationAdminClient {
	return &rotationAdminPRPCClient{client}
}

func (c *rotationAdminPRPCClient) CreateExternal(ctx context.Context, in *CreateExternalRequest, opts ...grpc.CallOption) (*CreateExternalResponse, error) {
	out := new(CreateExternalResponse)
	err := c.client.Call(ctx, "rotangapi.RotationAdmin", "CreateExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationAdminPRPCClient) DeleteExternal(ctx context.Context, in *DeleteExternalRequest, opts ...grpc.CallOption) (*DeleteExternalResponse, error) {
	out := new(DeleteExternalResponse)
	err := c.client.Call(ctx, "rotangapi.RotationAdmin", "DeleteExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type rotationAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewRotationAdminClient(cc grpc.ClientConnInterface) RotationAdminClient {
	return &rotationAdminClient{cc}
}

func (c *rotationAdminClient) CreateExternal(ctx context.Context, in *CreateExternalRequest, opts ...grpc.CallOption) (*CreateExternalResponse, error) {
	out := new(CreateExternalResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.RotationAdmin/CreateExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rotationAdminClient) DeleteExternal(ctx context.Context, in *DeleteExternalRequest, opts ...grpc.CallOption) (*DeleteExternalResponse, error) {
	out := new(DeleteExternalResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.RotationAdmin/DeleteExternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RotationAdminServer is the server API for RotationAdmin service.
type RotationAdminServer interface {
	// CreateExternal creates a new external rotation.
	// An external rotation scrapes a calendar to populate it's shifts.
	CreateExternal(context.Context, *CreateExternalRequest) (*CreateExternalResponse, error)
	// DeleteExternal deletes an existing external rotation.
	DeleteExternal(context.Context, *DeleteExternalRequest) (*DeleteExternalResponse, error)
}

// UnimplementedRotationAdminServer can be embedded to have forward compatible implementations.
type UnimplementedRotationAdminServer struct {
}

func (*UnimplementedRotationAdminServer) CreateExternal(ctx context.Context, req *CreateExternalRequest) (*CreateExternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExternal not implemented")
}
func (*UnimplementedRotationAdminServer) DeleteExternal(ctx context.Context, req *DeleteExternalRequest) (*DeleteExternalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExternal not implemented")
}

func RegisterRotationAdminServer(s prpc.Registrar, srv RotationAdminServer) {
	s.RegisterService(&_RotationAdmin_serviceDesc, srv)
}

func _RotationAdmin_CreateExternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationAdminServer).CreateExternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.RotationAdmin/CreateExternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationAdminServer).CreateExternal(ctx, req.(*CreateExternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RotationAdmin_DeleteExternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExternalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RotationAdminServer).DeleteExternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.RotationAdmin/DeleteExternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RotationAdminServer).DeleteExternal(ctx, req.(*DeleteExternalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RotationAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rotangapi.RotationAdmin",
	HandlerType: (*RotationAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExternal",
			Handler:    _RotationAdmin_CreateExternal_Handler,
		},
		{
			MethodName: "DeleteExternal",
			Handler:    _RotationAdmin_DeleteExternal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/rotang/proto/rotangapi/rotangapi.proto",
}

// MemberAdminClient is the client API for MemberAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemberAdminClient interface {
	// RotationMembers returns the members of a rotation together with when they were last OnCall and OOO information.
	// Owner permissions for the rotation is required.
	RotationMembers(ctx context.Context, in *RotationMembersRequest, opts ...grpc.CallOption) (*RotationMembersResponse, error)
	// MakeAllMembersOwners makes all rotation members part of the rotation Owners.
	// In cases where the caller is an owner of a rotation but not a member the caller will be added
	// to the owners along with all the members.
	MakeAllMembersOwners(ctx context.Context, in *MakeAllMembersOwnersRequest, opts ...grpc.CallOption) (*MakeAllMembersOwnersResponse, error)
}
type memberAdminPRPCClient struct {
	client *prpc.Client
}

func NewMemberAdminPRPCClient(client *prpc.Client) MemberAdminClient {
	return &memberAdminPRPCClient{client}
}

func (c *memberAdminPRPCClient) RotationMembers(ctx context.Context, in *RotationMembersRequest, opts ...grpc.CallOption) (*RotationMembersResponse, error) {
	out := new(RotationMembersResponse)
	err := c.client.Call(ctx, "rotangapi.MemberAdmin", "RotationMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAdminPRPCClient) MakeAllMembersOwners(ctx context.Context, in *MakeAllMembersOwnersRequest, opts ...grpc.CallOption) (*MakeAllMembersOwnersResponse, error) {
	out := new(MakeAllMembersOwnersResponse)
	err := c.client.Call(ctx, "rotangapi.MemberAdmin", "MakeAllMembersOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type memberAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewMemberAdminClient(cc grpc.ClientConnInterface) MemberAdminClient {
	return &memberAdminClient{cc}
}

func (c *memberAdminClient) RotationMembers(ctx context.Context, in *RotationMembersRequest, opts ...grpc.CallOption) (*RotationMembersResponse, error) {
	out := new(RotationMembersResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.MemberAdmin/RotationMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memberAdminClient) MakeAllMembersOwners(ctx context.Context, in *MakeAllMembersOwnersRequest, opts ...grpc.CallOption) (*MakeAllMembersOwnersResponse, error) {
	out := new(MakeAllMembersOwnersResponse)
	err := c.cc.Invoke(ctx, "/rotangapi.MemberAdmin/MakeAllMembersOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemberAdminServer is the server API for MemberAdmin service.
type MemberAdminServer interface {
	// RotationMembers returns the members of a rotation together with when they were last OnCall and OOO information.
	// Owner permissions for the rotation is required.
	RotationMembers(context.Context, *RotationMembersRequest) (*RotationMembersResponse, error)
	// MakeAllMembersOwners makes all rotation members part of the rotation Owners.
	// In cases where the caller is an owner of a rotation but not a member the caller will be added
	// to the owners along with all the members.
	MakeAllMembersOwners(context.Context, *MakeAllMembersOwnersRequest) (*MakeAllMembersOwnersResponse, error)
}

// UnimplementedMemberAdminServer can be embedded to have forward compatible implementations.
type UnimplementedMemberAdminServer struct {
}

func (*UnimplementedMemberAdminServer) RotationMembers(ctx context.Context, req *RotationMembersRequest) (*RotationMembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RotationMembers not implemented")
}
func (*UnimplementedMemberAdminServer) MakeAllMembersOwners(ctx context.Context, req *MakeAllMembersOwnersRequest) (*MakeAllMembersOwnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeAllMembersOwners not implemented")
}

func RegisterMemberAdminServer(s prpc.Registrar, srv MemberAdminServer) {
	s.RegisterService(&_MemberAdmin_serviceDesc, srv)
}

func _MemberAdmin_RotationMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RotationMembersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAdminServer).RotationMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.MemberAdmin/RotationMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAdminServer).RotationMembers(ctx, req.(*RotationMembersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemberAdmin_MakeAllMembersOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeAllMembersOwnersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberAdminServer).MakeAllMembersOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rotangapi.MemberAdmin/MakeAllMembersOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberAdminServer).MakeAllMembersOwners(ctx, req.(*MakeAllMembersOwnersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MemberAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rotangapi.MemberAdmin",
	HandlerType: (*MemberAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RotationMembers",
			Handler:    _MemberAdmin_RotationMembers_Handler,
		},
		{
			MethodName: "MakeAllMembersOwners",
			Handler:    _MemberAdmin_MakeAllMembersOwners_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infra/appengine/rotang/proto/rotangapi/rotangapi.proto",
}
