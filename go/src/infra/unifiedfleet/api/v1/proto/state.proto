// Copyright 2020 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package unifiedfleet.api.v1.proto;

option go_package = "infra/unifiedfleet/api/v1/proto;ufspb";

import "google/protobuf/timestamp.proto";

// Next tag: 10
enum State {
  STATE_UNSPECIFIED = 0;
  // Equlavant to the concept in ChromeOS lab: needs_deploy
  STATE_REGISTERED = 1;
  // Deployed but not placed in prod. It's only a temporarily state for browser machine
  // as there's no service to push a deployed machine to prod automatically yet.
  STATE_DEPLOYED_PRE_SERVING = 9;
  // Deployed to the prod infrastructure, but for testing.
  STATE_DEPLOYED_TESTING = 2;
  // Deployed to the prod infrastructure, serving.
  STATE_SERVING = 3;
  // Deployed to the prod infrastructure, but needs repair.
  STATE_NEEDS_REPAIR = 5;
  // Deployed to the prod infrastructure, but get disabled.
  STATE_DISABLED = 6;
  // Deployed to the prod infrastructure, but get reserved (e.g. locked).
  STATE_RESERVED = 7;
  // Decommissioned from the prod infrastructure, but still leave in UFS record.
  STATE_DECOMMISSIONED = 8;
}

// There's no exposed API for users to directly retrieve a state record.
//
// Ideally, state record can only be modified internally by UFS after some essential
// preconditions are fulfilled.
//
// Users will focus on the tasks triggered by any state change instead of the state
// itself, e.g. once the state of a machine is changed to registered, lab admins will
// know it by founding more machines are listed for waiting for further configurations,
// instead of actively monitoring it by any tooling.
message StateRecord {
  // The string resource_name could be an ID of a rack, machine, RPM and switches.
  // It can also be the ID of virtual concepts, e.g. LSE and vlan.
  // The format of the resource name will be “racks/XXX” or “rpms/XXX” to help to
  // distinguish the type of the resource.
  string resource_name = 1;
  State state = 2;
  string user = 3;
  string ticket = 4;
  string description = 5;
  // Record the last update timestamp of this machine (In UTC timezone)
  google.protobuf.Timestamp update_time = 6;
}
